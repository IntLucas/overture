//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-09 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.quotes.*;
import org.overturetool.ast.imp.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class TestData {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ClassWithTypes KEEP=NO
  public static final OmlDocument ClassWithTypes;
// ***** VDMTOOLS END Name=ClassWithTypes

// ***** VDMTOOLS START Name=ClassSimpleOperation KEEP=NO
  public static final OmlDocument ClassSimpleOperation;
// ***** VDMTOOLS END Name=ClassSimpleOperation

// ***** VDMTOOLS START Name=ClassInstanceVar KEEP=NO
  public static final OmlDocument ClassInstanceVar;
// ***** VDMTOOLS END Name=ClassInstanceVar

// ***** VDMTOOLS START Name=ClassAbstractOperation KEEP=NO
  public static final OmlDocument ClassAbstractOperation;
// ***** VDMTOOLS END Name=ClassAbstractOperation

// ***** VDMTOOLS START Name=ClassWithValues KEEP=NO
  public static final OmlDocument ClassWithValues;
// ***** VDMTOOLS END Name=ClassWithValues

// ***** VDMTOOLS START Name=ClassComplete KEEP=NO
  public static final OmlDocument ClassComplete;
// ***** VDMTOOLS END Name=ClassComplete

// ***** VDMTOOLS START Name=ClassAssociation KEEP=NO
  public static final OmlDocument ClassAssociation;
// ***** VDMTOOLS END Name=ClassAssociation

// ***** VDMTOOLS START Name=ClassAssociationN KEEP=NO
  public static final OmlDocument ClassAssociationN;
// ***** VDMTOOLS END Name=ClassAssociationN

// ***** VDMTOOLS START Name=ClassInstanceUnionType KEEP=NO
  public static final OmlDocument ClassInstanceUnionType;
// ***** VDMTOOLS END Name=ClassInstanceUnionType

// ***** VDMTOOLS START Name=ClassInheritance KEEP=NO
  public static final OmlDocument ClassInheritance;
// ***** VDMTOOLS END Name=ClassInheritance

// ***** VDMTOOLS START Name=ClassTemplates KEEP=NO
  public static final OmlDocument ClassTemplates;
// ***** VDMTOOLS END Name=ClassTemplates

// ***** VDMTOOLS START Name=ClassWithMap KEEP=NO
  public static final OmlDocument ClassWithMap;
// ***** VDMTOOLS END Name=ClassWithMap

// ***** VDMTOOLS START Name=ClassSimpleFunction KEEP=NO
  public static final OmlDocument ClassSimpleFunction;
// ***** VDMTOOLS END Name=ClassSimpleFunction

// ***** VDMTOOLS START Name=TC KEEP=NO
  public static final OmlDocument TC;
// ***** VDMTOOLS END Name=TC

// ***** VDMTOOLS START Name=ClassActive KEEP=NO
  public static final OmlDocument ClassActive;
// ***** VDMTOOLS END Name=ClassActive

// ***** VDMTOOLS START Name=ClassWithMap2 KEEP=NO
  public static final OmlDocument ClassWithMap2;
// ***** VDMTOOLS END Name=ClassWithMap2


// ***** VDMTOOLS START Name=static KEEP=NO
  static {

    OmlDocument ClassWithTypestemp = null;
    OmlDocument ClassSimpleOperationtemp = null;
    OmlDocument ClassInstanceVartemp = null;
    OmlDocument ClassAbstractOperationtemp = null;
    OmlDocument ClassWithValuestemp = null;
    OmlDocument ClassCompletetemp = null;
    OmlDocument ClassAssociationtemp = null;
    OmlDocument ClassAssociationNtemp = null;
    OmlDocument ClassInstanceUnionTypetemp = null;
    OmlDocument ClassInheritancetemp = null;
    OmlDocument ClassTemplatestemp = null;
    OmlDocument ClassWithMaptemp = null;
    OmlDocument ClassSimpleFunctiontemp = null;
    OmlDocument TCtemp = null;
    OmlDocument ClassActivetemp = null;
    OmlDocument ClassWithMap2temp = null;
    {
      try {

        OmlDocument tmpVal_1 = null;
        OmlSpecifications arg_5757 = null;
        Vector arg_5759 = null;
        OmlClass e_seq_5762 = null;
        Vector arg_5766 = null;
        OmlTypeDefinitions e_seq_5770 = null;
        Vector arg_5771 = null;
        arg_5771 = new Vector();
        arg_5771.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(4), new Long(1)), new Long(4), new Long(1)), new OmlSimpleType(new String("String"), new OmlSeq0Type(new OmlCharType(new Long(4), new Long(24)), new Long(4), new Long(17)), null, new Long(4), new Long(17)), new Long(4), new Long(8)));
        arg_5771.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlSimpleType(new String("Integer"), new OmlIntType(new Long(5), new Long(18)), null, new Long(5), new Long(18)), new Long(5), new Long(8)));
        arg_5771.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(6), new Long(1)), new Long(6), new Long(1)), new OmlSimpleType(new String("Character"), new OmlCharType(new Long(6), new Long(20)), null, new Long(6), new Long(20)), new Long(6), new Long(8)));
        arg_5771.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlSimpleType(new String("MySet"), new OmlSetType(new OmlIntType(new Long(7), new Long(23)), new Long(7), new Long(16)), null, new Long(7), new Long(16)), new Long(7), new Long(8)));
        e_seq_5770 = new OmlTypeDefinitions(arg_5771, new Long(3), new Long(1));
        arg_5766 = new Vector();
        arg_5766.add(e_seq_5770);
        e_seq_5762 = new OmlClass(new String("ClassWithTypes"), new Vector(), null, arg_5766, new Boolean(false), new Long(1), new Long(1));
        arg_5759 = new Vector();
        arg_5759.add(e_seq_5762);
        arg_5757 = new OmlSpecifications(arg_5759, new Long(0), new Long(0));
        Vector arg_5758 = null;
        arg_5758 = new Vector();
        arg_5758.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassWithTypes"), new Long(2)));
        arg_5758.add(new OmlLexem(new Long(3), new Long(1), new Long(420), new String("types"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(15), new Long(299), new String("="), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(17), new Long(390), new String("seq"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(24), new Long(274), new String("char"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(4), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("Integer"), new Long(2)));
        arg_5758.add(new OmlLexem(new Long(5), new Long(16), new Long(299), new String("="), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(5), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(5), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(6), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(6), new Long(8), new Long(433), new String("Character"), new Long(2)));
        arg_5758.add(new OmlLexem(new Long(6), new Long(18), new Long(299), new String("="), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(6), new Long(20), new Long(274), new String("char"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(6), new Long(24), new Long(59), new String(";"), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("MySet"), new Long(2)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(14), new Long(299), new String("="), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(16), new Long(393), new String("set"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(20), new Long(360), new String("of"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(23), new Long(324), new String("int"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(7), new Long(26), new Long(59), new String(";"), new Long(0)));
        arg_5758.add(new OmlLexem(new Long(8), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_5758.add(new OmlLexem(new Long(8), new Long(5), new Long(433), new String("ClassWithTypes"), new Long(2)));
        tmpVal_1 = new OmlDocument(new String("C:\\Users\\kela\\Documents\\Daimi\\Master Thesise\\SVN\\VDMTools\\Tools\\parser\\ClassWithTypes.tex"), arg_5757, arg_5758);
        ClassWithTypestemp = (OmlDocument) tmpVal_1;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassWithTypes = ClassWithTypestemp;
    {
      try {

        OmlDocument tmpVal_6034 = null;
        OmlSpecifications arg_6036 = null;
        Vector arg_6038 = null;
        OmlClass e_seq_6041 = null;
        Vector arg_6045 = null;
        OmlTypeDefinitions e_seq_6049 = null;
        Vector arg_6050 = null;
        arg_6050 = new Vector();
        arg_6050.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(4), new Long(1)), new Long(4), new Long(1)), new OmlSimpleType(new String("String"), new OmlSeq0Type(new OmlCharType(new Long(4), new Long(24)), new Long(4), new Long(17)), null, new Long(4), new Long(17)), new Long(4), new Long(8)));
        arg_6050.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlSimpleType(new String("Integer"), new OmlIntType(new Long(5), new Long(18)), null, new Long(5), new Long(18)), new Long(5), new Long(8)));
        arg_6050.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(6), new Long(1)), new Long(6), new Long(1)), new OmlSimpleType(new String("Character"), new OmlCharType(new Long(6), new Long(20)), null, new Long(6), new Long(20)), new Long(6), new Long(8)));
        arg_6050.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlSimpleType(new String("MySet"), new OmlSetType(new OmlIntType(new Long(7), new Long(23)), new Long(7), new Long(16)), null, new Long(7), new Long(16)), new Long(7), new Long(8)));
        e_seq_6049 = new OmlTypeDefinitions(arg_6050, new Long(3), new Long(1));
        arg_6045 = new Vector();
        arg_6045.add(e_seq_6049);
        OmlOperationDefinitions e_seq_6139 = null;
        Vector arg_6140 = null;
        OmlOperationDefinition e_seq_6143 = null;
        OmlExplicitOperation arg_6145 = null;
        Vector arg_6158 = null;
        arg_6158 = new Vector();
        arg_6158.add(new OmlPatternIdentifier(new String("parm1"), new Long(12), new Long(12)));
        arg_6145 = new OmlExplicitOperation(new String("HelloWorld"), new OmlOperationType(new OmlIntType(new Long(11), new Long(21)), new OmlBoolType(new Long(11), new Long(29)), new Long(11), new Long(21)), arg_6158, new OmlOperationBody(new OmlReturnStatement(new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(true), new Long(12), new Long(29)), new Long(12), new Long(29)), new Long(12), new Long(22)), new Boolean(false), new Boolean(false), new Long(12), new Long(22)), new OmlOperationTrailer(null, null, null, null, new Long(0), new Long(0)), new Long(11), new Long(8));
        e_seq_6143 = new OmlOperationDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(11), new Long(1)), new Long(11), new Long(1)), arg_6145, new Long(11), new Long(8));
        arg_6140 = new Vector();
        arg_6140.add(e_seq_6143);
        e_seq_6139 = new OmlOperationDefinitions(arg_6140, new Long(9), new Long(1));
        arg_6045.add(e_seq_6139);
        e_seq_6041 = new OmlClass(new String("TestClassSimpleOper"), new Vector(), null, arg_6045, new Boolean(false), new Long(1), new Long(1));
        arg_6038 = new Vector();
        arg_6038.add(e_seq_6041);
        arg_6036 = new OmlSpecifications(arg_6038, new Long(0), new Long(0));
        Vector arg_6037 = null;
        arg_6037 = new Vector();
        arg_6037.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("TestClassSimpleOper"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(3), new Long(1), new Long(420), new String("types"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(15), new Long(299), new String("="), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(17), new Long(390), new String("seq"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(24), new Long(274), new String("char"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(4), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("Integer"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(5), new Long(16), new Long(299), new String("="), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(5), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(5), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(6), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(6), new Long(8), new Long(433), new String("Character"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(6), new Long(18), new Long(299), new String("="), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(6), new Long(20), new Long(274), new String("char"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(6), new Long(24), new Long(59), new String(";"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("MySet"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(14), new Long(299), new String("="), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(16), new Long(393), new String("set"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(20), new Long(360), new String("of"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(23), new Long(324), new String("int"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(7), new Long(26), new Long(59), new String(";"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(9), new Long(1), new Long(361), new String("operations"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(8), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(21), new Long(324), new String("int"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(25), new Long(362), new String("==>"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(11), new Long(29), new Long(270), new String("bool"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(1), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(11), new Long(40), new String("("), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(12), new Long(433), new String("parm1"), new Long(2)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(17), new Long(41), new String(")"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(19), new Long(333), new String("=="), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(22), new Long(384), new String("return"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(29), new Long(430), new String("true"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(12), new Long(33), new Long(59), new String(";"), new Long(0)));
        arg_6037.add(new OmlLexem(new Long(17), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_6037.add(new OmlLexem(new Long(17), new Long(5), new Long(433), new String("TestClassSimpleOper"), new Long(2)));
        tmpVal_6034 = new OmlDocument(new String("C:\\Users\\kela\\Documents\\Daimi\\Master Thesise\\SVN\\VDMTools\\Tools\\parser\\TestClassSimpleOperation.tex"), arg_6036, arg_6037);
        ClassSimpleOperationtemp = (OmlDocument) tmpVal_6034;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassSimpleOperation = ClassSimpleOperationtemp;
    {
      try {

        OmlDocument tmpVal_6459 = null;
        OmlSpecifications arg_6461 = null;
        Vector arg_6463 = null;
        OmlClass e_seq_6466 = null;
        Vector arg_6470 = null;
        OmlTypeDefinitions e_seq_6474 = null;
        Vector arg_6475 = null;
        arg_6475 = new Vector();
        arg_6475.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(4), new Long(1)), new Long(4), new Long(1)), new OmlSimpleType(new String("String"), new OmlSeq0Type(new OmlCharType(new Long(4), new Long(24)), new Long(4), new Long(17)), null, new Long(4), new Long(17)), new Long(4), new Long(8)));
        arg_6475.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlSimpleType(new String("Integer"), new OmlIntType(new Long(5), new Long(18)), null, new Long(5), new Long(18)), new Long(5), new Long(8)));
        arg_6475.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(6), new Long(1)), new Long(6), new Long(1)), new OmlSimpleType(new String("Character"), new OmlCharType(new Long(6), new Long(20)), null, new Long(6), new Long(20)), new Long(6), new Long(8)));
        arg_6475.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlSimpleType(new String("MySet"), new OmlSetType(new OmlIntType(new Long(7), new Long(23)), new Long(7), new Long(16)), null, new Long(7), new Long(16)), new Long(7), new Long(8)));
        e_seq_6474 = new OmlTypeDefinitions(arg_6475, new Long(3), new Long(1));
        arg_6470 = new Vector();
        arg_6470.add(e_seq_6474);
        OmlInstanceVariableDefinitions e_seq_6564 = null;
        Vector arg_6565 = null;
        arg_6565 = new Vector();
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(11), new Long(1)), new Long(11), new Long(1)), new OmlAssignmentDefinition(new String("att1SeqOfChar"), new OmlSeq0Type(new OmlCharType(new Long(11), new Long(31)), new Long(11), new Long(24)), null, new Long(11), new Long(8)), new Long(11), new Long(1)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(12), new Long(1)), new Long(12), new Long(1)), new OmlAssignmentDefinition(new String("att4SeqOfCharDefault"), new OmlSeq0Type(new OmlCharType(new Long(12), new Long(38)), new Long(12), new Long(31)), new OmlSymbolicLiteralExpression(new OmlTextLiteral(new String("Hello World"), new Long(12), new Long(44)), new Long(12), new Long(44)), new Long(12), new Long(8)), new Long(12), new Long(1)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(13), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att2String"), new OmlTypeName(new OmlName(null, new String("String"), new Long(13), new Long(14)), new Long(13), new Long(14)), null, new Long(13), new Long(1)), new Long(0), new Long(0)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(14), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att3Int"), new OmlIntType(new Long(14), new Long(11)), null, new Long(14), new Long(1)), new Long(0), new Long(0)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(0), new Long(15), new Long(1)), new Long(15), new Long(1)), new OmlAssignmentDefinition(new String("att5Protected"), new OmlIntType(new Long(15), new Long(27)), null, new Long(15), new Long(11)), new Long(15), new Long(1)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(16), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att6Set"), new OmlSetType(new OmlIntType(new Long(16), new Long(18)), new Long(16), new Long(11)), null, new Long(16), new Long(1)), new Long(0), new Long(0)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(17), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att7Seq"), new OmlSeq1Type(new OmlCharType(new Long(17), new Long(19)), new Long(17), new Long(11)), null, new Long(17), new Long(1)), new Long(0), new Long(0)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(18), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att8Nat1"), new OmlNat1Type(new Long(18), new Long(12)), null, new Long(18), new Long(1)), new Long(0), new Long(0)));
        arg_6565.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(19), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att9Real"), new OmlRealType(new Long(19), new Long(12)), null, new Long(19), new Long(1)), new Long(0), new Long(0)));
        e_seq_6564 = new OmlInstanceVariableDefinitions(arg_6565, new Long(9), new Long(1));
        arg_6470.add(e_seq_6564);
        e_seq_6466 = new OmlClass(new String("ClassInstanceVar"), new Vector(), null, arg_6470, new Boolean(false), new Long(1), new Long(1));
        arg_6463 = new Vector();
        arg_6463.add(e_seq_6466);
        arg_6461 = new OmlSpecifications(arg_6463, new Long(0), new Long(0));
        Vector arg_6462 = null;
        arg_6462 = new Vector();
        arg_6462.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassInstanceVar"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(3), new Long(1), new Long(420), new String("types"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(15), new Long(299), new String("="), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(17), new Long(390), new String("seq"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(24), new Long(274), new String("char"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(4), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("Integer"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(5), new Long(16), new Long(299), new String("="), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(5), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(5), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(6), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(6), new Long(8), new Long(433), new String("Character"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(6), new Long(18), new Long(299), new String("="), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(6), new Long(20), new Long(274), new String("char"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(6), new Long(24), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("MySet"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(14), new Long(299), new String("="), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(16), new Long(393), new String("set"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(20), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(23), new Long(324), new String("int"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(7), new Long(26), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(9), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(9), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(8), new Long(433), new String("att1SeqOfChar"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(22), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(24), new Long(390), new String("seq"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(28), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(31), new Long(274), new String("char"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(11), new Long(35), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(8), new Long(433), new String("att4SeqOfCharDefault"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(29), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(31), new Long(390), new String("seq"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(35), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(38), new Long(274), new String("char"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(42), new Long(265), new String(":="), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(44), new Long(437), new String("\"Hello World\""), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(12), new Long(57), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(13), new Long(1), new Long(433), new String("att2String"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(13), new Long(12), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(13), new Long(14), new Long(433), new String("String"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(13), new Long(20), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(14), new Long(1), new Long(433), new String("att3Int"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(14), new Long(9), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(14), new Long(11), new Long(324), new String("int"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(14), new Long(14), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(15), new Long(1), new Long(374), new String("protected"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(15), new Long(11), new Long(433), new String("att5Protected"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(15), new Long(25), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(15), new Long(27), new Long(324), new String("int"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(15), new Long(30), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(1), new Long(433), new String("att6Set"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(9), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(11), new Long(393), new String("set"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(15), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(16), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(1), new Long(433), new String("att7Seq"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(9), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(11), new Long(391), new String("seq1"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(16), new Long(360), new String("of"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(19), new Long(274), new String("char"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(17), new Long(23), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(18), new Long(1), new Long(433), new String("att8Nat1"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(18), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(18), new Long(12), new Long(353), new String("nat1"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(18), new Long(16), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(19), new Long(1), new Long(433), new String("att9Real"), new Long(2)));
        arg_6462.add(new OmlLexem(new Long(19), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(19), new Long(12), new Long(380), new String("real"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(19), new Long(16), new Long(59), new String(";"), new Long(0)));
        arg_6462.add(new OmlLexem(new Long(22), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_6462.add(new OmlLexem(new Long(22), new Long(5), new Long(433), new String("ClassInstanceVar"), new Long(2)));
        tmpVal_6459 = new OmlDocument(new String("ClassInstanceVar.vpp"), arg_6461, arg_6462);
        ClassInstanceVartemp = (OmlDocument) tmpVal_6459;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassInstanceVar = ClassInstanceVartemp;
    {
      try {

        OmlDocument tmpVal_7251 = null;
        OmlSpecifications arg_7253 = null;
        Vector arg_7255 = null;
        OmlClass e_seq_7258 = null;
        Vector arg_7262 = null;
        OmlTypeDefinitions e_seq_7266 = null;
        Vector arg_7267 = null;
        arg_7267 = new Vector();
        arg_7267.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(4), new Long(1)), new Long(4), new Long(1)), new OmlSimpleType(new String("String"), new OmlSeq0Type(new OmlCharType(new Long(4), new Long(24)), new Long(4), new Long(17)), null, new Long(4), new Long(17)), new Long(4), new Long(8)));
        arg_7267.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlSimpleType(new String("Integer"), new OmlIntType(new Long(5), new Long(18)), null, new Long(5), new Long(18)), new Long(5), new Long(8)));
        arg_7267.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(6), new Long(1)), new Long(6), new Long(1)), new OmlSimpleType(new String("Character"), new OmlCharType(new Long(6), new Long(20)), null, new Long(6), new Long(20)), new Long(6), new Long(8)));
        arg_7267.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlSimpleType(new String("MySet"), new OmlSetType(new OmlIntType(new Long(7), new Long(23)), new Long(7), new Long(16)), null, new Long(7), new Long(16)), new Long(7), new Long(8)));
        e_seq_7266 = new OmlTypeDefinitions(arg_7267, new Long(3), new Long(1));
        arg_7262 = new Vector();
        arg_7262.add(e_seq_7266);
        OmlOperationDefinitions e_seq_7356 = null;
        Vector arg_7357 = null;
        OmlOperationDefinition e_seq_7360 = null;
        OmlExplicitOperation arg_7362 = null;
        Vector arg_7375 = null;
        arg_7375 = new Vector();
        arg_7375.add(new OmlPatternIdentifier(new String("parm1"), new Long(12), new Long(12)));
        arg_7362 = new OmlExplicitOperation(new String("HelloWorld"), new OmlOperationType(new OmlIntType(new Long(11), new Long(21)), new OmlBoolType(new Long(11), new Long(29)), new Long(11), new Long(21)), arg_7375, new OmlOperationBody(null, new Boolean(false), new Boolean(true), new Long(12), new Long(22)), new OmlOperationTrailer(null, null, null, null, new Long(0), new Long(0)), new Long(11), new Long(8));
        e_seq_7360 = new OmlOperationDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(11), new Long(1)), new Long(11), new Long(1)), arg_7362, new Long(11), new Long(8));
        arg_7357 = new Vector();
        arg_7357.add(e_seq_7360);
        e_seq_7356 = new OmlOperationDefinitions(arg_7357, new Long(9), new Long(1));
        arg_7262.add(e_seq_7356);
        e_seq_7258 = new OmlClass(new String("ClassAbstractOperation"), new Vector(), null, arg_7262, new Boolean(false), new Long(1), new Long(1));
        arg_7255 = new Vector();
        arg_7255.add(e_seq_7258);
        arg_7253 = new OmlSpecifications(arg_7255, new Long(0), new Long(0));
        Vector arg_7254 = null;
        arg_7254 = new Vector();
        arg_7254.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassAbstractOperation"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(3), new Long(1), new Long(420), new String("types"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(15), new Long(299), new String("="), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(17), new Long(390), new String("seq"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(24), new Long(274), new String("char"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(4), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("Integer"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(5), new Long(16), new Long(299), new String("="), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(5), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(5), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(6), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(6), new Long(8), new Long(433), new String("Character"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(6), new Long(18), new Long(299), new String("="), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(6), new Long(20), new Long(274), new String("char"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(6), new Long(24), new Long(59), new String(";"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("MySet"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(14), new Long(299), new String("="), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(16), new Long(393), new String("set"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(20), new Long(360), new String("of"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(23), new Long(324), new String("int"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(7), new Long(26), new Long(59), new String(";"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(9), new Long(1), new Long(361), new String("operations"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(8), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(21), new Long(324), new String("int"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(25), new Long(362), new String("==>"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(11), new Long(29), new Long(270), new String("bool"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(1), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(11), new Long(40), new String("("), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(12), new Long(433), new String("parm1"), new Long(2)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(17), new Long(41), new String(")"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(19), new Long(333), new String("=="), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(22), new Long(329), new String("is"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(25), new Long(404), new String("subclass"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(34), new Long(383), new String("responsibility"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(12), new Long(48), new Long(59), new String(";"), new Long(0)));
        arg_7254.add(new OmlLexem(new Long(17), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_7254.add(new OmlLexem(new Long(17), new Long(5), new Long(433), new String("ClassAbstractOperation"), new Long(2)));
        tmpVal_7251 = new OmlDocument(new String("C:\\Users\\kela\\Documents\\Daimi\\Master Thesise\\SVN\\VDMTools\\Tools\\parser\\ClassAbstractOperation.tex"), arg_7253, arg_7254);
        ClassAbstractOperationtemp = (OmlDocument) tmpVal_7251;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassAbstractOperation = ClassAbstractOperationtemp;
    {
      try {

        OmlDocument tmpVal_7673 = null;
        OmlSpecifications arg_7675 = null;
        Vector arg_7677 = null;
        OmlClass e_seq_7680 = null;
        Vector arg_7684 = null;
        OmlValueDefinitions e_seq_7688 = null;
        Vector arg_7689 = null;
        arg_7689 = new Vector();
        arg_7689.add(new OmlValueDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlValueShape(new OmlPatternIdentifier(new String("val1"), new Long(5), new Long(8)), new OmlSeq0Type(new OmlCharType(new Long(5), new Long(22)), new Long(5), new Long(15)), new OmlSymbolicLiteralExpression(new OmlTextLiteral(new String("Hello World"), new Long(5), new Long(29)), new Long(5), new Long(29)), new Long(5), new Long(8)), new Long(5), new Long(8)));
        e_seq_7688 = new OmlValueDefinitions(arg_7689, new Long(3), new Long(1));
        arg_7684 = new Vector();
        arg_7684.add(e_seq_7688);
        e_seq_7680 = new OmlClass(new String("ClassWithValues"), new Vector(), null, arg_7684, new Boolean(false), new Long(1), new Long(1));
        arg_7677 = new Vector();
        arg_7677.add(e_seq_7680);
        arg_7675 = new OmlSpecifications(arg_7677, new Long(0), new Long(0));
        Vector arg_7676 = null;
        arg_7676 = new Vector();
        arg_7676.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassWithValues"), new Long(2)));
        arg_7676.add(new OmlLexem(new Long(3), new Long(1), new Long(422), new String("values"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("val1"), new Long(2)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(13), new Long(58), new String(":"), new Long(0)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(15), new Long(390), new String("seq"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(19), new Long(360), new String("of"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(22), new Long(274), new String("char"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(27), new Long(299), new String("="), new Long(0)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(29), new Long(437), new String("\"Hello World\""), new Long(0)));
        arg_7676.add(new OmlLexem(new Long(5), new Long(42), new Long(59), new String(";"), new Long(0)));
        arg_7676.add(new OmlLexem(new Long(8), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_7676.add(new OmlLexem(new Long(8), new Long(5), new Long(433), new String("ClassWithValues"), new Long(2)));
        tmpVal_7673 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassWithValues.tex"), arg_7675, arg_7676);
        ClassWithValuestemp = (OmlDocument) tmpVal_7673;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassWithValues = ClassWithValuestemp;
    {
      try {

        OmlDocument tmpVal_7808 = null;
        OmlSpecifications arg_7810 = null;
        Vector arg_7812 = null;
        OmlClass e_seq_7815 = null;
        Vector arg_7819 = null;
        OmlTypeDefinitions e_seq_7823 = null;
        Vector arg_7824 = null;
        arg_7824 = new Vector();
        arg_7824.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(4), new Long(1)), new Long(4), new Long(1)), new OmlSimpleType(new String("String"), new OmlSeq0Type(new OmlCharType(new Long(4), new Long(24)), new Long(4), new Long(17)), null, new Long(4), new Long(17)), new Long(4), new Long(8)));
        arg_7824.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(5), new Long(1)), new Long(5), new Long(1)), new OmlSimpleType(new String("Integer"), new OmlIntType(new Long(5), new Long(18)), null, new Long(5), new Long(18)), new Long(5), new Long(8)));
        arg_7824.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(6), new Long(1)), new Long(6), new Long(1)), new OmlSimpleType(new String("Character"), new OmlCharType(new Long(6), new Long(20)), null, new Long(6), new Long(20)), new Long(6), new Long(8)));
        arg_7824.add(new OmlTypeDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlSimpleType(new String("MySet"), new OmlSetType(new OmlIntType(new Long(7), new Long(23)), new Long(7), new Long(16)), null, new Long(7), new Long(16)), new Long(7), new Long(8)));
        e_seq_7823 = new OmlTypeDefinitions(arg_7824, new Long(3), new Long(1));
        arg_7819 = new Vector();
        arg_7819.add(e_seq_7823);
        OmlValueDefinitions e_seq_7913 = null;
        Vector arg_7914 = null;
        arg_7914 = new Vector();
        arg_7914.add(new OmlValueDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(11), new Long(1)), new Long(11), new Long(1)), new OmlValueShape(new OmlPatternIdentifier(new String("val1"), new Long(11), new Long(8)), new OmlSeq0Type(new OmlCharType(new Long(11), new Long(22)), new Long(11), new Long(15)), new OmlSymbolicLiteralExpression(new OmlTextLiteral(new String("Hello World"), new Long(11), new Long(29)), new Long(11), new Long(29)), new Long(11), new Long(8)), new Long(11), new Long(8)));
        arg_7914.add(new OmlValueDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(1), new Long(12), new Long(1)), new Long(12), new Long(1)), new OmlValueShape(new OmlPatternIdentifier(new String("val2"), new Long(12), new Long(9)), new OmlNatType(new Long(12), new Long(16)), new OmlSymbolicLiteralExpression(new OmlNumericLiteral(new Long(4), new Long(12), new Long(22)), new Long(12), new Long(22)), new Long(12), new Long(9)), new Long(12), new Long(9)));
        e_seq_7913 = new OmlValueDefinitions(arg_7914, new Long(9), new Long(1));
        arg_7819.add(e_seq_7913);
        OmlInstanceVariableDefinitions e_seq_7978 = null;
        Vector arg_7979 = null;
        arg_7979 = new Vector();
        arg_7979.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(16), new Long(1)), new Long(16), new Long(1)), new OmlAssignmentDefinition(new String("att1"), new OmlSeq0Type(new OmlCharType(new Long(16), new Long(22)), new Long(16), new Long(15)), null, new Long(16), new Long(8)), new Long(16), new Long(1)));
        arg_7979.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(17), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att2"), new OmlTypeName(new OmlName(null, new String("String"), new Long(17), new Long(8)), new Long(17), new Long(8)), null, new Long(17), new Long(1)), new Long(0), new Long(0)));
        arg_7979.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(1), new Long(18), new Long(1)), new Long(18), new Long(1)), new OmlAssignmentDefinition(new String("att3"), new OmlIntType(new Long(18), new Long(16)), null, new Long(18), new Long(9)), new Long(18), new Long(1)));
        e_seq_7978 = new OmlInstanceVariableDefinitions(arg_7979, new Long(14), new Long(1));
        arg_7819.add(e_seq_7978);
        OmlOperationDefinitions e_seq_8050 = null;
        Vector arg_8051 = null;
        OmlOperationDefinition e_seq_8054 = null;
        OmlExplicitOperation arg_8056 = null;
        Vector arg_8069 = null;
        arg_8069 = new Vector();
        arg_8069.add(new OmlPatternIdentifier(new String("parm1"), new Long(24), new Long(5)));
        arg_8056 = new OmlExplicitOperation(new String("Op1"), new OmlOperationType(new OmlIntType(new Long(23), new Long(14)), new OmlBoolType(new Long(23), new Long(22)), new Long(23), new Long(14)), arg_8069, new OmlOperationBody(null, new Boolean(false), new Boolean(true), new Long(24), new Long(15)), new OmlOperationTrailer(null, null, null, null, new Long(0), new Long(0)), new Long(23), new Long(8));
        e_seq_8054 = new OmlOperationDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(23), new Long(1)), new Long(23), new Long(1)), arg_8056, new Long(23), new Long(8));
        arg_8051 = new Vector();
        arg_8051.add(e_seq_8054);
        arg_8051.add(new OmlOperationDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(1), new Long(26), new Long(1)), new Long(26), new Long(1)), new OmlExplicitOperation(new String("Op2"), new OmlOperationType(new OmlEmptyType(new Long(26), new Long(15)), new OmlTypeName(new OmlName(null, new String("String"), new Long(26), new Long(22)), new Long(26), new Long(22)), new Long(26), new Long(15)), new Vector(), new OmlOperationBody(new OmlReturnStatement(new OmlSymbolicLiteralExpression(new OmlTextLiteral(new String("HI"), new Long(27), new Long(17)), new Long(27), new Long(17)), new Long(27), new Long(10)), new Boolean(false), new Boolean(false), new Long(27), new Long(10)), new OmlOperationTrailer(null, null, null, null, new Long(0), new Long(0)), new Long(26), new Long(9)), new Long(26), new Long(9)));
        e_seq_8050 = new OmlOperationDefinitions(arg_8051, new Long(21), new Long(1));
        arg_7819.add(e_seq_8050);
        OmlFunctionDefinitions e_seq_8150 = null;
        Vector arg_8151 = null;
        OmlFunctionDefinition e_seq_8154 = null;
        OmlExplicitFunction arg_8156 = null;
        Vector arg_8170 = null;
        OmlParameter e_seq_8183 = null;
        Vector arg_8184 = null;
        arg_8184 = new Vector();
        arg_8184.add(new OmlDontCarePattern(new Long(32), new Long(7)));
        e_seq_8183 = new OmlParameter(arg_8184, new Long(32), new Long(6));
        arg_8170 = new Vector();
        arg_8170.add(e_seq_8183);
        arg_8156 = new OmlExplicitFunction(new String("Funk1"), new Vector(), new OmlPartialFunctionType(new OmlCharType(new Long(31), new Long(16)), new OmlBoolType(new Long(31), new Long(24)), new Long(31), new Long(16)), arg_8170, new OmlFunctionBody(new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(true), new Long(32), new Long(13)), new Long(32), new Long(13)), new Boolean(false), new Boolean(false), new Long(32), new Long(13)), new OmlFunctionTrailer(null, null, new Long(0), new Long(0)), new Long(31), new Long(8));
        e_seq_8154 = new OmlFunctionDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(31), new Long(1)), new Long(31), new Long(1)), arg_8156, new Long(31), new Long(8));
        arg_8151 = new Vector();
        arg_8151.add(e_seq_8154);
        OmlFunctionDefinition e_seq_8205 = null;
        OmlExplicitFunction arg_8207 = null;
        Vector arg_8221 = null;
        OmlParameter e_seq_8234 = null;
        Vector arg_8235 = null;
        arg_8235 = new Vector();
        arg_8235.add(new OmlDontCarePattern(new Long(35), new Long(7)));
        e_seq_8234 = new OmlParameter(arg_8235, new Long(35), new Long(6));
        arg_8221 = new Vector();
        arg_8221.add(e_seq_8234);
        arg_8207 = new OmlExplicitFunction(new String("Funk2"), new Vector(), new OmlPartialFunctionType(new OmlCharType(new Long(34), new Long(17)), new OmlBoolType(new Long(34), new Long(25)), new Long(34), new Long(17)), arg_8221, new OmlFunctionBody(new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(true), new Long(35), new Long(13)), new Long(35), new Long(13)), new Boolean(false), new Boolean(false), new Long(35), new Long(13)), new OmlFunctionTrailer(null, null, new Long(0), new Long(0)), new Long(34), new Long(9));
        e_seq_8205 = new OmlFunctionDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(1), new Long(34), new Long(1)), new Long(34), new Long(1)), arg_8207, new Long(34), new Long(9));
        arg_8151.add(e_seq_8205);
        e_seq_8150 = new OmlFunctionDefinitions(arg_8151, new Long(30), new Long(1));
        arg_7819.add(e_seq_8150);
        e_seq_7815 = new OmlClass(new String("ClassComplete"), new Vector(), null, arg_7819, new Boolean(false), new Long(1), new Long(1));
        arg_7812 = new Vector();
        arg_7812.add(e_seq_7815);
        arg_7810 = new OmlSpecifications(arg_7812, new Long(0), new Long(0));
        Vector arg_7811 = null;
        arg_7811 = new Vector();
        arg_7811.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassComplete"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(3), new Long(1), new Long(420), new String("types"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(15), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(17), new Long(390), new String("seq"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(24), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(4), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(5), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("Integer"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(5), new Long(16), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(5), new Long(18), new Long(324), new String("int"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(5), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(6), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(6), new Long(8), new Long(433), new String("Character"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(6), new Long(18), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(6), new Long(20), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(6), new Long(24), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("MySet"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(14), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(16), new Long(393), new String("set"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(20), new Long(360), new String("of"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(7), new Long(23), new Long(324), new String("int"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(9), new Long(1), new Long(422), new String("values"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(8), new Long(433), new String("val1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(13), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(15), new Long(390), new String("seq"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(19), new Long(360), new String("of"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(22), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(27), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(29), new Long(437), new String("\"Hello World\""), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(11), new Long(42), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(1), new Long(372), new String("private"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(9), new Long(433), new String("val2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(14), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(16), new Long(352), new String("nat"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(20), new Long(299), new String("="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(22), new Long(435), new String("4"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(12), new Long(23), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(14), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(14), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(8), new Long(433), new String("att1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(13), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(15), new Long(390), new String("seq"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(19), new Long(360), new String("of"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(22), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(16), new Long(26), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(17), new Long(1), new Long(433), new String("att2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(17), new Long(6), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(17), new Long(8), new Long(433), new String("String"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(17), new Long(14), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(18), new Long(1), new Long(372), new String("private"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(18), new Long(9), new Long(433), new String("att3"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(18), new Long(14), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(18), new Long(16), new Long(324), new String("int"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(18), new Long(19), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(21), new Long(1), new Long(361), new String("operations"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(8), new Long(433), new String("Op1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(12), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(14), new Long(324), new String("int"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(18), new Long(362), new String("==>"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(23), new Long(22), new Long(270), new String("bool"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(1), new Long(433), new String("Op1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(4), new Long(40), new String("("), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(5), new Long(433), new String("parm1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(10), new Long(41), new String(")"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(12), new Long(333), new String("=="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(15), new Long(329), new String("is"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(18), new Long(404), new String("subclass"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(27), new Long(383), new String("responsibility"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(24), new Long(41), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(1), new Long(372), new String("private"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(9), new Long(433), new String("Op2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(13), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(15), new Long(40), new String("("), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(16), new Long(41), new String(")"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(18), new Long(362), new String("==>"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(26), new Long(22), new Long(433), new String("String"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(1), new Long(433), new String("Op2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(4), new Long(40), new String("("), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(5), new Long(41), new String(")"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(7), new Long(333), new String("=="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(10), new Long(384), new String("return"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(17), new Long(437), new String("\"HI\""), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(27), new Long(21), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(30), new Long(1), new Long(312), new String("functions"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(8), new Long(433), new String("Funk1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(14), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(16), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(21), new Long(264), new String("->"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(31), new Long(24), new Long(270), new String("bool"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(1), new Long(433), new String("Funk1"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(6), new Long(40), new String("("), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(7), new Long(45), new String("-"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(8), new Long(41), new String(")"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(10), new Long(333), new String("=="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(13), new Long(430), new String("true"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(32), new Long(17), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(1), new Long(372), new String("private"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(9), new Long(433), new String("Funk2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(15), new Long(58), new String(":"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(17), new Long(274), new String("char"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(22), new Long(264), new String("->"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(34), new Long(25), new Long(270), new String("bool"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(1), new Long(433), new String("Funk2"), new Long(2)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(6), new Long(40), new String("("), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(7), new Long(45), new String("-"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(8), new Long(41), new String(")"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(10), new Long(333), new String("=="), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(13), new Long(430), new String("true"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(35), new Long(17), new Long(59), new String(";"), new Long(0)));
        arg_7811.add(new OmlLexem(new Long(38), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_7811.add(new OmlLexem(new Long(38), new Long(5), new Long(433), new String("ClassComplete"), new Long(2)));
        tmpVal_7808 = new OmlDocument(new String("C:\\Users\\kela\\Documents\\Daimi\\Master Thesise\\SVN\\VDMTools\\Tools\\parser\\ClassComplete.tex"), arg_7810, arg_7811);
        ClassCompletetemp = (OmlDocument) tmpVal_7808;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassComplete = ClassCompletetemp;
    {
      try {

        OmlDocument tmpVal_8976 = null;
        OmlSpecifications arg_8978 = null;
        Vector arg_8980 = null;
        OmlClass e_seq_8983 = null;
        Vector arg_8987 = null;
        OmlInstanceVariableDefinitions e_seq_8991 = null;
        Vector arg_8992 = null;
        arg_8992 = new Vector();
        arg_8992.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(5), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att1"), new OmlTypeName(new OmlName(null, new String("B"), new Long(5), new Long(8)), new Long(5), new Long(8)), new OmlNewExpression(new OmlName(null, new String("B"), new Long(5), new Long(16)), new Vector(), new Vector(), new Long(5), new Long(12)), new Long(5), new Long(1)), new Long(0), new Long(0)));
        arg_8992.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(6), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att2NoAssociation"), new OmlNatType(new Long(6), new Long(21)), new OmlSymbolicLiteralExpression(new OmlNumericLiteral(new Long(0), new Long(6), new Long(28)), new Long(6), new Long(28)), new Long(6), new Long(1)), new Long(0), new Long(0)));
        e_seq_8991 = new OmlInstanceVariableDefinitions(arg_8992, new Long(3), new Long(1));
        arg_8987 = new Vector();
        arg_8987.add(e_seq_8991);
        e_seq_8983 = new OmlClass(new String("A"), new Vector(), null, arg_8987, new Boolean(false), new Long(1), new Long(1));
        arg_8980 = new Vector();
        arg_8980.add(e_seq_8983);
        arg_8980.add(new OmlClass(new String("B"), new Vector(), null, new Vector(), new Boolean(false), new Long(9), new Long(1)));
        arg_8978 = new OmlSpecifications(arg_8980, new Long(0), new Long(0));
        Vector arg_8979 = null;
        arg_8979 = new Vector();
        arg_8979.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("A"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(3), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(3), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(1), new Long(433), new String("att1"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(6), new Long(58), new String(":"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("B"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(9), new Long(265), new String(":="), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(12), new Long(354), new String("new"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(16), new Long(433), new String("B"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(17), new Long(40), new String("("), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(18), new Long(41), new String(")"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(5), new Long(19), new Long(59), new String(";"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(1), new Long(433), new String("att2NoAssociation"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(21), new Long(352), new String("nat"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(25), new Long(265), new String(":="), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(28), new Long(435), new String("0"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(6), new Long(29), new Long(59), new String(";"), new Long(0)));
        arg_8979.add(new OmlLexem(new Long(7), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(7), new Long(5), new Long(433), new String("A"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(9), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(9), new Long(7), new Long(433), new String("B"), new Long(2)));
        arg_8979.add(new OmlLexem(new Long(11), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_8979.add(new OmlLexem(new Long(11), new Long(5), new Long(433), new String("B"), new Long(2)));
        tmpVal_8976 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassAssociation.tex"), arg_8978, arg_8979);
        ClassAssociationtemp = (OmlDocument) tmpVal_8976;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassAssociation = ClassAssociationtemp;
    {
      try {

        OmlDocument tmpVal_9213 = null;
        OmlSpecifications arg_9215 = null;
        Vector arg_9217 = null;
        OmlClass e_seq_9220 = null;
        Vector arg_9224 = null;
        OmlInstanceVariableDefinitions e_seq_9228 = null;
        Vector arg_9229 = null;
        arg_9229 = new Vector();
        arg_9229.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(5), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att1"), new OmlProductType(new OmlProductType(new OmlTypeName(new OmlName(null, new String("B"), new Long(5), new Long(8)), new Long(5), new Long(8)), new OmlTypeName(new OmlName(null, new String("C"), new Long(5), new Long(12)), new Long(5), new Long(12)), new Long(5), new Long(10)), new OmlTypeName(new OmlName(null, new String("D"), new Long(5), new Long(16)), new Long(5), new Long(16)), new Long(5), new Long(14)), null, new Long(5), new Long(1)), new Long(0), new Long(0)));
        arg_9229.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(6), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att2NoAssociation"), new OmlNatType(new Long(6), new Long(21)), new OmlSymbolicLiteralExpression(new OmlNumericLiteral(new Long(0), new Long(6), new Long(28)), new Long(6), new Long(28)), new Long(6), new Long(1)), new Long(0), new Long(0)));
        e_seq_9228 = new OmlInstanceVariableDefinitions(arg_9229, new Long(3), new Long(1));
        arg_9224 = new Vector();
        arg_9224.add(e_seq_9228);
        e_seq_9220 = new OmlClass(new String("A"), new Vector(), null, arg_9224, new Boolean(false), new Long(1), new Long(1));
        arg_9217 = new Vector();
        arg_9217.add(e_seq_9220);
        arg_9217.add(new OmlClass(new String("B"), new Vector(), null, new Vector(), new Boolean(false), new Long(9), new Long(1)));
        arg_9217.add(new OmlClass(new String("C"), new Vector(), null, new Vector(), new Boolean(false), new Long(13), new Long(1)));
        arg_9217.add(new OmlClass(new String("D"), new Vector(), null, new Vector(), new Boolean(false), new Long(17), new Long(1)));
        arg_9215 = new OmlSpecifications(arg_9217, new Long(0), new Long(0));
        Vector arg_9216 = null;
        arg_9216 = new Vector();
        arg_9216.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("A"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(3), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(3), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(1), new Long(433), new String("att1"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(6), new Long(58), new String(":"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("B"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(10), new Long(42), new String("*"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(12), new Long(433), new String("C"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(14), new Long(42), new String("*"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(16), new Long(433), new String("D"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(5), new Long(17), new Long(59), new String(";"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(1), new Long(433), new String("att2NoAssociation"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(21), new Long(352), new String("nat"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(25), new Long(265), new String(":="), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(28), new Long(435), new String("0"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(6), new Long(29), new Long(59), new String(";"), new Long(0)));
        arg_9216.add(new OmlLexem(new Long(7), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(7), new Long(5), new Long(433), new String("A"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(9), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(9), new Long(7), new Long(433), new String("B"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(11), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(11), new Long(5), new Long(433), new String("B"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(13), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(13), new Long(7), new Long(433), new String("C"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(15), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(15), new Long(5), new Long(433), new String("C"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(17), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(17), new Long(7), new Long(433), new String("D"), new Long(2)));
        arg_9216.add(new OmlLexem(new Long(19), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9216.add(new OmlLexem(new Long(19), new Long(5), new Long(433), new String("D"), new Long(2)));
        tmpVal_9213 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassAssociationN.tex"), arg_9215, arg_9216);
        ClassAssociationNtemp = (OmlDocument) tmpVal_9213;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassAssociationN = ClassAssociationNtemp;
    {
      try {

        OmlDocument tmpVal_9521 = null;
        OmlSpecifications arg_9523 = null;
        Vector arg_9525 = null;
        OmlClass e_seq_9528 = null;
        Vector arg_9532 = null;
        OmlInstanceVariableDefinitions e_seq_9536 = null;
        Vector arg_9537 = null;
        arg_9537 = new Vector();
        arg_9537.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(5), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att1"), new OmlUnionType(new OmlUnionType(new OmlTypeName(new OmlName(null, new String("B"), new Long(5), new Long(8)), new Long(5), new Long(8)), new OmlTypeName(new OmlName(null, new String("C"), new Long(5), new Long(12)), new Long(5), new Long(12)), new Long(5), new Long(10)), new OmlNatType(new Long(5), new Long(16)), new Long(5), new Long(14)), null, new Long(5), new Long(1)), new Long(0), new Long(0)));
        arg_9537.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(6), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("att2NoAssociation"), new OmlNatType(new Long(6), new Long(21)), new OmlSymbolicLiteralExpression(new OmlNumericLiteral(new Long(0), new Long(6), new Long(28)), new Long(6), new Long(28)), new Long(6), new Long(1)), new Long(0), new Long(0)));
        e_seq_9536 = new OmlInstanceVariableDefinitions(arg_9537, new Long(3), new Long(1));
        arg_9532 = new Vector();
        arg_9532.add(e_seq_9536);
        e_seq_9528 = new OmlClass(new String("A"), new Vector(), null, arg_9532, new Boolean(false), new Long(1), new Long(1));
        arg_9525 = new Vector();
        arg_9525.add(e_seq_9528);
        arg_9525.add(new OmlClass(new String("B"), new Vector(), null, new Vector(), new Boolean(false), new Long(10), new Long(1)));
        arg_9525.add(new OmlClass(new String("C"), new Vector(), null, new Vector(), new Boolean(false), new Long(14), new Long(1)));
        arg_9523 = new OmlSpecifications(arg_9525, new Long(0), new Long(0));
        Vector arg_9524 = null;
        arg_9524 = new Vector();
        arg_9524.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("A"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(3), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(3), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(1), new Long(433), new String("att1"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(6), new Long(58), new String(":"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(8), new Long(433), new String("B"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(10), new Long(124), new String("|"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(12), new Long(433), new String("C"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(14), new Long(124), new String("|"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(16), new Long(352), new String("nat"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(5), new Long(19), new Long(59), new String(";"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(1), new Long(433), new String("att2NoAssociation"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(21), new Long(352), new String("nat"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(25), new Long(265), new String(":="), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(28), new Long(435), new String("0"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(6), new Long(29), new Long(59), new String(";"), new Long(0)));
        arg_9524.add(new OmlLexem(new Long(8), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(8), new Long(5), new Long(433), new String("A"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(10), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(10), new Long(7), new Long(433), new String("B"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(12), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(12), new Long(5), new Long(433), new String("B"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(14), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(14), new Long(7), new Long(433), new String("C"), new Long(2)));
        arg_9524.add(new OmlLexem(new Long(16), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9524.add(new OmlLexem(new Long(16), new Long(5), new Long(433), new String("C"), new Long(2)));
        tmpVal_9521 = new OmlDocument(new String("ClassInstanceUnionType.vpp"), arg_9523, arg_9524);
        ClassInstanceUnionTypetemp = (OmlDocument) tmpVal_9521;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassInstanceUnionType = ClassInstanceUnionTypetemp;
    {
      try {

        OmlDocument tmpVal_9792 = null;
        OmlSpecifications arg_9794 = null;
        Vector arg_9796 = null;
        OmlClass e_seq_9799 = null;
        OmlInheritanceClause arg_9802 = null;
        Vector arg_9807 = null;
        arg_9807 = new Vector();
        arg_9807.add(new String("B"));
        arg_9807.add(new String("C"));
        arg_9807.add(new String("D"));
        arg_9802 = new OmlInheritanceClause(arg_9807, new Long(1), new Long(9));
        e_seq_9799 = new OmlClass(new String("A"), new Vector(), arg_9802, new Vector(), new Boolean(false), new Long(1), new Long(1));
        arg_9796 = new Vector();
        arg_9796.add(e_seq_9799);
        arg_9796.add(new OmlClass(new String("B"), new Vector(), null, new Vector(), new Boolean(false), new Long(6), new Long(1)));
        arg_9796.add(new OmlClass(new String("C"), new Vector(), null, new Vector(), new Boolean(false), new Long(10), new Long(1)));
        arg_9796.add(new OmlClass(new String("D"), new Vector(), null, new Vector(), new Boolean(false), new Long(14), new Long(1)));
        arg_9794 = new OmlSpecifications(arg_9796, new Long(0), new Long(0));
        Vector arg_9795 = null;
        arg_9795 = new Vector();
        arg_9795.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("A"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(9), new Long(329), new String("is"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(12), new Long(404), new String("subclass"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(21), new Long(360), new String("of"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(24), new Long(433), new String("B"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(25), new Long(44), new String(","), new Long(0)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(26), new Long(433), new String("C"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(27), new Long(44), new String(","), new Long(0)));
        arg_9795.add(new OmlLexem(new Long(1), new Long(28), new Long(433), new String("D"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(4), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(4), new Long(5), new Long(433), new String("A"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(6), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(6), new Long(7), new Long(433), new String("B"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(8), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(8), new Long(5), new Long(433), new String("B"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(10), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(10), new Long(7), new Long(433), new String("C"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(12), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(12), new Long(5), new Long(433), new String("C"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(14), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(14), new Long(7), new Long(433), new String("D"), new Long(2)));
        arg_9795.add(new OmlLexem(new Long(16), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9795.add(new OmlLexem(new Long(16), new Long(5), new Long(433), new String("D"), new Long(2)));
        tmpVal_9792 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassInheritance.tex"), arg_9794, arg_9795);
        ClassInheritancetemp = (OmlDocument) tmpVal_9792;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassInheritance = ClassInheritancetemp;
    {
      try {

        OmlDocument tmpVal_9981 = null;
        OmlSpecifications arg_9983 = null;
        Vector arg_9985 = null;
        OmlClass e_seq_9988 = null;
        Vector arg_9990 = null;
        arg_9990 = new Vector();
        arg_9990.add(new OmlTypeName(new OmlName(null, new String("T1"), new Long(1), new Long(11)), new Long(1), new Long(11)));
        arg_9990.add(new OmlTypeName(new OmlName(null, new String("T2"), new Long(1), new Long(15)), new Long(1), new Long(15)));
        e_seq_9988 = new OmlClass(new String("A"), arg_9990, null, new Vector(), new Boolean(false), new Long(1), new Long(1));
        arg_9985 = new Vector();
        arg_9985.add(e_seq_9988);
        arg_9983 = new OmlSpecifications(arg_9985, new Long(0), new Long(0));
        Vector arg_9984 = null;
        arg_9984 = new Vector();
        arg_9984.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("A"), new Long(2)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(9), new Long(440), new String("<["), new Long(0)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(11), new Long(433), new String("T1"), new Long(2)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(13), new Long(44), new String(","), new Long(0)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(15), new Long(433), new String("T2"), new Long(2)));
        arg_9984.add(new OmlLexem(new Long(1), new Long(17), new Long(441), new String("]>"), new Long(0)));
        arg_9984.add(new OmlLexem(new Long(4), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_9984.add(new OmlLexem(new Long(4), new Long(5), new Long(433), new String("A"), new Long(2)));
        tmpVal_9981 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassTemplates.tex"), arg_9983, arg_9984);
        ClassTemplatestemp = (OmlDocument) tmpVal_9981;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassTemplates = ClassTemplatestemp;
    {
      try {

        OmlDocument tmpVal_10066 = null;
        OmlSpecifications arg_10068 = null;
        Vector arg_10070 = null;
        OmlClass e_seq_10073 = null;
        Vector arg_10077 = null;
        OmlInstanceVariableDefinitions e_seq_10081 = null;
        Vector arg_10082 = null;
        arg_10082 = new Vector();
        arg_10082.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(5), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("products"), new OmlGeneralMapType(new OmlNatType(new Long(5), new Long(16)), new OmlTypeName(new OmlName(null, new String("Price"), new Long(5), new Long(23)), new Long(5), new Long(23)), new Long(5), new Long(12)), null, new Long(5), new Long(1)), new Long(0), new Long(0)));
        arg_10082.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(6), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("productBarcode"), new OmlInjectiveMapType(new OmlNatType(new Long(6), new Long(24)), new OmlTypeName(new OmlName(null, new String("Barcode"), new Long(6), new Long(31)), new Long(6), new Long(31)), new Long(6), new Long(18)), null, new Long(6), new Long(1)), new Long(0), new Long(0)));
        arg_10082.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(true), new OmlScope(new Long(3), new Long(7), new Long(1)), new Long(7), new Long(1)), new OmlAssignmentDefinition(new String("seqMap"), new OmlGeneralMapType(new OmlNatType(new Long(7), new Long(21)), new OmlSeq0Type(new OmlCharType(new Long(7), new Long(35)), new Long(7), new Long(28)), new Long(7), new Long(17)), null, new Long(7), new Long(8)), new Long(7), new Long(1)));
        e_seq_10081 = new OmlInstanceVariableDefinitions(arg_10082, new Long(3), new Long(1));
        arg_10077 = new Vector();
        arg_10077.add(e_seq_10081);
        e_seq_10073 = new OmlClass(new String("ClassWithMap"), new Vector(), null, arg_10077, new Boolean(false), new Long(1), new Long(1));
        arg_10070 = new Vector();
        arg_10070.add(e_seq_10073);
        arg_10070.add(new OmlClass(new String("Price"), new Vector(), null, new Vector(), new Boolean(false), new Long(11), new Long(1)));
        arg_10070.add(new OmlClass(new String("Barcode"), new Vector(), null, new Vector(), new Boolean(false), new Long(15), new Long(1)));
        arg_10068 = new OmlSpecifications(arg_10070, new Long(0), new Long(0));
        Vector arg_10069 = null;
        arg_10069 = new Vector();
        arg_10069.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassWithMap"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(3), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(3), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(1), new Long(433), new String("products"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(12), new Long(341), new String("map"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(16), new Long(352), new String("nat"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(20), new Long(416), new String("to"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(23), new Long(433), new String("Price"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(5), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(1), new Long(433), new String("productBarcode"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(16), new Long(58), new String(":"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(18), new Long(322), new String("inmap"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(24), new Long(352), new String("nat"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(28), new Long(416), new String("to"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(31), new Long(433), new String("Barcode"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(6), new Long(38), new Long(59), new String(";"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(1), new Long(403), new String("static"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("seqMap"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(15), new Long(58), new String(":"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(17), new Long(341), new String("map"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(21), new Long(352), new String("nat"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(25), new Long(416), new String("to"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(28), new Long(390), new String("seq"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(32), new Long(360), new String("of"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(35), new Long(274), new String("char"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(7), new Long(39), new Long(59), new String(";"), new Long(0)));
        arg_10069.add(new OmlLexem(new Long(9), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(9), new Long(5), new Long(433), new String("ClassWithMap"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(11), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(11), new Long(7), new Long(433), new String("Price"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(13), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(13), new Long(5), new Long(433), new String("Price"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(15), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(15), new Long(7), new Long(433), new String("Barcode"), new Long(2)));
        arg_10069.add(new OmlLexem(new Long(17), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10069.add(new OmlLexem(new Long(17), new Long(5), new Long(433), new String("Barcode"), new Long(2)));
        tmpVal_10066 = new OmlDocument(new String("ClassWithMap.tex.vpp"), arg_10068, arg_10069);
        ClassWithMaptemp = (OmlDocument) tmpVal_10066;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassWithMap = ClassWithMaptemp;
    {
      try {

        OmlDocument tmpVal_10420 = null;
        OmlSpecifications arg_10422 = null;
        Vector arg_10424 = null;
        OmlClass e_seq_10427 = null;
        Vector arg_10431 = null;
        OmlFunctionDefinitions e_seq_10435 = null;
        Vector arg_10436 = null;
        OmlFunctionDefinition e_seq_10439 = null;
        OmlExplicitFunction arg_10441 = null;
        Vector arg_10455 = null;
        OmlParameter e_seq_10468 = null;
        Vector arg_10469 = null;
        arg_10469 = new Vector();
        arg_10469.add(new OmlPatternIdentifier(new String("parm1"), new Long(8), new Long(12)));
        e_seq_10468 = new OmlParameter(arg_10469, new Long(8), new Long(11));
        arg_10455 = new Vector();
        arg_10455.add(e_seq_10468);
        arg_10441 = new OmlExplicitFunction(new String("HelloWorld"), new Vector(), new OmlPartialFunctionType(new OmlIntType(new Long(7), new Long(21)), new OmlBoolType(new Long(7), new Long(28)), new Long(7), new Long(21)), arg_10455, new OmlFunctionBody(new OmlIfExpression(new OmlBinaryExpression(new OmlName(null, new String("parm1"), new Long(8), new Long(26)), new OmlBinaryOperator(new Long(23), new Long(8), new Long(32)), new OmlSymbolicLiteralExpression(new OmlNumericLiteral(new Long(0), new Long(8), new Long(34)), new Long(8), new Long(34)), new Long(8), new Long(32)), new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(true), new Long(8), new Long(42)), new Long(8), new Long(42)), new Vector(), new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(false), new Long(8), new Long(53)), new Long(8), new Long(53)), new Long(8), new Long(23)), new Boolean(false), new Boolean(false), new Long(8), new Long(23)), new OmlFunctionTrailer(null, null, new Long(0), new Long(0)), new Long(7), new Long(8));
        e_seq_10439 = new OmlFunctionDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(2), new Long(7), new Long(1)), new Long(7), new Long(1)), arg_10441, new Long(7), new Long(8));
        arg_10436 = new Vector();
        arg_10436.add(e_seq_10439);
        e_seq_10435 = new OmlFunctionDefinitions(arg_10436, new Long(4), new Long(1));
        arg_10431 = new Vector();
        arg_10431.add(e_seq_10435);
        e_seq_10427 = new OmlClass(new String("ClassSimpleFunction"), new Vector(), null, arg_10431, new Boolean(false), new Long(1), new Long(1));
        arg_10424 = new Vector();
        arg_10424.add(e_seq_10427);
        arg_10422 = new OmlSpecifications(arg_10424, new Long(0), new Long(0));
        Vector arg_10423 = null;
        arg_10423 = new Vector();
        arg_10423.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassSimpleFunction"), new Long(2)));
        arg_10423.add(new OmlLexem(new Long(4), new Long(1), new Long(312), new String("functions"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(1), new Long(375), new String("public"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(8), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(19), new Long(58), new String(":"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(21), new Long(324), new String("int"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(25), new Long(264), new String("->"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(7), new Long(28), new Long(270), new String("bool"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(1), new Long(433), new String("HelloWorld"), new Long(2)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(11), new Long(40), new String("("), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(12), new Long(433), new String("parm1"), new Long(2)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(17), new Long(41), new String(")"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(19), new Long(333), new String("=="), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(23), new Long(317), new String("if"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(26), new Long(433), new String("parm1"), new Long(2)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(32), new Long(313), new String(">"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(34), new Long(435), new String("0"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(36), new Long(410), new String("then"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(42), new Long(430), new String("true"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(47), new Long(296), new String("else"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(53), new Long(429), new String("false"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(8), new Long(58), new Long(59), new String(";"), new Long(0)));
        arg_10423.add(new OmlLexem(new Long(13), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10423.add(new OmlLexem(new Long(13), new Long(5), new Long(433), new String("ClassSimpleFunction"), new Long(2)));
        tmpVal_10420 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\ClassSimpleFunction.tex"), arg_10422, arg_10423);
        ClassSimpleFunctiontemp = (OmlDocument) tmpVal_10420;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassSimpleFunction = ClassSimpleFunctiontemp;
    {
      try {

        OmlDocument tmpVal_10671 = null;
        OmlSpecifications arg_10673 = null;
        Vector arg_10675 = null;
        OmlClass e_seq_10678 = null;
        Vector arg_10682 = null;
        OmlValueDefinitions e_seq_10686 = null;
        Vector arg_10687 = null;
        arg_10687 = new Vector();
        arg_10687.add(new OmlValueDefinition(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(3), new Long(1)), new Long(0), new Long(0)), new OmlValueShape(new OmlPatternIdentifier(new String("company"), new Long(3), new Long(1)), new OmlSeq0Type(new OmlCharType(new Long(3), new Long(18)), new Long(3), new Long(11)), new OmlSymbolicLiteralExpression(new OmlTextLiteral(new String("IHA"), new Long(3), new Long(25)), new Long(3), new Long(25)), new Long(3), new Long(1)), new Long(3), new Long(1)));
        e_seq_10686 = new OmlValueDefinitions(arg_10687, new Long(2), new Long(1));
        arg_10682 = new Vector();
        arg_10682.add(e_seq_10686);
        OmlInstanceVariableDefinitions e_seq_10722 = null;
        Vector arg_10723 = null;
        arg_10723 = new Vector();
        arg_10723.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(7), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("id"), new OmlNatType(new Long(7), new Long(6)), null, new Long(7), new Long(1)), new Long(0), new Long(0)));
        arg_10723.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(8), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("amount"), new OmlNatType(new Long(8), new Long(10)), null, new Long(8), new Long(1)), new Long(0), new Long(0)));
        arg_10723.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(9), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("customer"), new OmlTypeName(new OmlName(null, new String("Customer"), new Long(9), new Long(12)), new Long(9), new Long(12)), null, new Long(9), new Long(1)), new Long(0), new Long(0)));
        arg_10723.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(10), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("products"), new OmlGeneralMapType(new OmlNatType(new Long(10), new Long(16)), new OmlTypeName(new OmlName(null, new String("Product"), new Long(10), new Long(23)), new Long(10), new Long(23)), new Long(10), new Long(12)), null, new Long(10), new Long(1)), new Long(0), new Long(0)));
        e_seq_10722 = new OmlInstanceVariableDefinitions(arg_10723, new Long(5), new Long(1));
        arg_10682.add(e_seq_10722);
        e_seq_10678 = new OmlClass(new String("Order"), new Vector(), null, arg_10682, new Boolean(false), new Long(1), new Long(1));
        arg_10675 = new Vector();
        arg_10675.add(e_seq_10678);
        OmlClass e_seq_10822 = null;
        Vector arg_10826 = null;
        OmlInstanceVariableDefinitions e_seq_10830 = null;
        Vector arg_10831 = null;
        arg_10831 = new Vector();
        arg_10831.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(16), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("name"), new OmlSeq0Type(new OmlCharType(new Long(16), new Long(15)), new Long(16), new Long(8)), null, new Long(16), new Long(1)), new Long(0), new Long(0)));
        e_seq_10830 = new OmlInstanceVariableDefinitions(arg_10831, new Long(14), new Long(1));
        arg_10826 = new Vector();
        arg_10826.add(e_seq_10830);
        e_seq_10822 = new OmlClass(new String("Customer"), new Vector(), null, arg_10826, new Boolean(false), new Long(13), new Long(1));
        arg_10675.add(e_seq_10822);
        arg_10675.add(new OmlClass(new String("Product"), new Vector(), null, new Vector(), new Boolean(false), new Long(19), new Long(1)));
        arg_10673 = new OmlSpecifications(arg_10675, new Long(0), new Long(0));
        Vector arg_10674 = null;
        arg_10674 = new Vector();
        arg_10674.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("Order"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(2), new Long(1), new Long(422), new String("values"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(1), new Long(433), new String("company"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(9), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(11), new Long(390), new String("seq"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(15), new Long(360), new String("of"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(18), new Long(274), new String("char"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(23), new Long(299), new String("="), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(25), new Long(437), new String("\"IHA\""), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(3), new Long(30), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(5), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(5), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(7), new Long(1), new Long(433), new String("id"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(7), new Long(4), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(7), new Long(6), new Long(352), new String("nat"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(7), new Long(9), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(8), new Long(1), new Long(433), new String("amount"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(8), new Long(8), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(8), new Long(10), new Long(352), new String("nat"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(8), new Long(13), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(9), new Long(1), new Long(433), new String("customer"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(9), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(9), new Long(12), new Long(433), new String("Customer"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(9), new Long(20), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(1), new Long(433), new String("products"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(12), new Long(341), new String("map"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(16), new Long(352), new String("nat"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(20), new Long(416), new String("to"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(23), new Long(433), new String("Product"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(10), new Long(30), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(11), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(11), new Long(5), new Long(433), new String("Order"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(13), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(13), new Long(7), new Long(433), new String("Customer"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(14), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(14), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(1), new Long(433), new String("name"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(6), new Long(58), new String(":"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(8), new Long(390), new String("seq"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(12), new Long(360), new String("of"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(15), new Long(274), new String("char"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(16), new Long(19), new Long(59), new String(";"), new Long(0)));
        arg_10674.add(new OmlLexem(new Long(17), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(17), new Long(5), new Long(433), new String("Customer"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(19), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(19), new Long(7), new Long(433), new String("Product"), new Long(2)));
        arg_10674.add(new OmlLexem(new Long(20), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_10674.add(new OmlLexem(new Long(20), new Long(5), new Long(433), new String("Product"), new Long(2)));
        tmpVal_10671 = new OmlDocument(new String("C:\\COMU\\VDMTools\\Tools\\parser\\Association-Order.tex"), arg_10673, arg_10674);
        TCtemp = (OmlDocument) tmpVal_10671;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    TC = TCtemp;
    {
      try {

        OmlDocument tmpVal_11165 = null;
        OmlSpecifications arg_11167 = null;
        Vector arg_11169 = null;
        OmlClass e_seq_11172 = null;
        Vector arg_11176 = null;
        arg_11176 = new Vector();
        arg_11176.add(new OmlThreadDefinition(new OmlProcedureThread(new OmlWhileLoop(new OmlSymbolicLiteralExpression(new OmlBooleanLiteral(new Boolean(true), new Long(4), new Long(7)), new Long(4), new Long(7)), new OmlSkipStatement(new Long(5), new Long(3)), new Long(4), new Long(1)), new Long(3), new Long(1)), new Long(3), new Long(1)));
        e_seq_11172 = new OmlClass(new String("ClassActive"), new Vector(), null, arg_11176, new Boolean(false), new Long(1), new Long(1));
        arg_11169 = new Vector();
        arg_11169.add(e_seq_11172);
        arg_11167 = new OmlSpecifications(arg_11169, new Long(0), new Long(0));
        Vector arg_11168 = null;
        arg_11168 = new Vector();
        arg_11168.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassActive"), new Long(2)));
        arg_11168.add(new OmlLexem(new Long(3), new Long(1), new Long(411), new String("thread"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(4), new Long(1), new Long(425), new String("while"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(4), new Long(7), new Long(430), new String("true"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(4), new Long(12), new Long(285), new String("do"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(5), new Long(3), new Long(397), new String("skip"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(5), new Long(7), new Long(59), new String(";"), new Long(0)));
        arg_11168.add(new OmlLexem(new Long(7), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_11168.add(new OmlLexem(new Long(7), new Long(5), new Long(433), new String("ClassActive"), new Long(2)));
        tmpVal_11165 = new OmlDocument(new String("ClassActive.tex"), arg_11167, arg_11168);
        ClassActivetemp = (OmlDocument) tmpVal_11165;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassActive = ClassActivetemp;
    {
      try {

        OmlDocument tmpVal_11259 = null;
        OmlSpecifications arg_11261 = null;
        Vector arg_11263 = null;
        OmlClass e_seq_11266 = null;
        Vector arg_11270 = null;
        OmlInstanceVariableDefinitions e_seq_11274 = null;
        Vector arg_11275 = null;
        arg_11275 = new Vector();
        arg_11275.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(5), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("products"), new OmlGeneralMapType(new OmlNatType(new Long(5), new Long(16)), new OmlTypeName(new OmlName(null, new String("Price"), new Long(5), new Long(23)), new Long(5), new Long(23)), new Long(5), new Long(12)), null, new Long(5), new Long(1)), new Long(0), new Long(0)));
        arg_11275.add(new OmlInstanceVariable(new OmlAccessDefinition(new Boolean(false), new Boolean(false), new OmlScope(new Long(3), new Long(6), new Long(1)), new Long(0), new Long(0)), new OmlAssignmentDefinition(new String("productBarcode"), new OmlInjectiveMapType(new OmlNatType(new Long(6), new Long(24)), new OmlTypeName(new OmlName(null, new String("Barcode"), new Long(6), new Long(31)), new Long(6), new Long(31)), new Long(6), new Long(18)), null, new Long(6), new Long(1)), new Long(0), new Long(0)));
        e_seq_11274 = new OmlInstanceVariableDefinitions(arg_11275, new Long(3), new Long(1));
        arg_11270 = new Vector();
        arg_11270.add(e_seq_11274);
        e_seq_11266 = new OmlClass(new String("ClassWithMap"), new Vector(), null, arg_11270, new Boolean(false), new Long(1), new Long(1));
        arg_11263 = new Vector();
        arg_11263.add(e_seq_11266);
        arg_11263.add(new OmlClass(new String("Price"), new Vector(), null, new Vector(), new Boolean(false), new Long(11), new Long(1)));
        arg_11263.add(new OmlClass(new String("Barcode"), new Vector(), null, new Vector(), new Boolean(false), new Long(15), new Long(1)));
        arg_11261 = new OmlSpecifications(arg_11263, new Long(0), new Long(0));
        Vector arg_11262 = null;
        arg_11262 = new Vector();
        arg_11262.add(new OmlLexem(new Long(1), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(1), new Long(7), new Long(433), new String("ClassWithMap"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(3), new Long(1), new Long(323), new String("instance"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(3), new Long(10), new Long(423), new String("variables"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(1), new Long(433), new String("products"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(10), new Long(58), new String(":"), new Long(0)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(12), new Long(341), new String("map"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(16), new Long(352), new String("nat"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(20), new Long(416), new String("to"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(23), new Long(433), new String("Price"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(5), new Long(28), new Long(59), new String(";"), new Long(0)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(1), new Long(433), new String("productBarcode"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(16), new Long(58), new String(":"), new Long(0)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(18), new Long(322), new String("inmap"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(24), new Long(352), new String("nat"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(28), new Long(416), new String("to"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(31), new Long(433), new String("Barcode"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(6), new Long(38), new Long(59), new String(";"), new Long(0)));
        arg_11262.add(new OmlLexem(new Long(9), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(9), new Long(5), new Long(433), new String("ClassWithMap"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(11), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(11), new Long(7), new Long(433), new String("Price"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(13), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(13), new Long(5), new Long(433), new String("Price"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(15), new Long(1), new Long(275), new String("class"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(15), new Long(7), new Long(433), new String("Barcode"), new Long(2)));
        arg_11262.add(new OmlLexem(new Long(17), new Long(1), new Long(298), new String("end"), new Long(1)));
        arg_11262.add(new OmlLexem(new Long(17), new Long(5), new Long(433), new String("Barcode"), new Long(2)));
        tmpVal_11259 = new OmlDocument(new String("ClassWithMap2.vpp"), arg_11261, arg_11262);
        ClassWithMap2temp = (OmlDocument) tmpVal_11259;
      }
      catch (Throwable e) {
        System.out.println(e.getMessage());
      }
    }
    ClassWithMap2 = ClassWithMap2temp;
  }
// ***** VDMTOOLS END Name=static


// ***** VDMTOOLS START Name=vdm_init_TestData KEEP=NO
  private void vdm_init_TestData () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_TestData


// ***** VDMTOOLS START Name=TestData KEEP=NO
  public TestData () throws CGException {
    vdm_init_TestData();
  }
// ***** VDMTOOLS END Name=TestData

}
;
