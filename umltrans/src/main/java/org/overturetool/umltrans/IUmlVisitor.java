//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.quotes.*;
// ***** VDMTOOLS END Name=imports



public abstract class IUmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp


// ***** VDMTOOLS START Name=vdm_init_IUmlVisitor KEEP=NO
  private void vdm_init_IUmlVisitor () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_IUmlVisitor


// ***** VDMTOOLS START Name=IUmlVisitor KEEP=NO
  public IUmlVisitor () throws CGException {
    vdm_init_IUmlVisitor();
  }
// ***** VDMTOOLS END Name=IUmlVisitor


// ***** VDMTOOLS START Name=visitDocument#1|IUmlDocument KEEP=NO
  abstract public void visitDocument (final IUmlDocument var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDocument#1|IUmlDocument


// ***** VDMTOOLS START Name=visitLexem#1|IUmlLexem KEEP=NO
  abstract public void visitLexem (final IUmlLexem var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLexem#1|IUmlLexem


// ***** VDMTOOLS START Name=visitOtherDefinitions#1|IUmlOtherDefinitions KEEP=NO
  abstract public void visitOtherDefinitions (final IUmlOtherDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOtherDefinitions#1|IUmlOtherDefinitions


// ***** VDMTOOLS START Name=visitOperation#1|IUmlOperation KEEP=NO
  abstract public void visitOperation (final IUmlOperation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperation#1|IUmlOperation


// ***** VDMTOOLS START Name=visitModel#1|IUmlModel KEEP=NO
  abstract public void visitModel (final IUmlModel var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitModel#1|IUmlModel


// ***** VDMTOOLS START Name=visitField#1|IUmlField KEEP=NO
  abstract public void visitField (final IUmlField var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitField#1|IUmlField


// ***** VDMTOOLS START Name=visitAssociation#1|IUmlAssociation KEEP=NO
  abstract public void visitAssociation (final IUmlAssociation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAssociation#1|IUmlAssociation


// ***** VDMTOOLS START Name=visitCharType#1|IUmlCharType KEEP=NO
  abstract public void visitCharType (final IUmlCharType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCharType#1|IUmlCharType


// ***** VDMTOOLS START Name=visitMultiplicityElement#1|IUmlMultiplicityElement KEEP=NO
  abstract public void visitMultiplicityElement (final IUmlMultiplicityElement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMultiplicityElement#1|IUmlMultiplicityElement


// ***** VDMTOOLS START Name=visitIntegerType#1|IUmlIntegerType KEEP=NO
  abstract public void visitIntegerType (final IUmlIntegerType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIntegerType#1|IUmlIntegerType


// ***** VDMTOOLS START Name=visitConstraint#1|IUmlConstraint KEEP=NO
  abstract public void visitConstraint (final IUmlConstraint var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitConstraint#1|IUmlConstraint


// ***** VDMTOOLS START Name=visitInheritanceClause#1|IUmlInheritanceClause KEEP=NO
  abstract public void visitInheritanceClause (final IUmlInheritanceClause var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInheritanceClause#1|IUmlInheritanceClause


// ***** VDMTOOLS START Name=visitProperty#1|IUmlProperty KEEP=NO
  abstract public void visitProperty (final IUmlProperty var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitProperty#1|IUmlProperty


// ***** VDMTOOLS START Name=visitOwnedOperations#1|IUmlOwnedOperations KEEP=NO
  abstract public void visitOwnedOperations (final IUmlOwnedOperations var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOwnedOperations#1|IUmlOwnedOperations


// ***** VDMTOOLS START Name=visitStringType#1|IUmlStringType KEEP=NO
  abstract public void visitStringType (final IUmlStringType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStringType#1|IUmlStringType


// ***** VDMTOOLS START Name=visitClassType#1|IUmlClassType KEEP=NO
  abstract public void visitClassType (final IUmlClassType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClassType#1|IUmlClassType


// ***** VDMTOOLS START Name=visitClassNameType#1|IUmlClassNameType KEEP=NO
  abstract public void visitClassNameType (final IUmlClassNameType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClassNameType#1|IUmlClassNameType


// ***** VDMTOOLS START Name=visitVoidType#1|IUmlVoidType KEEP=NO
  abstract public void visitVoidType (final IUmlVoidType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitVoidType#1|IUmlVoidType


// ***** VDMTOOLS START Name=visitOwnedPropeties#1|IUmlOwnedPropeties KEEP=NO
  abstract public void visitOwnedPropeties (final IUmlOwnedPropeties var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOwnedPropeties#1|IUmlOwnedPropeties


// ***** VDMTOOLS START Name=visitBoolType#1|IUmlBoolType KEEP=NO
  abstract public void visitBoolType (final IUmlBoolType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBoolType#1|IUmlBoolType


// ***** VDMTOOLS START Name=visitClassifierTemplateParameter#1|IUmlClassifierTemplateParameter KEEP=NO
  abstract public void visitClassifierTemplateParameter (final IUmlClassifierTemplateParameter var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClassifierTemplateParameter#1|IUmlClassifierTemplateParameter


// ***** VDMTOOLS START Name=visitClass#1|IUmlClass KEEP=NO
  abstract public void visitClass (final IUmlClass var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClass#1|IUmlClass


// ***** VDMTOOLS START Name=visitTemplateSignature#1|IUmlTemplateSignature KEEP=NO
  abstract public void visitTemplateSignature (final IUmlTemplateSignature var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTemplateSignature#1|IUmlTemplateSignature


// ***** VDMTOOLS START Name=visitOwnedTypes#1|IUmlOwnedTypes KEEP=NO
  abstract public void visitOwnedTypes (final IUmlOwnedTypes var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOwnedTypes#1|IUmlOwnedTypes


// ***** VDMTOOLS START Name=visitUnlimitedNatural#1|IUmlUnlimitedNatural KEEP=NO
  abstract public void visitUnlimitedNatural (final IUmlUnlimitedNatural var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUnlimitedNatural#1|IUmlUnlimitedNatural


// ***** VDMTOOLS START Name=visitContextInfo#1|IUmlContextInfo KEEP=NO
  abstract public void visitContextInfo (final IUmlContextInfo var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitContextInfo#1|IUmlContextInfo


// ***** VDMTOOLS START Name=visitNode#1|IUmlNode KEEP=NO
  abstract public void visitNode (final IUmlNode var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNode#1|IUmlNode


// ***** VDMTOOLS START Name=visitType#1|IUmlType KEEP=NO
  abstract public void visitType (final IUmlType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitType#1|IUmlType


// ***** VDMTOOLS START Name=visitDefinitionBlock#1|IUmlDefinitionBlock KEEP=NO
  abstract public void visitDefinitionBlock (final IUmlDefinitionBlock var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDefinitionBlock#1|IUmlDefinitionBlock


// ***** VDMTOOLS START Name=visitVisibilityKind#1|IUmlVisibilityKind KEEP=NO
  abstract public void visitVisibilityKind (final IUmlVisibilityKind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitVisibilityKind#1|IUmlVisibilityKind


// ***** VDMTOOLS START Name=visitModelElement#1|IUmlModelElement KEEP=NO
  abstract public void visitModelElement (final IUmlModelElement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitModelElement#1|IUmlModelElement

}
;
