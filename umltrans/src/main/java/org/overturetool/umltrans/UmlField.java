//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.quotes.*;
// ***** VDMTOOLS END Name=imports



public class UmlField extends IUmlField {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivId KEEP=NO
  private String ivId = null;
// ***** VDMTOOLS END Name=ivId

// ***** VDMTOOLS START Name=ivType KEEP=NO
  private IUmlType ivType = null;
// ***** VDMTOOLS END Name=ivType


// ***** VDMTOOLS START Name=vdm_init_UmlField KEEP=NO
  private void vdm_init_UmlField () throws CGException {
    try {

      ivId = UTIL.ConvertToString(new String());
      ivType = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_UmlField


// ***** VDMTOOLS START Name=UmlField KEEP=NO
  public UmlField () throws CGException {
    vdm_init_UmlField();
  }
// ***** VDMTOOLS END Name=UmlField


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("Field");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IUmlVisitor KEEP=NO
  public void accept (final IUmlVisitor pVisitor) throws CGException {
    pVisitor.visitField((IUmlField) this);
  }
// ***** VDMTOOLS END Name=accept#1|IUmlVisitor


// ***** VDMTOOLS START Name=UmlField#2|String|IUmlType KEEP=NO
  public UmlField (final String p1, final IUmlType p2) throws CGException {

    vdm_init_UmlField();
    {

      setId(p1);
      setType((IUmlType) p2);
    }
  }
// ***** VDMTOOLS END Name=UmlField#2|String|IUmlType


// ***** VDMTOOLS START Name=UmlField#4|String|IUmlType|Integer|Integer KEEP=NO
  public UmlField (final String p1, final IUmlType p2, final Integer line, final Integer column) throws CGException {

    vdm_init_UmlField();
    {

      setId(p1);
      setType((IUmlType) p2);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=UmlField#4|String|IUmlType|Integer|Integer


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("id");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setId(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("type");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setType((IUmlType) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getId KEEP=NO
  public String getId () throws CGException {
    return ivId;
  }
// ***** VDMTOOLS END Name=getId


// ***** VDMTOOLS START Name=setId#1|String KEEP=NO
  public void setId (final String parg) throws CGException {
    ivId = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setId#1|String


// ***** VDMTOOLS START Name=getType KEEP=NO
  public IUmlType getType () throws CGException {
    return (IUmlType) ivType;
  }
// ***** VDMTOOLS END Name=getType


// ***** VDMTOOLS START Name=setType#1|IUmlType KEEP=NO
  public void setType (final IUmlType parg) throws CGException {
    ivType = (IUmlType) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setType#1|IUmlType

}
;
