["state invariant satisfiable obligation in \u0027Metro1\u0027 (metro.vdmsl) at line 8:7: (exists doors:(\u003cClosed\u003e | \u003cOpen\u003e), train:(\u003cMoving\u003e | \u003cStopped\u003e) \u0026 (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro1\u0027 (metro.vdmsl) at line 18:6: ((doors \u003d \u003cClosed\u003e) \u003d\u003e let mk_Metro(doors, train) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro1\u0027 (metro.vdmsl) at line 23:6: let mk_Metro(doors, train) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))","state invariant holds obligation in \u0027Metro1\u0027 (metro.vdmsl) at line 27:6: ((train \u003d \u003cStopped\u003e) \u003d\u003e let mk_Metro(doors, train) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro1\u0027 (metro.vdmsl) at line 32:6: let mk_Metro(doors, train) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))","state invariant satisfiable obligation in \u0027Metro1a\u0027 (metro.vdmsl) at line 47:7: (exists doorsopen:bool, trainmoving:bool \u0026 (not (doorsopen and trainmoving)))","operation postcondition satisfiable obligation in \u0027Metro1a\u0027 (metro.vdmsl) at line 55:3: (pre_Accelerate(oldstate) \u003d\u003e (exists newstate:Metro \u0026 post_Accelerate(oldstate, newstate)))","operation postcondition satisfiable obligation in \u0027Metro1a\u0027 (metro.vdmsl) at line 61:3: (exists newstate:Metro \u0026 post_Break(oldstate, newstate))","operation postcondition satisfiable obligation in \u0027Metro1a\u0027 (metro.vdmsl) at line 65:3: (pre_Open(oldstate) \u003d\u003e (exists newstate:Metro \u0026 post_Open(oldstate, newstate)))","operation postcondition satisfiable obligation in \u0027Metro1a\u0027 (metro.vdmsl) at line 71:3: (exists newstate:Metro \u0026 post_Close(oldstate, newstate))","state invariant satisfiable obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 97:7: (exists doors:(\u003cClosed\u003e | \u003cOpen\u003e), train:(\u003cMoving\u003e | \u003cStopped\u003e), bellon:[Time] \u0026 (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 113:6: ((doors \u003d \u003cOpen\u003e) \u003d\u003e let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 118:6: let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 122:6: ((train \u003d \u003cStopped\u003e) \u003d\u003e let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e))))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 127:6: (forall t:Time, oldstate:Metro \u0026 ((bellon \u003d nil) \u003d\u003e let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 133:11: (forall t:Time, oldstate:Metro \u0026 ((bellon \u003c\u003e nil) \u003d\u003e let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))))","state invariant holds obligation in \u0027Metro2\u0027 (metro.vdmsl) at line 135:6: (forall t:Time, oldstate:Metro \u0026 ((bellon \u003c\u003e nil) \u003d\u003e let mk_Metro(doors, train, bellon) \u003d Metro in (not ((doors \u003d \u003cOpen\u003e) and (train \u003d \u003cMoving\u003e)))))","type invariant satisfiable obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 169:3: (exists t:Time \u0026 (t \u003e 0))","type invariant satisfiable obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 172:3: (exists mk_Interval(s, e):Interval \u0026 (s \u003c e))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 178:41: (forall s:seq of (Interval) \u0026 (forall i in set {1, ... ,((len s) - 1)} \u0026 (i in set (inds s))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 178:53: (forall s:seq of (Interval) \u0026 (forall i in set {1, ... ,((len s) - 1)} \u0026 ((i + 1) in set (inds s))))","type invariant satisfiable obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 176:3: (exists s:LifeTime \u0026 (forall i in set {1, ... ,((len s) - 1)} \u0026 ((s(i).stop) \u003c (s((i + 1)).start))))","type invariant satisfiable obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 180:3: (exists mk_System(train, doors, bell, closebut, closeassist):System \u0026 (NotMovingAndOpen(train, doors) and (BellOnWhenCloseBut(bell, closebut) and CloseAssistAfter3Secs(closeassist, bell))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 195:32: (forall train:LifeTime, doors:LifeTime \u0026 (forall i in set (inds train), j in set (inds doors) \u0026 (i in set (inds train))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 195:41: (forall train:LifeTime, doors:LifeTime \u0026 (forall i in set (inds train), j in set (inds doors) \u0026 (j in set (inds doors))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 201:9: (forall closeassist:LifeTime, bell:LifeTime \u0026 (forall i in set (inds closeassist) \u0026 (forall j in set (inds bell) \u0026 (j in set (inds bell)))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 201:25: (forall closeassist:LifeTime, bell:LifeTime \u0026 (forall i in set (inds closeassist) \u0026 (forall j in set (inds bell) \u0026 (j in set (inds bell)))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 202:9: (forall closeassist:LifeTime, bell:LifeTime \u0026 (forall i in set (inds closeassist) \u0026 (forall j in set (inds bell) \u0026 (((bell(j).stop) \u003e\u003d ((bell(j).start) + 3)) \u003d\u003e (i in set (inds closeassist))))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 202:32: (forall closeassist:LifeTime, bell:LifeTime \u0026 (forall i in set (inds closeassist) \u0026 (forall j in set (inds bell) \u0026 (((bell(j).stop) \u003e\u003d ((bell(j).start) + 3)) \u003d\u003e (j in set (inds bell))))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 208:21: (forall bell:LifeTime, closebut:LifeTime \u0026 (forall i in set (inds bell) \u0026 (forall j in set (inds closebut) \u0026 (i in set (inds bell)))))","legal sequence application obligation in \u0027Metro3\u0027 (metro.vdmsl) at line 208:29: (forall bell:LifeTime, closebut:LifeTime \u0026 (forall i in set (inds bell) \u0026 (forall j in set (inds closebut) \u0026 (j in set (inds closebut)))))"]