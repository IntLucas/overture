["state invariant holds obligation in \u0027Passenger\u0027 (Passenger.vdmpp) at line 15:16: (forall destination:Busstop \u0026 (((destination.IsStop)() \u003d true) \u003d\u003e ((goal.IsStop)() \u003d true)))","state invariant holds obligation in \u0027Passenger\u0027 (Passenger.vdmpp) at line 36:13: (((goal.IsStop)() \u003d true) \u003d\u003e ((goal.IsStop)() \u003d true))","state invariant holds obligation in \u0027Passenger\u0027 (Passenger.vdmpp) at line 49:17: (((goal.IsStop)() \u003d true) \u003d\u003e ((goal.IsStop)() \u003d true))","state invariant holds obligation in \u0027Passenger\u0027 (Passenger.vdmpp) at line 67:17: (((goal.IsStop)() \u003d true) \u003d\u003e ((goal.IsStop)() \u003d true))","non-zero obligation in \u0027Road\u0027 (Road.vdmpp) at line 23:45: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e (Config`DefaultRoadSpeedLimit \u003c\u003e 0)))","type compatibility obligation in \u0027Road\u0027 (Road.vdmpp) at line 23:28: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e ((floor (length / Config`DefaultRoadSpeedLimit)) \u003e\u003d 0)))","state invariant holds obligation in \u0027Road\u0027 (Road.vdmpp) at line 16:16: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e ((card waypoints) \u003e 1)))","non-zero obligation in \u0027Road\u0027 (Road.vdmpp) at line 35:45: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat, limit:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e (limit \u003c\u003e 0)))","type compatibility obligation in \u0027Road\u0027 (Road.vdmpp) at line 35:28: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat, limit:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e ((floor (length / limit)) \u003e\u003d 0)))","state invariant holds obligation in \u0027Road\u0027 (Road.vdmpp) at line 27:16: (forall roadnumber:RoadNumber, waypoints:set of (Waypoint), length:nat, limit:nat \u0026 (((card waypoints) \u003e 1) \u003d\u003e ((card waypoints) \u003e 1)))","let be st existence obligation in \u0027Road\u0027 (Road.vdmpp) at line 49:22: (forall wp:Waypoint \u0026 ((wp in set wps) \u003d\u003e (exists opposite in set (wps \\ {wp}) \u0026 true)))","cases exhaustive obligation in \u0027Waypoint\u0027 (Waypoint.vdmpp) at line 28:13: (forall busstop:seq of (char) \u0026 (((((((busstop \u003d \"A\") or (busstop \u003d \"B\")) or (busstop \u003d \"C\")) or (busstop \u003d \"D\")) or (busstop \u003d \"E\")) or (busstop \u003d \"F\")) or (busstop \u003d \"Central\")))","non-empty sequence obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 28:26: (forall linenumber:nat, busroute:seq of (Road), waypoints:seq of (Waypoint) \u0026 ((((len waypoints) \u003e 1) and (waypoints \u003c\u003e [])) \u003d\u003e (waypoints \u003c\u003e [])))","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 22:16: (forall linenumber:nat, busroute:seq of (Road), waypoints:seq of (Waypoint) \u0026 ((((len waypoints) \u003e 1) and (waypoints \u003c\u003e [])) \u003d\u003e ((card {}) \u003c\u003d Config`BusCapacity)))","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 39:13: (forall ps:set of (Passenger) \u0026 ((((card seats) + (card ps)) \u003c\u003d Config`BusCapacity) \u003d\u003e (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card (seats union ps)) \u003c\u003d Config`BusCapacity))))","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 47:13: (forall p:set of (Passenger) \u0026 (((p inter seats) \u003c\u003e {}) \u003d\u003e (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card (seats \\ p)) \u003c\u003d Config`BusCapacity))))","legal sequence application obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 58:21: (forall i in set (inds wps) \u0026 ((wps(i).IsStop)() \u003d\u003e (i in set (inds wps))))","legal sequence application obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 58:50: (forall i in set (inds wps) \u0026 (i in set (inds wps)))","type compatibility obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 56:16: is_(RESULT, seq of (Busstop))","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 66:17: (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card seats) \u003c\u003d Config`BusCapacity))","non-empty sequence obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 69:31: (route \u003c\u003e [])","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 72:17: (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card seats) \u003c\u003d Config`BusCapacity))","non-empty sequence obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 72:32: (route \u003c\u003e [])","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 74:17: (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card seats) \u003c\u003d Config`BusCapacity))","state invariant holds obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 78:21: (((card seats) \u003c\u003d Config`BusCapacity) \u003d\u003e ((card seats) \u003c\u003d Config`BusCapacity))","let be st existence obligation in \u0027Bus\u0027 (Bus.vdmpp) at line 207:17: (forall ps:set of (Passenger), limit:nat \u0026 (exists sub in set ps \u0026 true))","cases exhaustive obligation in \u0027Types\u0027 (Types.vdmpp) at line 28:5: (forall d:Direction \u0026 ((((d \u003d \u003cNORTH\u003e) or (d \u003d \u003cSOUTH\u003e)) or (d \u003d \u003cEAST\u003e)) or (d \u003d \u003cWEST\u003e)))","legal map application obligation in \u0027TimeStamp\u0027 (TimeStamp.vdmpp) at line 63:64: (forall th in set (dom wakeUpMap) \u0026 (th in set (dom wakeUpMap)))","legal map application obligation in \u0027TimeStamp\u0027 (TimeStamp.vdmpp) at line 123:65: (forall th in set (dom wakeUpMap) \u0026 (th in set (dom wakeUpMap)))","let be st existence obligation in \u0027WaitNotify\u0027 (WaitNotify.vdmpp) at line 18:7: (exists p in set waitset \u0026 true)","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 36:26: (forall stp:BusStops \u0026 ((stp not in set (dom stops)) \u003d\u003e (forall ldom1 in set (dom stops), rdom2 in set (dom {stp |-\u003e bs}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (stops(ldom1) \u003d {stp |-\u003e bs}(rdom2))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 36:32: (forall stp:BusStops \u0026 ((stp not in set (dom stops)) \u003d\u003e is_((stops munion {stp |-\u003e bs}), inmap (BusStops) to (Busstop))))","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 37:31: (forall stp:BusStops \u0026 ((stp not in set (dom stops)) \u003d\u003e (forall ldom1 in set (dom wayspoints), rdom2 in set (dom {stp |-\u003e bs}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (wayspoints(ldom1) \u003d {stp |-\u003e bs}(rdom2))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 37:42: (forall stp:BusStops \u0026 ((stp not in set (dom stops)) \u003d\u003e is_((wayspoints munion {stp |-\u003e bs}), inmap (WaypointsEnum) to (Waypoint))))","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 51:31: (forall stp:WaypointsEnum \u0026 ((stp not in set (dom stops)) \u003d\u003e (true \u003d\u003e (forall ldom1 in set (dom wayspoints), rdom2 in set (dom {stp |-\u003e wp}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (wayspoints(ldom1) \u003d {stp |-\u003e wp}(rdom2)))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 51:42: (forall stp:WaypointsEnum \u0026 ((stp not in set (dom stops)) \u003d\u003e (true \u003d\u003e is_((wayspoints munion {stp |-\u003e wp}), inmap (WaypointsEnum) to (Waypoint)))))","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 65:26: (forall wp1:Waypoint, wp2:Waypoint, roadNmbr:RoadNumber, length:nat \u0026 (((roadNmbr not in set (dom roads)) and ((wp1 \u003c\u003e wp2) and (forall r in set (rng roads) \u0026 (not (r.Covers)({wp1, wp2}))))) \u003d\u003e (forall ldom1 in set (dom roads), rdom2 in set (dom {roadNmbr |-\u003e r}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (roads(ldom1) \u003d {roadNmbr |-\u003e r}(rdom2))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 65:32: (forall wp1:Waypoint, wp2:Waypoint, roadNmbr:RoadNumber, length:nat \u0026 (((roadNmbr not in set (dom roads)) and ((wp1 \u003c\u003e wp2) and (forall r in set (rng roads) \u0026 (not (r.Covers)({wp1, wp2}))))) \u003d\u003e is_((roads munion {roadNmbr |-\u003e r}), inmap (RoadNumber) to (Road))))","legal map application obligation in \u0027City\u0027 (City.vdmpp) at line 75:25: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 (wp1 in set (dom wayspoints)))","legal map application obligation in \u0027City\u0027 (City.vdmpp) at line 75:42: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 (wp2 in set (dom wayspoints)))","operation call obligation in \u0027City\u0027 (City.vdmpp) at line 75:17: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 ((wayspoints(wp1) not in set (dom roads)) and (forall r in set (rng roads) \u0026 ((not (r.Covers)({wp1, wp2})) and (wp1 \u003c\u003e wp2)))))","legal map application obligation in \u0027City\u0027 (City.vdmpp) at line 77:25: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 (forall wayspoints1:inmap (WaypointsEnum) to (Waypoint), stops2:inmap (BusStops) to (Busstop), roads3:inmap (RoadNumber) to (Road), buses4:inmap (nat) to (Bus), central5:Busstop, inflow6:nat \u0026 (true \u003d\u003e (wp1 in set (dom wayspoints1)))))","legal map application obligation in \u0027City\u0027 (City.vdmpp) at line 77:42: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 (forall wayspoints1:inmap (WaypointsEnum) to (Waypoint), stops2:inmap (BusStops) to (Busstop), roads3:inmap (RoadNumber) to (Road), buses4:inmap (nat) to (Bus), central5:Busstop, inflow6:nat \u0026 (true \u003d\u003e (wp2 in set (dom wayspoints1)))))","operation call obligation in \u0027City\u0027 (City.vdmpp) at line 77:17: (forall wp1:WaypointsEnum, wp2:WaypointsEnum, roadNmbr:RoadNumber, length:nat, highspeed:bool \u0026 (forall wayspoints1:inmap (WaypointsEnum) to (Waypoint), stops2:inmap (BusStops) to (Busstop), roads3:inmap (RoadNumber) to (Road), buses4:inmap (nat) to (Bus), central5:Busstop, inflow6:nat \u0026 (true \u003d\u003e ((wayspoints(wp1) not in set (dom roads3)) and ((wayspoints(wp1) \u003c\u003e wayspoints(wp1)) and (forall r in set (rng roads) \u0026 (not (r.Covers)({wp1, wp2}))))))))","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 86:26: (forall wp1:Waypoint, wp2:Waypoint, roadNmbr:RoadNumber, length:nat, speedlimit:nat \u0026 (((roadNmbr not in set (dom roads)) and (forall r in set (rng roads) \u0026 ((not (r.Covers)({wp1, wp2})) and (wp1 \u003c\u003e wp2)))) \u003d\u003e (forall ldom1 in set (dom roads), rdom2 in set (dom {roadNmbr |-\u003e r}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (roads(ldom1) \u003d {roadNmbr |-\u003e r}(rdom2))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 86:32: (forall wp1:Waypoint, wp2:Waypoint, roadNmbr:RoadNumber, length:nat, speedlimit:nat \u0026 (((roadNmbr not in set (dom roads)) and (forall r in set (rng roads) \u0026 ((not (r.Covers)({wp1, wp2})) and (wp1 \u003c\u003e wp2)))) \u003d\u003e is_((roads munion {roadNmbr |-\u003e r}), inmap (RoadNumber) to (Road))))","legal sequence application obligation in \u0027City\u0027 (City.vdmpp) at line 111:38: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e (i in set (inds busRoads))))","non-empty sequence obligation in \u0027City\u0027 (City.vdmpp) at line 116:24: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e (([currentWP] ^ [currentWP]) \u003c\u003e [])))","legal sequence application obligation in \u0027City\u0027 (City.vdmpp) at line 116:36: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e ((len ([currentWP] ^ [currentWP])) in set (inds ([currentWP] ^ [currentWP])))))","map compatible obligation in \u0027City\u0027 (City.vdmpp) at line 123:30: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e (forall ldom1 in set (dom buses), rdom2 in set (dom {lineNumber |-\u003e bus}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (buses(ldom1) \u003d {lineNumber |-\u003e bus}(rdom2))))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 123:36: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e is_((buses munion {lineNumber |-\u003e bus}), inmap (nat) to (Bus))))","type compatibility obligation in \u0027City\u0027 (City.vdmpp) at line 94:16: (forall lineNumber:nat, route:seq of (RoadNumber) \u0026 ((((len route) \u003e 1) and (lineNumber not in set (dom buses))) \u003d\u003e is_(RESULT, Bus)))","legal map application obligation in \u0027City\u0027 (City.vdmpp) at line 136:25: (forall route:seq of (RoadNumber) \u0026 (forall i in set (inds route) \u0026 (route(i) in set (dom roads))))","legal sequence application obligation in \u0027City\u0027 (City.vdmpp) at line 136:31: (forall route:seq of (RoadNumber) \u0026 (forall i in set (inds route) \u0026 (i in set (inds route))))","legal function application obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 36:28: (forall filename:seq of (char) \u0026 pre_(((io.freadval))[InputTP]filename))","type compatibility obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 38:24: (forall filename:seq of (char) \u0026 is_(input, seq of (inline)))","while loop termination obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 92:9: ...","non-empty sequence obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 94:25: (inlines \u003c\u003e [])","type compatibility obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 98:24: is_((event.t), real)","legal sequence application obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 108:47: (true \u003d\u003e (true \u003d\u003e (forall i in set (inds wps) \u0026 (i in set (inds wps)))))","legal sequence application obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 114:47: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (forall i in set (inds wps) \u0026 (i in set (inds wps)))))))","type compatibility obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 130:24: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e is_((event.t), real)))))))","type compatibility obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 140:24: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (forall city1:City, io2:IO, inlines3:seq of (inline), outlines4:seq of (char), busy5:bool, simulating6:bool, passengersTransported7:nat, passengersAnnoyed8:nat, passengersCount9:nat, passengersAnnoyedStops10:map (WaypointsEnum) to (nat) \u0026 (true \u003d\u003e is_((event.t), real)))))))))","type compatibility obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 162:24: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (forall city1:City, io2:IO, inlines3:seq of (inline), outlines4:seq of (char), busy5:bool, simulating6:bool, passengersTransported7:nat, passengersAnnoyed8:nat, passengersCount9:nat, passengersAnnoyedStops10:map (WaypointsEnum) to (nat) \u0026 (true \u003d\u003e (true \u003d\u003e is_((event.t), real))))))))))","non-empty sequence obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 174:31: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (forall city1:City, io2:IO, inlines3:seq of (inline), outlines4:seq of (char), busy5:bool, simulating6:bool, passengersTransported7:nat, passengersAnnoyed8:nat, passengersCount9:nat, passengersAnnoyedStops10:map (WaypointsEnum) to (nat) \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (inlines3 \u003c\u003e []))))))))))))","legal map application obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 237:75: (forall number:nat, goal:WaypointsEnum \u0026 (goal in set (dom (passengersAnnoyedStops ++ {goal |-\u003e number}))))","legal map application obligation in \u0027Environment\u0027 (Environment.vdmpp) at line 259:129: (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (waypoint in set (dom passengersAnnoyedStops))))))))","operation call obligation in \u0027IO\u0027 (IO.vdmpp) at line 80:3: (forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))","non-zero obligation in \u0027MATH\u0027 (MATH.vdmpp) at line 59:11: (forall a:real \u0026 ((a \u003c\u003e 0) \u003d\u003e (a \u003c\u003e 0)))"]