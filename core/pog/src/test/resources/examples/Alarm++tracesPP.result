["enumeration map injectivity obligation in \u0027Test1\u0027 (test1.vdmpp) at line 12:33: (forall m1, m2 in set {{p1 |-\u003e {ex1, ex4}}, {p2 |-\u003e {ex2, ex3}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 15:30: (forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 (forall p in set (dom sch) \u0026 (p in set (dom sch))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 18:29: (forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 ((forall p in set (dom sch) \u0026 (sch(p) \u003c\u003e {})) \u003d\u003e (forall a in set as \u0026 (forall p in set (dom sch) \u0026 (p in set (dom sch))))))","let be st existence obligation in \u0027Plant\u0027 (plant.vdmpp) at line 29:7: (forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e (exists expert in set schedule(p) \u0026 ((a.GetReqQuali)() in set (expert.GetQuali)()))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 29:21: (forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e (p in set (dom schedule))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 37:22: (forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e let expert:Expert \u003d RESULT in (p in set (dom schedule))))","operation establishes postcondition obligation in \u0027Plant\u0027 (plant.vdmpp) at line 27:8: (forall a:Alarm, p:Period \u0026 (((a in set alarms) and (p in set (dom schedule))) \u003d\u003e let expert:Expert \u003d RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 42:15: (forall p:Period \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 48:25: (forall ex:Expert \u0026 (forall p in set (dom schedule) \u0026 (p in set (dom schedule))))","state invariant holds obligation in \u0027Plant\u0027 (plant.vdmpp) at line 50:8: (forall als:set of (Alarm), sch:map (Period) to (set of (Expert)) \u0026 (PlantInv(als, sch) \u003d\u003e PlantInv(als, sch)))","state invariant holds obligation in \u0027Plant\u0027 (plant.vdmpp) at line 60:3: (forall p:Period, ex:Expert \u0026 (PlantInv(alarms, schedule) \u003d\u003e PlantInv(alarms, schedule)))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 61:23: (forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","legal map application obligation in \u0027Plant\u0027 (plant.vdmpp) at line 67:13: (forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (p in set (dom schedule))))","state invariant holds obligation in \u0027Plant\u0027 (plant.vdmpp) at line 69:5: (forall p:Period, ex:Expert \u0026 ((p in set (dom schedule)) \u003d\u003e (PlantInv(alarms, schedule) \u003d\u003e PlantInv(alarms, (if ((card exs) \u003d 1)\nthen ({p} \u003c-: schedule)\nelse (schedule ++ {p |-\u003e (exs \\ {ex})}))))))"]