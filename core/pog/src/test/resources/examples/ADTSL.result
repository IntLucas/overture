["value binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 97:15: (forall node:Nodes_Node \u0026 ((is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e ((not is_(node, Nodes_DoubleLink)) \u003d\u003e (exists mk_Nodes_BinaryTree(data, -, -, -):Nodes_Node \u0026 (mk_Nodes_BinaryTree(data, any1, any2, any3) \u003d node))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 97:52: (forall node:Nodes_Node \u0026 ((is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e ((not is_(node, Nodes_DoubleLink)) \u003d\u003e is_(node, Nodes_BinaryTree)))))","value binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 112:15: (forall node:Nodes_Node, data:Nodes_Data \u0026 ((is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e ((not is_(node, Nodes_DoubleLink)) \u003d\u003e (exists mk_Nodes_BinaryTree(-, right, left, parent):Nodes_Node \u0026 (mk_Nodes_BinaryTree(any1, right, left, parent) \u003d node))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 112:61: (forall node:Nodes_Node, data:Nodes_Data \u0026 ((is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e ((not is_(node, Nodes_DoubleLink)) \u003d\u003e is_(node, Nodes_BinaryTree)))))","value binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 123:15: (forall node:Nodes_Node \u0026 ((is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e (exists mk_Nodes_DoubleLink(-, next, -):Nodes_Node \u0026 (mk_Nodes_DoubleLink(any1, next, any2) \u003d node)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 123:49: (forall node:Nodes_Node \u0026 ((is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e is_(node, Nodes_DoubleLink))))","value binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 133:15: (forall node:Nodes_Node, next:Nodes_NodePtr \u0026 ((is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e (exists mk_Nodes_DoubleLink(data, -, prev):Nodes_Node \u0026 (mk_Nodes_DoubleLink(data, any1, prev) \u003d node)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 133:52: (forall node:Nodes_Node, next:Nodes_NodePtr \u0026 ((is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) \u003d\u003e ((not is_(node, Nodes_SingleLink)) \u003d\u003e is_(node, Nodes_DoubleLink))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 214:1: (exists mk_Heaps_Location(d, a):Heaps_Location \u0026 ((a \u003d true) \u003c\u003d\u003e (d \u003c\u003e nil)))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 224:1: (exists mk_Heaps_Heap(s):Heaps_Heap \u0026 ((len s) \u003d Heaps_Size))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 237:12: (forall length:nat1 \u0026 ((length \u003e 1) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(nil, false))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 238:43: (forall length:nat1 \u0026 ((length \u003e 1) \u003d\u003e ((length - 1) \u003e 0)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 240:12: (forall length:nat1 \u0026 ((not (length \u003e 1)) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(nil, false))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 247:17: inv_Heaps_Heap(mk_Heaps_Heap(Heaps_InitSequence(Heaps_Size)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 252:16: (forall heap:Heaps_Heap \u0026 let store:seq of (Heaps_Location) \u003d (heap.storage) in (forall i in set (inds store) \u0026 (((store(i).allocated) \u003d true) \u003d\u003e (i in set (inds store)))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 253:18: (forall heap:Heaps_Heap \u0026 let store:seq of (Heaps_Location) \u003d (heap.storage) in (forall i in set (inds store) \u0026 (i in set (inds store))))","sequence modification obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 269:32: (forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location \u0026 ((address in set (inds (heap.storage))) \u003d\u003e ((dom {address |-\u003e location}) subset (inds (heap.storage)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 269:6: (forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location \u0026 ((address in set (inds (heap.storage))) \u003d\u003e inv_Heaps_Heap(mk_Heaps_Heap(((heap.storage) ++ {address |-\u003e location})))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 282:10: (forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data \u0026 let store:seq of (Heaps_Location) \u003d (heap.storage) in ((address in set (inds store)) \u003d\u003e (address in set (inds store))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 279:6: (forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data \u0026 (let store:seq of (Heaps_Location) \u003d (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) \u003d true)) \u003d\u003e pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(data, true))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 279:37: (forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data \u0026 (let store:seq of (Heaps_Location) \u003d (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) \u003d true)) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(data, true))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 294:15: (forall heap:Heaps_Heap, address:ADDRESS \u0026 let store:seq of (Heaps_Location) \u003d (heap.storage) in ((address in set (inds store)) \u003d\u003e (address in set (inds store))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 290:6: (forall heap:Heaps_Heap, address:ADDRESS \u0026 (let store:seq of (Heaps_Location) \u003d (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) \u003d true)) \u003d\u003e (address in set (inds (heap.storage)))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 303:36: (forall heap:Heaps_Heap \u0026 let store:seq of (Heaps_Location) \u003d (heap.storage) in (forall i in set (inds store) \u0026 (i in set (inds store))))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 311:6: (forall heap:Heaps_Heap \u0026 (Heaps_Available(heap) \u003d\u003e (exists1 new in set Heaps_UnallocatedAddresses(heap) \u0026 (forall i in set Heaps_UnallocatedAddresses(heap) \u0026 (new \u003c\u003d i)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 327:23: (forall data:Heaps_Data, oldstate:SystemState \u0026 (Heaps_Available(heap) \u003d\u003e pre_Heaps_UnallocatedAddress(heap)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 328:19: (forall data:Heaps_Data, oldstate:SystemState \u0026 (Heaps_Available(heap) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(data, true))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 329:19: (forall data:Heaps_Data, oldstate:SystemState \u0026 (Heaps_Available(heap) \u003d\u003e pre_Heaps_ModifyLoc(heap, newAddress, newLoc)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 346:40: (forall address:ADDRESS, oldstate:SystemState \u0026 (pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false)) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(nil, false))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 345:14: (forall address:ADDRESS, oldstate:SystemState \u0026 (pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false)) \u003d\u003e pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 345:45: (forall address:ADDRESS, oldstate:SystemState \u0026 (pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false)) \u003d\u003e inv_Heaps_Location(mk_Heaps_Location(nil, false))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 354:14: (forall ptr:ADDRESS, data:Data, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetData(Heaps_Retrieve(heap, ptr), data)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 355:16: (forall ptr:ADDRESS, data:Data, oldstate:SystemState \u0026 pre_Nodes_SetData(Heaps_Retrieve(heap, ptr), data))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 355:30: (forall ptr:ADDRESS, data:Data, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 355:30: (forall ptr:ADDRESS, data:Data, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 360:14: (forall ptr:ADDRESS, next:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetNext(Heaps_Retrieve(heap, ptr), next)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 361:16: (forall ptr:ADDRESS, next:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_SetNext(Heaps_Retrieve(heap, ptr), next))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 361:30: (forall ptr:ADDRESS, next:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 361:30: (forall ptr:ADDRESS, next:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 365:14: (forall ptr:ADDRESS, left:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 366:16: (forall ptr:ADDRESS, left:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 366:30: (forall ptr:ADDRESS, left:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 366:30: (forall ptr:ADDRESS, left:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 370:14: (forall ptr:ADDRESS, right:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetRight(Heaps_Retrieve(heap, ptr), right)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 371:16: (forall ptr:ADDRESS, right:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_SetRight(Heaps_Retrieve(heap, ptr), right))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 371:31: (forall ptr:ADDRESS, right:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 371:31: (forall ptr:ADDRESS, right:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 375:14: (forall ptr:ADDRESS, prev:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 376:16: (forall ptr:ADDRESS, prev:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 376:30: (forall ptr:ADDRESS, prev:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 376:30: (forall ptr:ADDRESS, prev:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 380:14: (forall ptr:ADDRESS, parent:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Modify(heap, ptr, Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 381:16: (forall ptr:ADDRESS, parent:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 381:32: (forall ptr:ADDRESS, parent:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 381:32: (forall ptr:ADDRESS, parent:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 385:13: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_GetData(Heaps_Retrieve(heap, ptr)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 385:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 385:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 389:13: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_GetNext(Heaps_Retrieve(heap, ptr)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 389:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 389:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 393:13: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 393:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 393:27: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 397:13: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 397:28: (forall ptr:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 397:28: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 401:13: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 401:29: (forall ptr:ADDRESS, oldstate:SystemState \u0026 ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 401:29: (forall ptr:ADDRESS, oldstate:SystemState \u0026 pre_Heaps_Retrieve(heap, ptr))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 458:22: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e pre_Heaps_Retrieve(heap, list)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 459:22: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e let node:[Heaps_Data] \u003d Heaps_Retrieve(heap, list) in pre_Nodes_GetData(node)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 459:36: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e let node:[Heaps_Data] \u003d Heaps_Retrieve(heap, list) in ((is_(node, Nodes_BinaryTree) or is_(node, Nodes_DoubleLink)) or is_(node, Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 460:22: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e let node:[Heaps_Data] \u003d Heaps_Retrieve(heap, list) in let data:Nodes_Data \u003d Nodes_GetData(node) in pre_Nodes_GetNext(node)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 460:36: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e let node:[Heaps_Data] \u003d Heaps_Retrieve(heap, list) in let data:Nodes_Data \u003d Nodes_GetData(node) in ((is_(node, Nodes_BinaryTree) or is_(node, Nodes_DoubleLink)) or is_(node, Nodes_SingleLink))))","function establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 468:1: (forall heap:Heaps_Heap, list:SList_List \u0026 post_SList_Lengthf(heap, list, (if (not SList_IsEmpty(list))\nthen let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (1 + SList_Lengthf(heap, tail))\nelse 0)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 471:22: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e pre_Nodes_GetNext(Heaps_Retrieve(heap, list))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 471:36: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 471:36: (forall heap:Heaps_Heap, list:SList_List \u0026 ((not SList_IsEmpty(list)) \u003d\u003e pre_Heaps_Retrieve(heap, list)))","function establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 481:1: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 (pre_SList_PtrToNode(heap, list, position) \u003d\u003e post_SList_PtrToNode(heap, list, position, let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position \u003e 1)\nthen SList_PtrToNode(heap, tail, (position - 1))\nelse list))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 490:17: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let RESULT \u003d let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position \u003e 1)\nthen SList_PtrToNode(heap, tail, (position - 1))\nelse list) in pre_Nodes_GetData(Heaps_Retrieve(heap, RESULT))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 490:31: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let RESULT \u003d let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position \u003e 1)\nthen SList_PtrToNode(heap, tail, (position - 1))\nelse list) in ((is_(Heaps_Retrieve(heap, RESULT), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, RESULT), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, RESULT), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 490:31: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let RESULT \u003d let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position \u003e 1)\nthen SList_PtrToNode(heap, tail, (position - 1))\nelse list) in pre_Heaps_Retrieve(heap, RESULT)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 492:23: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let RESULT \u003d let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position \u003e 1)\nthen SList_PtrToNode(heap, tail, (position - 1))\nelse list) in let data:Nodes_Data \u003d Nodes_GetData(Heaps_Retrieve(heap, RESULT)), listSeq:seq of (SList_Data) \u003d SList_Seq(heap, list) in (position in set (inds listSeq))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 484:17: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e pre_Nodes_GetNext(Heaps_Retrieve(heap, list))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 484:31: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 484:31: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e pre_Heaps_Retrieve(heap, list)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 486:16: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in ((position \u003e 1) \u003d\u003e pre_SList_PtrToNode(heap, tail, (position - 1)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 486:53: (forall heap:Heaps_Heap, list:SList_List, position:nat1 \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let tail:Nodes_NodePtr \u003d Nodes_GetNext(Heaps_Retrieve(heap, list)) in ((position \u003e 1) \u003d\u003e ((position - 1) \u003e 0))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 507:1: (forall list:SList_List, data:SList_Data, oldstate:SystemState \u0026 (([data] ^ SList_Seq(heap~, list)) \u003d SList_Seq(heap, RESULT)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 524:12: (forall list:SList_List, ptr:Nodes_NodePtr, data:SList_Data, oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (1 in set (inds old))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 524:30: (forall list:SList_List, ptr:Nodes_NodePtr, data:SList_Data, oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (old \u003c\u003e [])))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 516:1: (forall list:SList_List, ptr:Nodes_NodePtr, data:SList_Data, oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) \u003d SList_Seq(heap, ptr))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 537:16: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and Heaps_Available(heap)) \u003d\u003e pre_SList_PtrToNode(heap, list, (position - 1))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 537:53: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and Heaps_Available(heap)) \u003d\u003e ((position - 1) \u003e 0)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 541:14: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and Heaps_Available(heap)) \u003d\u003e let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in (forall i in set (inds new) \u0026 ((i \u003c\u003e position) \u003d\u003e (i in set (inds new))))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 542:10: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and Heaps_Available(heap)) \u003d\u003e let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) \u003d [new(i) | i in set (inds new) \u0026 (i \u003c\u003e position)]) \u003d\u003e (position in set (inds new)))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 531:1: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and Heaps_Available(heap)) \u003d\u003e let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) \u003d [new(i) | i in set (inds new) \u0026 (i \u003c\u003e position)]) and ((new(position) \u003d data) and ((Heaps_AmountUsed(heap~) + 1) \u003d Heaps_AmountUsed(heap))))))","while loop termination obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 555:11: ...","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 549:1: (forall list:SList_List, data:SList_Data, oldstate:SystemState \u0026 (Heaps_Available(heap) \u003d\u003e (((SList_Seq(heap~, list) ^ [data]) \u003d SList_Seq(heap, RESULT)) and ((Heaps_AmountUsed(heap~) + 1) \u003d Heaps_AmountUsed(heap)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 569:32: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e pre_SList_PtrToNode(heap, list, position)))","sequence modification obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 574:28: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e (true \u003d\u003e ((dom {position |-\u003e data}) subset (inds SList_Seq(heap~, list))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 567:1: (forall list:SList_List, data:SList_Data, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e (true \u003d\u003e (((SList_Seq(heap~, list) ++ {position |-\u003e data}) \u003d SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) \u003d Heaps_AmountUsed(heap))))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 585:6: (forall list:SList_List, oldstate:SystemState \u0026 pre_Heaps_ModifyLoc(heap, temp, mk_Heaps_Location(nil, false)))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 588:9: (forall list:SList_List, oldstate:SystemState \u0026 (true \u003d\u003e (SList_Seq(heap~, list) \u003c\u003e [])))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 581:1: (forall list:SList_List, oldstate:SystemState \u0026 (true \u003d\u003e ((tl SList_Seq(heap~, list)) \u003d SList_Seq(heap, RESULT))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 598:6: (forall list:SList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e pre_Heaps_ModifyLoc(heap, NEXT(ptr), mk_Heaps_Location(nil, false))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 602:7: (forall list:SList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (1 in set (inds old)))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 602:22: (forall list:SList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (old \u003c\u003e []))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 602:19: (forall list:SList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in ((tl old) \u003c\u003e []))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 593:1: (forall list:SList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) \u003d SList_Seq(heap, ptr)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 612:21: (forall list:SList_List, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e pre_SList_PtrToNode(heap, list, (position - 1))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 612:58: (forall list:SList_List, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e ((position - 1) \u003e 0)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 616:7: (forall list:SList_List, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in (forall i in set (inds old) \u0026 ((i \u003c\u003e position) \u003d\u003e (i in set (inds old))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 607:1: (forall list:SList_List, position:nat1, oldstate:SystemState \u0026 ((position \u003c\u003d SList_Lengthf(heap, list)) \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in (([old(i) | i in set (inds old) \u0026 (i \u003c\u003e position)] \u003d SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) \u003d (Heaps_AmountUsed(heap) + 1)))))","while loop termination obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 628:6: ...","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 629:25: (forall list:SList_List, traversal:(SList_Data -\u003e SList_Data), oldstate:SystemState \u0026 pre_(traversalDATA(ptr)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 636:25: (forall list:SList_List, traversal:(SList_Data -\u003e SList_Data), oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in ((old \u003c\u003e []) \u003d\u003e (forall i in set (inds old) \u0026 pre_(traversalold(i))))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 636:35: (forall list:SList_List, traversal:(SList_Data -\u003e SList_Data), oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in ((old \u003c\u003e []) \u003d\u003e (forall i in set (inds old) \u0026 (i in set (inds old))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 625:1: (forall list:SList_List, traversal:(SList_Data -\u003e SList_Data), oldstate:SystemState \u0026 (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in ((old \u003c\u003e []) \u003d\u003e ([traversal(old(i)) | i in set (inds old)] \u003d SList_Seq(heap, RESULT)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 650:39: (forall list:SList_List, position:nat1, oldstate:SystemState \u0026 pre_SList_PtrToNode(heap, list, position))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 694:17: (forall heap:Heaps_Heap, list:DList_List \u0026 pre_Nodes_GetNext(Heaps_Retrieve(heap, list)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 694:31: (forall heap:Heaps_Heap, list:DList_List \u0026 ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, list), Nodes_SingleLink)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 694:31: (forall heap:Heaps_Heap, list:DList_List \u0026 pre_Heaps_Retrieve(heap, list))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 714:22: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetPrev(Heaps_Retrieve(heap, list))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 714:36: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 714:36: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, list)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 715:22: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e let prev:Nodes_NodePtr \u003d Nodes_GetPrev(Heaps_Retrieve(heap, list)) in pre_Nodes_GetData(Heaps_Retrieve(heap, list))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 715:36: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e let prev:Nodes_NodePtr \u003d Nodes_GetPrev(Heaps_Retrieve(heap, list)) in ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 715:36: (forall heap:Heaps_Heap, list:DList_List \u0026 ((list \u003c\u003e NIL) \u003d\u003e let prev:Nodes_NodePtr \u003d Nodes_GetPrev(Heaps_Retrieve(heap, list)) in pre_Heaps_Retrieve(heap, list)))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 739:1: (forall list:DList_List, data:DList_Data, oldstate:SystemState \u0026 (true \u003d\u003e (([data] ^ SList_Seq(heap~, list)) \u003d SList_Seq(heap, RESULT))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 757:12: (forall list:DList_List, ptr:Nodes_NodePtr, data:DList_Data, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (1 in set (inds old)))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 757:30: (forall list:DList_List, ptr:Nodes_NodePtr, data:DList_Data, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (old \u003c\u003e []))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 747:1: (forall list:DList_List, ptr:Nodes_NodePtr, data:DList_Data, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) \u003d SList_Seq(heap, ptr)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 765:21: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and (Heaps_Available(heap) and DList_IsList(heap, list))) \u003d\u003e pre_SList_PtrToNode(heap, list, (position - 1))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 765:58: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and (Heaps_Available(heap) and DList_IsList(heap, list))) \u003d\u003e ((position - 1) \u003e 0)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 771:19: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and (Heaps_Available(heap) and DList_IsList(heap, list))) \u003d\u003e (DList_IsList(heap, RESULT) \u003d\u003e let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in (forall i in set (inds new) \u0026 ((i \u003c\u003e position) \u003d\u003e (i in set (inds new)))))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 772:15: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and (Heaps_Available(heap) and DList_IsList(heap, list))) \u003d\u003e (DList_IsList(heap, RESULT) \u003d\u003e let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) \u003d [new(i) | i in set (inds new) \u0026 (i \u003c\u003e position)]) \u003d\u003e (position in set (inds new))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 759:1: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d (SList_Lengthf(heap, list) + 1)) and (Heaps_Available(heap) and DList_IsList(heap, list))) \u003d\u003e (DList_IsList(heap, RESULT) and let new:seq of (SList_Data) \u003d SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) \u003d [new(i) | i in set (inds new) \u0026 (i \u003c\u003e position)]) and (new(position) \u003d data)))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 779:6: (forall list:DList_List, oldstate:SystemState \u0026 (true \u003d\u003e pre_Heaps_ModifyLoc(heap, temp, mk_Heaps_Location(nil, false))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 782:9: (forall list:DList_List, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e (SList_Seq(heap~, list) \u003c\u003e []))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 774:1: (forall list:DList_List, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e ((tl SList_Seq(heap~, list)) \u003d SList_Seq(heap, RESULT)))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 791:6: (forall list:DList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e pre_Heaps_ModifyLoc(heap, NEXT(ptr), mk_Heaps_Location(nil, false)))))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 795:7: (forall list:DList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (1 in set (inds old))))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 795:22: (forall list:DList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (old \u003c\u003e [])))))","non-empty sequence obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 795:19: (forall list:DList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in ((tl old) \u003c\u003e [])))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 784:1: (forall list:DList_List, ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) \u003d SList_Seq(heap, ptr))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 802:16: (forall list:DList_List, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d SList_Lengthf(heap, list)) and DList_IsList(heap, list)) \u003d\u003e pre_SList_PtrToNode(heap, list, (position - 1))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 802:53: (forall list:DList_List, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d SList_Lengthf(heap, list)) and DList_IsList(heap, list)) \u003d\u003e ((position - 1) \u003e 0)))","legal sequence application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 807:12: (forall list:DList_List, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d SList_Lengthf(heap, list)) and DList_IsList(heap, list)) \u003d\u003e (DList_IsList(heap, RESULT) \u003d\u003e let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in (forall i in set (inds old) \u0026 ((i \u003c\u003e position) \u003d\u003e (i in set (inds old)))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 797:1: (forall list:DList_List, position:nat1, oldstate:SystemState \u0026 (((position \u003c\u003d SList_Lengthf(heap, list)) and DList_IsList(heap, list)) \u003d\u003e (DList_IsList(heap, RESULT) and let old:seq of (SList_Data) \u003d SList_Seq(heap~, list) in (([old(i) | i in set (inds old) \u0026 (i \u003c\u003e position)] \u003d SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) \u003d (Heaps_AmountUsed(heap) + 1))))))","while loop termination obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 817:11: ...","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 811:1: (forall list:DList_List, data:DList_Data, oldstate:SystemState \u0026 ((Heaps_Available(heap) and DList_IsList(heap, list)) \u003d\u003e (((SList_Seq(heap~, list) ^ [data]) \u003d SList_Seq(heap, RESULT)) and (((Heaps_AmountUsed(heap~) + 1) \u003d Heaps_AmountUsed(heap)) and DList_IsList(heap, RESULT)))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 839:39: (forall list:DList_List, data:DList_Data, position:nat1, oldstate:SystemState \u0026 (list \u003c\u003d SList_Lengthf(heap, list)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 867:1: (forall queue:Queues_Queue, oldstate:SystemState \u0026 is_(RESULT, (Queues_Queue * Queues_Data)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 911:1: (forall stack:Stacks_Stack, oldstate:SystemState \u0026 is_(RESULT, (Stacks_Stack * Stacks_Data)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1009:15: (forall tree:set of (STrees_Node) \u0026 (forall node in set tree \u0026 pre_STrees_IsRoot(tree, node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1009:45: (forall tree:set of (STrees_Node) \u0026 (forall node in set tree \u0026 pre_STrees_IsChild(tree, node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1012:34: (forall tree:set of (STrees_Node) \u0026 ((forall node in set tree \u0026 ((not STrees_IsRoot(tree, node)) \u003c\u003d\u003e (STrees_IsChild(tree, node) and STrees_IsUnique(tree, node)))) \u003d\u003e (forall node in set tree \u0026 pre_STrees_IsRoot(tree, node))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1006:1: (exists tree:STrees_Tree \u0026 ((forall node in set tree \u0026 ((not STrees_IsRoot(tree, node)) \u003c\u003d\u003e (STrees_IsChild(tree, node) and STrees_IsUnique(tree, node)))) and ((tree \u003c\u003e {}) \u003c\u003d\u003e (exists1 node in set tree \u0026 STrees_IsRoot(tree, node)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1023:44: (forall mk_STrees_Info(t, c):STrees_Info \u0026 (((c \u003d nil) \u003c\u003d\u003e (t \u003d {})) \u003d\u003e ((c in set t) \u003d\u003e pre_STrees_Root(t))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1018:1: (exists mk_STrees_Info(t, c):STrees_Info \u0026 (((c \u003d nil) \u003c\u003d\u003e (t \u003d {})) and ((c \u003c\u003e nil) \u003c\u003d\u003e ((c in set t) and let r:STrees_Node \u003d STrees_Root(t) in ((r.position) \u003d 1)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1043:1: (forall tree:set of (STrees_Node) \u0026 (inv_STrees_Tree(tree) \u003d\u003e inv_STrees_Tree(tree)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1050:21: (forall tree:STrees_Tree, current:STrees_Node \u0026 inv_STrees_Info(mk_STrees_Info(tree, current)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1049:6: (forall tree:STrees_Tree, current:STrees_Node \u0026 (inv_STrees_Info(mk_STrees_Info(tree, current)) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1057:33: inv_STrees_Tree({})","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1057:18: (inv_STrees_Info(mk_STrees_Info({}, nil)) and inv_STrees_Tree({}))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1065:10: (forall tree:set of (STrees_Node), mk_STrees_Node(dr, pr):STrees_Node \u0026 ((mk_STrees_Node(dr, pr) in set tree) \u003d\u003e pre_STrees_IsChild(tree, mk_STrees_Node(dr, pr))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1074:33: (forall tree:STrees_Tree, node:STrees_Node \u0026 ((node in set tree) \u003d\u003e (forall child in set tree \u0026 pre_STrees_IsParentOf(tree, node, child))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1079:35: (forall tree:set of (STrees_Node), node:STrees_Node \u0026 ((node in set tree) \u003d\u003e (forall parent in set tree \u0026 pre_STrees_IsParentOf(tree, parent, node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1080:40: (forall tree:set of (STrees_Node), node:STrees_Node \u0026 ((node in set tree) \u003d\u003e ((exists parent in set tree \u0026 STrees_IsParentOf(tree, parent, node)) \u003d\u003e (forall parent in set tree \u0026 pre_STrees_IsParentOf(tree, parent, node)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1094:6: (forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node \u0026 (((node1 in set tree) and (node2 in set tree)) \u003d\u003e pre_STrees_IsRightChildOf(tree, node2, node1)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1095:14: (forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node \u0026 (((node1 in set tree) and (node2 in set tree)) \u003d\u003e ((not STrees_IsRightChildOf(tree, node2, node1)) \u003d\u003e pre_STrees_IsLeftChildOf(tree, node2, node1))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1126:35: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) \u003d\u003e ((direction \u003d \u003cToLeft\u003e) \u003d\u003e pre_STrees_HasLeftChild(tree, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1126:61: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) \u003d\u003e ((direction \u003d \u003cToLeft\u003e) \u003d\u003e is_(current, STrees_Node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1127:36: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) \u003d\u003e (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) \u003d\u003e ((direction \u003d \u003cToRight\u003e) \u003d\u003e pre_STrees_HasRightChild(tree, current)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1127:63: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) \u003d\u003e (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) \u003d\u003e ((direction \u003d \u003cToRight\u003e) \u003d\u003e is_(current, STrees_Node)))))","function establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1116:1: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 (pre_STrees_Insert(mk_STrees_Info(tree, current), data, direction) \u003d\u003e post_STrees_Insert(mk_STrees_Info(tree, current), data, direction, (cases mk_(current, direction) :\nmk_(nil, \u003cToRoot\u003e) -\u003e STrees_InsertRoot(data),\nmk_(-, \u003cToLeft\u003e) -\u003e STrees_InsertLeft(tree, current, data),\nmk_(-, \u003cToRight\u003e) -\u003e STrees_InsertRight(tree, current, data)\n end))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1120:34: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 ((((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e (not STrees_HasRightChild(tree, current))))) \u003d\u003e ((not (mk_(nil, \u003cToRoot\u003e) \u003d mk_(current, direction))) \u003d\u003e (exists mk_(-, \u003cToLeft\u003e):([STrees_Node] * STrees_Direction) \u0026 ((mk_(any1, \u003cToLeft\u003e) \u003d mk_(current, direction)) \u003d\u003e let mk_(-, \u003cToLeft\u003e) \u003d mk_(current, direction) in pre_STrees_InsertLeft(tree, current, data))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1120:58: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 ((((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e (not STrees_HasRightChild(tree, current))))) \u003d\u003e ((not (mk_(nil, \u003cToRoot\u003e) \u003d mk_(current, direction))) \u003d\u003e (exists mk_(-, \u003cToLeft\u003e):([STrees_Node] * STrees_Direction) \u0026 ((mk_(any1, \u003cToLeft\u003e) \u003d mk_(current, direction)) \u003d\u003e let mk_(-, \u003cToLeft\u003e) \u003d mk_(current, direction) in is_(current, STrees_Node))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1122:34: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 ((((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e (not STrees_HasRightChild(tree, current))))) \u003d\u003e ((not (mk_(nil, \u003cToRoot\u003e) \u003d mk_(current, direction))) \u003d\u003e ((not (exists mk_(-, \u003cToLeft\u003e):([STrees_Node] * STrees_Direction) \u0026 (mk_(any1, \u003cToLeft\u003e) \u003d mk_(current, direction)))) \u003d\u003e (exists mk_(-, \u003cToRight\u003e):([STrees_Node] * STrees_Direction) \u0026 ((mk_(any1, \u003cToRight\u003e) \u003d mk_(current, direction)) \u003d\u003e let mk_(-, \u003cToRight\u003e) \u003d mk_(current, direction) in pre_STrees_InsertRight(tree, current, data)))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1122:59: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 ((((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e (not STrees_HasRightChild(tree, current))))) \u003d\u003e ((not (mk_(nil, \u003cToRoot\u003e) \u003d mk_(current, direction))) \u003d\u003e ((not (exists mk_(-, \u003cToLeft\u003e):([STrees_Node] * STrees_Direction) \u0026 (mk_(any1, \u003cToLeft\u003e) \u003d mk_(current, direction)))) \u003d\u003e (exists mk_(-, \u003cToRight\u003e):([STrees_Node] * STrees_Direction) \u0026 ((mk_(any1, \u003cToRight\u003e) \u003d mk_(current, direction)) \u003d\u003e let mk_(-, \u003cToRight\u003e) \u003d mk_(current, direction) in is_(current, STrees_Node)))))))","cases exhaustive obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1118:6: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction \u0026 ((((direction \u003d \u003cToRoot\u003e) \u003d\u003e (tree \u003d {})) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not STrees_HasLeftChild(tree, current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e (not STrees_HasRightChild(tree, current))))) \u003d\u003e (((mk_(current, direction) \u003d mk_(nil, \u003cToRoot\u003e)) or (exists mk_(-, \u003cToLeft\u003e):([STrees_Node] * STrees_Direction) \u0026 (mk_(current, direction) \u003d mk_(any1, \u003cToLeft\u003e)))) or (exists mk_(-, \u003cToRight\u003e):([STrees_Node] * STrees_Direction) \u0026 (mk_(current, direction) \u003d mk_(any2, \u003cToRight\u003e))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1137:26: (forall data:STrees_Data \u0026 let root:STrees_Node \u003d mk_STrees_Node(data, 1) in inv_STrees_Tree({root}))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1137:11: (forall data:STrees_Data \u0026 let root:STrees_Node \u003d mk_STrees_Node(data, 1) in (inv_STrees_Info(mk_STrees_Info({root}, root)) and inv_STrees_Tree({root})))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1144:9: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 pre_STrees_HasLeftChild(tree, current))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1143:31: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 ((not STrees_HasLeftChild(tree, current)) \u003d\u003e let mk_STrees_Node(-, position):STrees_Node \u003d current in let new:STrees_Node \u003d mk_STrees_Node(data, (2 * position)) in inv_STrees_Tree((tree union {new}))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1143:11: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 ((not STrees_HasLeftChild(tree, current)) \u003d\u003e let mk_STrees_Node(-, position):STrees_Node \u003d current in let new:STrees_Node \u003d mk_STrees_Node(data, (2 * position)) in (inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and inv_STrees_Tree((tree union {new})))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1151:9: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 pre_STrees_HasRightChild(tree, current))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1150:31: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 ((not STrees_HasRightChild(tree, current)) \u003d\u003e let mk_STrees_Node(-, position):STrees_Node \u003d current in let new:STrees_Node \u003d mk_STrees_Node(data, ((2 * position) + 1)) in inv_STrees_Tree((tree union {new}))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1150:11: (forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data \u0026 ((not STrees_HasRightChild(tree, current)) \u003d\u003e let mk_STrees_Node(-, position):STrees_Node \u003d current in let new:STrees_Node \u003d mk_STrees_Node(data, ((2 * position) + 1)) in (inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and inv_STrees_Tree((tree union {new})))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1158:46: (forall treeinfo:STrees_Info, traversal:(STrees_Data -\u003e STrees_Data) \u0026 let mk_STrees_Info(tree, current):STrees_Info \u003d treeinfo in ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(data, position):[STrees_Node] \u003d current in (forall mk_STrees_Node(data, position) in set tree \u0026 pre_(traversaldata))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1161:41: (forall treeinfo:STrees_Info, traversal:(STrees_Data -\u003e STrees_Data) \u0026 let mk_STrees_Info(tree, current):STrees_Info \u003d treeinfo in ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(data, position):[STrees_Node] \u003d current in let newtree:set of (STrees_Node) \u003d {mk_STrees_Node(traversal(data), position) | mk_STrees_Node(data, position) in set tree} in pre_(traversaldata)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1160:36: (forall treeinfo:STrees_Info, traversal:(STrees_Data -\u003e STrees_Data) \u0026 let mk_STrees_Info(tree, current):STrees_Info \u003d treeinfo in ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(data, position):[STrees_Node] \u003d current in let newtree:set of (STrees_Node) \u003d {mk_STrees_Node(traversal(data), position) | mk_STrees_Node(data, position) in set tree} in inv_STrees_Tree(newtree)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1160:21: (forall treeinfo:STrees_Info, traversal:(STrees_Data -\u003e STrees_Data) \u0026 let mk_STrees_Info(tree, current):STrees_Info \u003d treeinfo in ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(data, position):[STrees_Node] \u003d current in let newtree:set of (STrees_Node) \u003d {mk_STrees_Node(traversal(data), position) | mk_STrees_Node(data, position) in set tree} in (inv_STrees_Info(mk_STrees_Info(newtree, mk_STrees_Node(traversal(data), position))) and inv_STrees_Tree(newtree))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1175:28: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 inv_STrees_Info(mk_STrees_Info(tree, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1171:45: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((\u003cToRoot\u003e \u003d direction) \u003d\u003e pre_STrees_Root(tree))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1171:24: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((\u003cToRoot\u003e \u003d direction) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, STrees_Root(tree))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1172:45: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((\u003cToLeft\u003e \u003d direction) \u003d\u003e pre_STrees_LeftChild(tree, current)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1172:68: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((\u003cToLeft\u003e \u003d direction) \u003d\u003e is_(current, STrees_Node)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1172:24: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((\u003cToLeft\u003e \u003d direction) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, STrees_LeftChild(tree, current)))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1173:46: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((not (\u003cToLeft\u003e \u003d direction)) \u003d\u003e ((\u003cToRight\u003e \u003d direction) \u003d\u003e pre_STrees_RightChild(tree, current))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1173:70: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((not (\u003cToLeft\u003e \u003d direction)) \u003d\u003e ((\u003cToRight\u003e \u003d direction) \u003d\u003e is_(current, STrees_Node))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1173:25: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((not (\u003cToLeft\u003e \u003d direction)) \u003d\u003e ((\u003cToRight\u003e \u003d direction) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, STrees_RightChild(tree, current))))))))","cases exhaustive obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1170:6: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) \u003d\u003e (((direction \u003d \u003cToRoot\u003e) or (direction \u003d \u003cToLeft\u003e)) or (direction \u003d \u003cToRight\u003e))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1184:23: (forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 \u0026 inv_STrees_Info(mk_STrees_Info(tree, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1183:27: (forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 \u0026 (STrees_ExistsNode(mk_STrees_Info(tree, current), position) \u003d\u003e pre_STrees_GetNode(tree, position)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1183:6: (forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 \u0026 (STrees_ExistsNode(mk_STrees_Info(tree, current), position) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, STrees_GetNode(tree, position)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1193:9: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 pre_STrees_IsRoot(tree, current))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1193:29: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 is_(current, STrees_Node))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1192:27: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((not STrees_IsRoot(tree, current)) \u003d\u003e pre_STrees_Parent(tree, current)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1192:47: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((not STrees_IsRoot(tree, current)) \u003d\u003e is_(current, STrees_Node)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1192:6: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((not STrees_IsRoot(tree, current)) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, STrees_Parent(tree, current)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1202:8: (forall treeinfo:STrees_Info, pathlength:nat1 \u0026 (pre_STrees_MoveToParent(treeinfo) \u003d\u003e ((pathlength \u003e 1) \u003d\u003e pre_STrees_MoveToAnscestor(STrees_MoveToParent(treeinfo), (pathlength - 1)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1202:73: (forall treeinfo:STrees_Info, pathlength:nat1 \u0026 (pre_STrees_MoveToParent(treeinfo) \u003d\u003e ((pathlength \u003e 1) \u003d\u003e ((pathlength - 1) \u003e 0))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1202:31: (forall treeinfo:STrees_Info, pathlength:nat1 \u0026 (pre_STrees_MoveToParent(treeinfo) \u003d\u003e ((pathlength \u003e 1) \u003d\u003e pre_STrees_MoveToParent(treeinfo))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1203:8: (forall treeinfo:STrees_Info, pathlength:nat1 \u0026 (pre_STrees_MoveToParent(treeinfo) \u003d\u003e ((not (pathlength \u003e 1)) \u003d\u003e pre_STrees_MoveToParent(treeinfo))))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1213:3: (forall tree:STrees_Tree \u0026 ((tree \u003c\u003e {}) \u003d\u003e (exists1 root in set tree \u0026 STrees_IsRoot(tree, root))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1213:27: (forall tree:STrees_Tree \u0026 ((tree \u003c\u003e {}) \u003d\u003e (forall root in set tree \u0026 pre_STrees_IsRoot(tree, root))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1220:30: (forall tree:STrees_Tree, node:STrees_Node \u0026 ((node in set tree) \u003d\u003e pre_STrees_IsRoot(tree, node)))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1218:3: (forall tree:STrees_Tree, node:STrees_Node \u0026 (((node in set tree) and (not STrees_IsRoot(tree, node))) \u003d\u003e (exists1 parent in set tree \u0026 STrees_IsParentOf(tree, parent, node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1219:10: (forall tree:STrees_Tree, node:STrees_Node \u0026 (((node in set tree) and (not STrees_IsRoot(tree, node))) \u003d\u003e (forall parent in set tree \u0026 pre_STrees_IsParentOf(tree, parent, node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1226:28: (forall tree:STrees_Tree, parent:STrees_Node \u0026 ((parent in set tree) \u003d\u003e pre_STrees_HasLeftChild(tree, parent)))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1224:3: (forall tree:STrees_Tree, parent:STrees_Node \u0026 (((parent in set tree) and STrees_HasLeftChild(tree, parent)) \u003d\u003e (exists1 leftchild in set tree \u0026 STrees_IsLeftChildOf(tree, leftchild, parent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1225:8: (forall tree:STrees_Tree, parent:STrees_Node \u0026 (((parent in set tree) and STrees_HasLeftChild(tree, parent)) \u003d\u003e (forall leftchild in set tree \u0026 pre_STrees_IsLeftChildOf(tree, leftchild, parent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1232:28: (forall tree:STrees_Tree, parent:STrees_Node \u0026 ((parent in set tree) \u003d\u003e pre_STrees_HasRightChild(tree, parent)))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1230:3: (forall tree:STrees_Tree, parent:STrees_Node \u0026 (((parent in set tree) and STrees_HasRightChild(tree, parent)) \u003d\u003e (exists1 rightchild in set tree \u0026 STrees_IsRightChildOf(tree, rightchild, parent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1231:8: (forall tree:STrees_Tree, parent:STrees_Node \u0026 (((parent in set tree) and STrees_HasRightChild(tree, parent)) \u003d\u003e (forall rightchild in set tree \u0026 pre_STrees_IsRightChildOf(tree, rightchild, parent))))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1236:3: (forall tree:STrees_Tree, position:nat1 \u0026 ((exists node in set tree \u0026 ((node.position) \u003d position)) \u003d\u003e (exists1 node in set tree \u0026 ((node.position) \u003d position))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1247:23: (forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 \u0026 inv_STrees_Info(mk_STrees_Info(tree, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1245:36: (forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 \u0026 (STrees_ExistsNode(mk_STrees_Info(tree, current), position) \u003d\u003e pre_STrees_GetNode(tree, position)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1258:43: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data \u0026 ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(-, position):[STrees_Node] \u003d current in let newcurrent:STrees_Node \u003d mk_STrees_Node(data, position) in inv_STrees_Tree(((tree \\ {current}) union {newcurrent}))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1258:11: (forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data \u0026 ((current \u003c\u003e nil) \u003d\u003e let mk_STrees_Node(-, position):[STrees_Node] \u003d current in let newcurrent:STrees_Node \u003d mk_STrees_Node(data, position) in (inv_STrees_Info(mk_STrees_Info(((tree \\ {current}) union {newcurrent}), newcurrent)) and inv_STrees_Tree(((tree \\ {current}) union {newcurrent})))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1280:1: (forall mk_STrees_Info(-, current):STrees_Info \u0026 is_(current, STrees_Node))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1285:6: (forall mk_STrees_Info(tree, -):STrees_Info, newcurrent:STrees_Node \u0026 ((newcurrent in set tree) \u003d\u003e inv_STrees_Info(mk_STrees_Info(tree, newcurrent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1295:13: (forall tree:STrees_Tree, parent:STrees_Node \u0026 ((parent in set tree) \u003d\u003e (forall child in set tree \u0026 pre_STrees_IsLeftChildOf(tree, child, parent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1302:13: (forall tree:STrees_Tree, parent:STrees_Node \u0026 ((parent in set tree) \u003d\u003e (forall child in set tree \u0026 pre_STrees_IsRightChildOf(tree, child, parent))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1319:26: (forall tree:STrees_Tree, node:STrees_Node \u0026 ((node in set tree) \u003d\u003e pre_STrees_HasLeftChild(tree, node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1311:22: (forall tree:STrees_Tree, node:STrees_Node \u0026 (((node in set tree) and STrees_HasLeftChild(tree, node)) \u003d\u003e pre_STrees_LeftChild(tree, node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1312:17: (forall tree:STrees_Tree, node:STrees_Node \u0026 (((node in set tree) and STrees_HasLeftChild(tree, node)) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, node) in pre_STrees_Subtree(tree, leftchild)))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1317:11: (forall tree:STrees_Tree, node:STrees_Node \u0026 (((node in set tree) and STrees_HasLeftChild(tree, node)) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, node) in let left:STrees_Tree \u003d STrees_Subtree(tree, leftchild) in let rightpath:set of (STrees_Node) \u003d {n | n in set left \u0026 (exists p in set {0, ... ,(card left)} \u0026 ((n.position) \u003d ((((leftchild.position) + 1) * (2 ** p)) - 1)))} in (exists1 pred in set rightpath \u0026 (forall n in set rightpath \u0026 ((n.position) \u003c\u003d (pred.position))))))","function establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1325:1: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 (pre_STrees_Delete(mk_STrees_Info(tree, current)) \u003d\u003e post_STrees_Delete(mk_STrees_Info(tree, current), let old:STrees_Tree \u003d STrees_Subtree(tree, current) in (if (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))\nthen let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), rightchild:STrees_Node \u003d STrees_RightChild(tree, current), left:STrees_Tree \u003d STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node \u003d STrees_InOrderPredecessor(old, current), newright:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree \u003d (left union newright), new:STrees_Tree \u003d STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in mk_STrees_Info(((tree \\ old) union new), STrees_Root(new))\nelseif STrees_HasLeftChild(tree, current)\nthen let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, leftchild, (current.position)) in mk_STrees_Info(((tree \\ old) union new), STrees_Root(new))\nelseif STrees_HasRightChild(tree, current)\nthen let rightchild:STrees_Node \u003d STrees_RightChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, (current.position)) in mk_STrees_Info(((tree \\ old) union new), STrees_Root(new))\nelse mk_STrees_Info((tree \\ {current}), STrees_Parent(tree, current))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1327:13: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e pre_STrees_Subtree(tree, current)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1327:34: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e is_(current, STrees_Node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1329:7: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in pre_STrees_HasRightChild(tree, current)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1329:34: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in is_(current, STrees_Node)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1330:7: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in (STrees_HasRightChild(tree, current) \u003d\u003e pre_STrees_HasLeftChild(tree, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1330:33: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in (STrees_HasRightChild(tree, current) \u003d\u003e is_(current, STrees_Node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1331:25: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_LeftChild(tree, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1331:48: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e is_(current, STrees_Node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1332:26: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_RightChild(tree, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1332:50: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e is_(current, STrees_Node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1333:20: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_Subtree(old, leftchild))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1335:17: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_InOrderPredecessor(old, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1335:48: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e is_(current, STrees_Node))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1336:24: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1339:19: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1339:47: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e pre_STrees_Root(newleft))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1342:50: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), rightchild:STrees_Node \u003d STrees_RightChild(tree, current), left:STrees_Tree \u003d STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node \u003d STrees_InOrderPredecessor(old, current), newright:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree \u003d (left union newright), new:STrees_Tree \u003d STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in pre_STrees_Root(new))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1342:11: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), rightchild:STrees_Node \u003d STrees_RightChild(tree, current), left:STrees_Tree \u003d STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node \u003d STrees_InOrderPredecessor(old, current), newright:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree \u003d (left union newright), new:STrees_Tree \u003d STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in inv_STrees_Info(mk_STrees_Info(((tree \\ old) union new), STrees_Root(new))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1344:25: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e (STrees_HasLeftChild(tree, current) \u003d\u003e pre_STrees_LeftChild(tree, current)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1344:48: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e (STrees_HasLeftChild(tree, current) \u003d\u003e is_(current, STrees_Node)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1345:19: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e (STrees_HasLeftChild(tree, current) \u003d\u003e pre_STrees_MoveSubtree(old, leftchild, (current.position))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1347:50: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e (STrees_HasLeftChild(tree, current) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, leftchild, (current.position)) in pre_STrees_Root(new)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1347:11: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e (STrees_HasLeftChild(tree, current) \u003d\u003e let leftchild:STrees_Node \u003d STrees_LeftChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, leftchild, (current.position)) in inv_STrees_Info(mk_STrees_Info(((tree \\ old) union new), STrees_Root(new)))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1349:26: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e (STrees_HasRightChild(tree, current) \u003d\u003e pre_STrees_RightChild(tree, current))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1349:50: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e (STrees_HasRightChild(tree, current) \u003d\u003e is_(current, STrees_Node))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1350:19: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e (STrees_HasRightChild(tree, current) \u003d\u003e pre_STrees_MoveSubtree(old, rightchild, (current.position)))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1352:50: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e (STrees_HasRightChild(tree, current) \u003d\u003e let rightchild:STrees_Node \u003d STrees_RightChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, (current.position)) in pre_STrees_Root(new))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1352:11: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e (STrees_HasRightChild(tree, current) \u003d\u003e let rightchild:STrees_Node \u003d STrees_RightChild(tree, current), new:STrees_Tree \u003d STrees_MoveSubtree(old, rightchild, (current.position)) in inv_STrees_Info(mk_STrees_Info(((tree \\ old) union new), STrees_Root(new))))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1355:44: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e ((not STrees_HasRightChild(tree, current)) \u003d\u003e pre_STrees_Parent(tree, current))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1355:64: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e ((not STrees_HasRightChild(tree, current)) \u003d\u003e is_(current, STrees_Node))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1355:11: (forall mk_STrees_Info(tree, current):STrees_Info \u0026 ((current \u003c\u003e nil) \u003d\u003e let old:STrees_Tree \u003d STrees_Subtree(tree, current) in ((not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))) \u003d\u003e ((not STrees_HasLeftChild(tree, current)) \u003d\u003e ((not STrees_HasRightChild(tree, current)) \u003d\u003e inv_STrees_Info(mk_STrees_Info((tree \\ {current}), STrees_Parent(tree, current))))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1363:1: (forall tree:STrees_Tree, mk_STrees_Node(rootdata, rootpos):STrees_Node \u0026 ((mk_STrees_Node(rootdata, rootpos) in set tree) \u003d\u003e inv_STrees_Tree({mk_STrees_Node(d, p) | mk_STrees_Node(d, p) in set tree \u0026 (exists1 n in set {0, ... ,(card tree)} \u0026 ((p \u003e\u003d (rootpos * (2 ** n))) and (p \u003c ((rootpos + 1) * (2 ** n)))))})))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1376:20: (forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 \u0026 ((subtreeRoot in set tree) \u003d\u003e pre_STrees_Subtree(tree, subtreeRoot)))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1374:1: (forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 \u0026 ((subtreeRoot in set tree) \u003d\u003e inv_STrees_Tree(let subtree:STrees_Tree \u003d STrees_Subtree(tree, subtreeRoot), mk_STrees_Node(-, oldRootPos):STrees_Node \u003d subtreeRoot in {STrees_MoveNode(tree, node, oldRootPos, newRootPos) | node in set subtree})))","unique existence binding obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1390:15: (forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 \u0026 (exists1 n in set {0, ... ,(card tree)} \u0026 ((p \u003e\u003d (oldRootPos * (2 ** n))) and (p \u003c ((oldRootPos + 1) * (2 ** n))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1392:49: (forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 \u0026 let n:nat \u003d (iota n in set {0, ... ,(card tree)} \u0026 ((p \u003e\u003d (oldRootPos * (2 ** n))) and (p \u003c ((oldRootPos + 1) * (2 ** n))))) in ((((newRootPos * (2 ** n)) + p) - (oldRootPos * (2 ** n))) \u003e 0))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1420:21: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((\u003cToLeft\u003e \u003d direction) \u003d\u003e ((current \u003c\u003e nil) \u003d\u003e pre_STrees_HasLeftChild(tree, current)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1420:47: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((\u003cToLeft\u003e \u003d direction) \u003d\u003e ((current \u003c\u003e nil) \u003d\u003e is_(current, STrees_Node)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1424:21: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((not (\u003cToLeft\u003e \u003d direction)) \u003d\u003e ((\u003cToRight\u003e \u003d direction) \u003d\u003e ((current \u003c\u003e nil) \u003d\u003e pre_STrees_HasRightChild(tree, current))))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1424:48: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 ((not (\u003cToRoot\u003e \u003d direction)) \u003d\u003e ((not (\u003cToLeft\u003e \u003d direction)) \u003d\u003e ((\u003cToRight\u003e \u003d direction) \u003d\u003e ((current \u003c\u003e nil) \u003d\u003e is_(current, STrees_Node))))))","cases exhaustive obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1416:6: (forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction \u0026 (((direction \u003d \u003cToRoot\u003e) or (direction \u003d \u003cToLeft\u003e)) or (direction \u003d \u003cToRight\u003e)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1480:19: (forall heap:Heaps_Heap, child:Nodes_NodePtr \u0026 ((child \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetParent(Heaps_Retrieve(heap, child))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1480:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr \u0026 ((child \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, child), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1480:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr \u0026 ((child \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, child)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1484:18: (forall heap:Heaps_Heap, child:Nodes_NodePtr \u0026 ((child \u003c\u003e NIL) \u003d\u003e let parent:Nodes_NodePtr \u003d Nodes_GetParent(Heaps_Retrieve(heap, child)) in ((not (parent \u003d NIL)) \u003d\u003e (Trees_IsRightChildOf(heap, child, parent) \u003d\u003e pre_Trees_Position(heap, parent)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1486:18: (forall heap:Heaps_Heap, child:Nodes_NodePtr \u0026 ((child \u003c\u003e NIL) \u003d\u003e let parent:Nodes_NodePtr \u003d Nodes_GetParent(Heaps_Retrieve(heap, child)) in ((not (parent \u003d NIL)) \u003d\u003e ((not Trees_IsRightChildOf(heap, child, parent)) \u003d\u003e pre_Trees_Position(heap, parent)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1497:25: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e pre_STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1498:22: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e let treeset:STrees_Tree \u003d STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in pre_Nodes_GetData(Heaps_Retrieve(heap, current))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1498:36: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e let treeset:STrees_Tree \u003d STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in ((is_(Heaps_Retrieve(heap, current), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, current), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, current), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1498:36: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e let treeset:STrees_Tree \u003d STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in pre_Heaps_Retrieve(heap, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1499:26: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e let treeset:STrees_Tree \u003d STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in let data:Nodes_Data \u003d Nodes_GetData(Heaps_Retrieve(heap, current)) in pre_Trees_Position(heap, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1501:11: (forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e let treeset:STrees_Tree \u003d STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in let data:Nodes_Data \u003d Nodes_GetData(Heaps_Retrieve(heap, current)) in let position:nat1 \u003d Trees_Position(heap, current) in let currentnode:STrees_Node \u003d STrees_MkNode(data, position) in pre_STrees_MkInfo(treeset, currentnode)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1513:23: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetData(Heaps_Retrieve(heap, subtree))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1513:37: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1513:37: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, subtree)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1515:8: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetLeft(Heaps_Retrieve(heap, subtree))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1516:13: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1516:13: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, subtree)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1518:16: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetRight(Heaps_Retrieve(heap, subtree))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1519:19: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1519:19: (forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 \u0026 ((subtree \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, subtree)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1529:11: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1529:25: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1529:25: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1536:11: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1536:26: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1536:26: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 (((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)) \u003d\u003e ((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1543:14: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e pre_Nodes_GetRight(Heaps_Retrieve(heap, parent))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1543:29: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1543:29: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e pre_Heaps_Retrieve(heap, parent)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1544:19: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetRight(Heaps_Retrieve(heap, parent))) \u003d\u003e pre_Nodes_GetParent(Heaps_Retrieve(heap, child)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1544:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetRight(Heaps_Retrieve(heap, parent))) \u003d\u003e ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1544:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetRight(Heaps_Retrieve(heap, parent))) \u003d\u003e pre_Heaps_Retrieve(heap, child))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1550:14: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e pre_Nodes_GetLeft(Heaps_Retrieve(heap, parent))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1550:28: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1550:28: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e pre_Heaps_Retrieve(heap, parent)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1551:19: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetLeft(Heaps_Retrieve(heap, parent))) \u003d\u003e pre_Nodes_GetParent(Heaps_Retrieve(heap, child)))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1551:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetLeft(Heaps_Retrieve(heap, parent))) \u003d\u003e ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1551:35: (forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr \u0026 ((pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) \u003d\u003e ((child \u003d Nodes_GetLeft(Heaps_Retrieve(heap, parent))) \u003d\u003e pre_Heaps_Retrieve(heap, child))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1556:28: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 ((ptr \u003c\u003e NIL) \u003d\u003e pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr))))","type compatibility obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1556:44: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 ((ptr \u003c\u003e NIL) \u003d\u003e ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree) or is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1556:44: (forall heap:Heaps_Heap, ptr:Nodes_NodePtr \u0026 ((ptr \u003c\u003e NIL) \u003d\u003e pre_Heaps_Retrieve(heap, ptr)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1575:37: (forall tree:Trees_Tree, data:Trees_Data, direction:Trees_Direction, oldstate:SystemState \u0026 ((Heaps_Available(heap) and let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) and (((direction \u003d \u003cToRight\u003e) \u003d\u003e (not Trees_HasRightChild(heap, current))) and ((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not Trees_HasLeftChild(heap, current)))))) \u003d\u003e (Heaps_Available(heap) \u003d\u003e let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) \u003d\u003e ((direction \u003d \u003cToRight\u003e) \u003d\u003e pre_Trees_HasRightChild(heap, current))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1576:36: (forall tree:Trees_Tree, data:Trees_Data, direction:Trees_Direction, oldstate:SystemState \u0026 ((Heaps_Available(heap) and let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) and (((direction \u003d \u003cToRight\u003e) \u003d\u003e (not Trees_HasRightChild(heap, current))) and ((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not Trees_HasLeftChild(heap, current)))))) \u003d\u003e (Heaps_Available(heap) \u003d\u003e let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) \u003d\u003e (((direction \u003d \u003cToRight\u003e) \u003d\u003e (not Trees_HasRightChild(heap, current))) \u003d\u003e ((direction \u003d \u003cToLeft\u003e) \u003d\u003e pre_Trees_HasLeftChild(heap, current)))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1579:9: (forall tree:Trees_Tree, data:Trees_Data, direction:Trees_Direction, oldstate:SystemState \u0026 ((Heaps_Available(heap) and let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) and (((direction \u003d \u003cToRight\u003e) \u003d\u003e (not Trees_HasRightChild(heap, current))) and ((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not Trees_HasLeftChild(heap, current)))))) \u003d\u003e (((Heaps_AmountUsed(heap~) + 1) \u003d Heaps_AmountUsed(heap)) \u003d\u003e let old:STrees_Info \u003d Trees_Set(heap~, tree) in pre_STrees_Insert(old, data, direction))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1563:1: (forall tree:Trees_Tree, data:Trees_Data, direction:Trees_Direction, oldstate:SystemState \u0026 ((Heaps_Available(heap) and let mk_Trees_Tree(treePtr, current):Trees_Tree \u003d tree in (((direction \u003d \u003cToRoot\u003e) \u003d\u003e (treePtr \u003d NIL)) and (((direction \u003d \u003cToRight\u003e) \u003d\u003e (not Trees_HasRightChild(heap, current))) and ((direction \u003d \u003cToLeft\u003e) \u003d\u003e (not Trees_HasLeftChild(heap, current)))))) \u003d\u003e (((Heaps_AmountUsed(heap~) + 1) \u003d Heaps_AmountUsed(heap)) and let old:STrees_Info \u003d Trees_Set(heap~, tree) in (STrees_Insert(old, data, direction) \u003d Trees_Set(heap, RESULT)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1608:5: (forall ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (Trees_HasLeftChild(heap, ptr) \u003d\u003e pre_Trees_HasLeftChild(heap, ptr)))","while loop termination obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1604:2: ...","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1604:8: (forall ptr:Nodes_NodePtr, oldstate:SystemState \u0026 (Trees_HasLeftChild(heap, ptr) \u003d\u003e pre_Trees_HasRightChild(heap, pred)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1612:33: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e pre_Trees_HasLeftChild(heap, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1613:34: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e pre_Trees_HasRightChild(heap, current)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1640:9: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e pre_Trees_IsRoot(heap, current))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1642:13: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e pre_Trees_IsRightChildOf(heap, current, parent))))))","operation call obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1647:6: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e pre_Heaps_ModifyLoc(heap, current, mk_Heaps_Location(nil, false)))))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1653:11: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e ((Heaps_AmountUsed(heap~) \u003d (Heaps_AmountUsed(heap) + 1)) \u003d\u003e let old:STrees_Info \u003d Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in pre_STrees_Delete(old))))))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1610:1: (forall mk_Trees_Tree(treePtr, current):Trees_Tree, oldstate:SystemState \u0026 ((treePtr \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e (true \u003d\u003e ((Heaps_AmountUsed(heap~) \u003d (Heaps_AmountUsed(heap) + 1)) and let old:STrees_Info \u003d Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in (STrees_Delete(old) \u003d Trees_Set(heap, RESULT)))))))))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1678:1: (forall tree:Trees_Tree, data:Trees_Data, oldstate:SystemState \u0026 (true \u003d\u003e (STrees_ExistsData(Trees_Set(heap, tree), data) \u003d RESULT)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1688:25: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 (((tree.current) \u003c\u003e NIL) \u003d\u003e pre_Trees_HasLeftChild(heap, (tree.current))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1691:25: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 (((tree.current) \u003c\u003e NIL) \u003d\u003e pre_Trees_HasRightChild(heap, (tree.current))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1682:1: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 (STrees_ExistsDirection(Trees_Set(heap, tree), direction) \u003d RESULT))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1701:6: (forall tree:Trees_Tree, oldstate:SystemState \u0026 (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e pre_STrees_GetCurrentData(Trees_Set(heap, tree)))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1698:1: (forall tree:Trees_Tree, oldstate:SystemState \u0026 (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (STrees_GetCurrentData(Trees_Set(heap, tree)) \u003d RESULT))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1709:6: (forall tree:Trees_Tree, data:Trees_Data, oldstate:SystemState \u0026 (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e pre_STrees_StoreCurrentData(Trees_Set(heap~, tree), data))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1703:1: (forall tree:Trees_Tree, data:Trees_Data, oldstate:SystemState \u0026 (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e (true \u003d\u003e (STrees_StoreCurrentData(Trees_Set(heap~, tree), data) \u003d Trees_Set(heap, RESULT)))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1721:35: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 ((((tree.treePtr) \u003c\u003e NIL) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e Trees_HasLeftChild(heap, (tree.current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e Trees_HasRightChild(heap, (tree.current))))) \u003d\u003e (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e ((direction \u003d \u003cToLeft\u003e) \u003d\u003e pre_Trees_HasLeftChild(heap, (tree.current))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1722:36: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 ((((tree.treePtr) \u003c\u003e NIL) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e Trees_HasLeftChild(heap, (tree.current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e Trees_HasRightChild(heap, (tree.current))))) \u003d\u003e (((tree.treePtr) \u003c\u003e NIL) \u003d\u003e (((direction \u003d \u003cToLeft\u003e) \u003d\u003e Trees_HasLeftChild(heap, (tree.current))) \u003d\u003e ((direction \u003d \u003cToRight\u003e) \u003d\u003e pre_Trees_HasRightChild(heap, (tree.current)))))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1723:6: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 ((((tree.treePtr) \u003c\u003e NIL) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e Trees_HasLeftChild(heap, (tree.current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e Trees_HasRightChild(heap, (tree.current))))) \u003d\u003e pre_STrees_MoveInDir(Trees_Set(heap~, tree), direction)))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1712:1: (forall tree:Trees_Tree, direction:Trees_Direction, oldstate:SystemState \u0026 ((((tree.treePtr) \u003c\u003e NIL) and (((direction \u003d \u003cToLeft\u003e) \u003d\u003e Trees_HasLeftChild(heap, (tree.current))) and ((direction \u003d \u003cToRight\u003e) \u003d\u003e Trees_HasRightChild(heap, (tree.current))))) \u003d\u003e (STrees_MoveInDir(Trees_Set(heap~, tree), direction) \u003d Trees_Set(heap, RESULT))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1730:9: (forall tree:Trees_Tree, oldstate:SystemState \u0026 ((not Trees_IsRoot(heap, (tree.current))) \u003d\u003e pre_Trees_IsRoot(heap, (tree.current))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1731:6: (forall tree:Trees_Tree, oldstate:SystemState \u0026 ((not Trees_IsRoot(heap, (tree.current))) \u003d\u003e pre_STrees_MoveToParent(Trees_Set(heap~, tree))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1727:1: (forall tree:Trees_Tree, oldstate:SystemState \u0026 ((not Trees_IsRoot(heap, (tree.current))) \u003d\u003e (STrees_MoveToParent(Trees_Set(heap~, tree)) \u003d Trees_Set(heap, RESULT))))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1734:1: (forall tree:Trees_Tree, oldstate:SystemState \u0026 (true \u003d\u003e (STrees_Size(Trees_Set(heap~, tree)) \u003d RESULT)))","operation establishes postcondition obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1752:1: (forall tree:Trees_Tree, traversal:(Trees_Data -\u003e Trees_Data), oldstate:SystemState \u0026 (true \u003d\u003e (STrees_Traverse(Trees_Set(heap~, tree), traversal) \u003d Trees_Set(heap, RESULT))))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1763:29: (forall subtree:Nodes_NodePtr, traversal:(Trees_Data -\u003e Trees_Data), oldstate:SystemState \u0026 pre_(traversalDATA(subtree)))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1884:16: pre_STrees_MkTree({STrees_MkNode(\u0027a\u0027, 1), STrees_MkNode(\u0027b\u0027, 2), STrees_MkNode(\u0027c\u0027, 3), STrees_MkNode(\u0027d\u0027, 4), STrees_MkNode(\u0027e\u0027, 5), STrees_MkNode(\u0027f\u0027, 6), STrees_MkNode(\u0027g\u0027, 7), STrees_MkNode(\u0027h\u0027, 8), STrees_MkNode(\u0027i\u0027, 9), STrees_MkNode(\u0027j\u0027, 10), STrees_MkNode(\u0027k\u0027, 11), STrees_MkNode(\u0027l\u0027, 12), STrees_MkNode(\u0027m\u0027, 13), STrees_MkNode(\u0027n\u0027, 14), STrees_MkNode(\u0027o\u0027, 15), STrees_MkNode(\u0027p\u0027, 16), STrees_MkNode(\u0027q\u0027, 17), STrees_MkNode(\u0027r\u0027, 18), STrees_MkNode(\u0027s\u0027, 19), STrees_MkNode(\u0027t\u0027, 20), STrees_MkNode(\u0027u\u0027, 21), STrees_MkNode(\u0027v\u0027, 22), STrees_MkNode(\u0027w\u0027, 23), STrees_MkNode(\u0027x\u0027, 24), STrees_MkNode(\u0027y\u0027, 25), STrees_MkNode(\u0027z\u0027, 26)})","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1915:16: pre_STrees_MkTree({STrees_MkNode(\u0027a\u0027, 1), STrees_MkNode(\u0027d\u0027, 2), STrees_MkNode(\u0027c\u0027, 3), STrees_MkNode(\u0027h\u0027, 4), STrees_MkNode(\u0027i\u0027, 5), STrees_MkNode(\u0027f\u0027, 6), STrees_MkNode(\u0027o\u0027, 7), STrees_MkNode(\u0027p\u0027, 8), STrees_MkNode(\u0027r\u0027, 10), STrees_MkNode(\u0027s\u0027, 11), STrees_MkNode(\u0027l\u0027, 12), STrees_MkNode(\u0027z\u0027, 13), STrees_MkNode(\u0027j\u0027, 23), STrees_MkNode(\u0027x\u0027, 24), STrees_MkNode(\u0027y\u0027, 25), STrees_MkNode(\u0027t\u0027, 46), STrees_MkNode(\u0027u\u0027, 47), STrees_MkNode(\u0027k\u0027, 95), STrees_MkNode(\u0027v\u0027, 190), STrees_MkNode(\u0027w\u0027, 191)})","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1939:18: pre_STrees_MkTree({STrees_MkNode(\u0027a\u0027, 1), STrees_MkNode(\u0027a\u0027, 2), STrees_MkNode(\u0027a\u0027, 3), STrees_MkNode(\u0027a\u0027, 4), STrees_MkNode(\u0027a\u0027, 5), STrees_MkNode(\u0027a\u0027, 6), STrees_MkNode(\u0027b\u0027, 7), STrees_MkNode(\u0027b\u0027, 8), STrees_MkNode(\u0027b\u0027, 10), STrees_MkNode(\u0027b\u0027, 11), STrees_MkNode(\u0027b\u0027, 12), STrees_MkNode(\u0027b\u0027, 13), STrees_MkNode(\u0027a\u0027, 23), STrees_MkNode(\u0027b\u0027, 24), STrees_MkNode(\u0027b\u0027, 25), STrees_MkNode(\u0027b\u0027, 46), STrees_MkNode(\u0027b\u0027, 47), STrees_MkNode(\u0027b\u0027, 95), STrees_MkNode(\u0027b\u0027, 190), STrees_MkNode(\u0027b\u0027, 191)})","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1984:15: pre_STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1986:15: pre_STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1989:15: pre_STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1990:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1992:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1993:15: pre_STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1994:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1996:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1997:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 1999:15: pre_STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2000:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2001:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2003:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2004:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2006:15: pre_STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2007:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2008:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2009:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2011:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2012:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2014:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2015:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2016:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2018:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2019:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2021:15: pre_STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2022:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2023:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2024:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2026:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2027:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2029:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2030:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2031:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2033:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2035:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2037:15: pre_STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2038:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2039:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2040:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2041:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2043:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2044:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2046:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2047:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2048:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2050:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2051:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2053:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2054:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2055:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2056:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2058:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2059:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2061:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2062:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2063:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2065:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2066:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2068:15: pre_STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2069:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2070:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2071:15: pre_STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2072:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2074:15: pre_STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2075:15: pre_STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e)), \u0027y\u0027, \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2077:15: pre_STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e)), \u0027y\u0027, \u003cToRight\u003e), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2078:15: pre_STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e)), \u0027y\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2079:15: pre_STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToAnscestor(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveInDir(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_MoveInDir(STrees_MoveToParent(STrees_Insert(STrees_MoveToParent(STrees_Insert(STrees_Insert(stree, \u0027a\u0027, \u003cToRoot\u003e), \u0027b\u0027, \u003cToLeft\u003e)), \u0027c\u0027, \u003cToRight\u003e)), \u003cToLeft\u003e), \u0027d\u0027, \u003cToLeft\u003e)), \u0027e\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u0027f\u0027, \u003cToLeft\u003e)), \u0027g\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027h\u0027, \u003cToLeft\u003e)), \u0027i\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027j\u0027, \u003cToLeft\u003e)), \u0027k\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027l\u0027, \u003cToLeft\u003e)), \u0027m\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027n\u0027, \u003cToLeft\u003e)), \u0027o\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027p\u0027, \u003cToLeft\u003e)), \u0027q\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027r\u0027, \u003cToLeft\u003e)), \u0027s\u0027, \u003cToRight\u003e), 3), \u003cToRight\u003e), \u003cToLeft\u003e), \u0027t\u0027, \u003cToLeft\u003e)), \u0027u\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027v\u0027, \u003cToLeft\u003e)), \u0027w\u0027, \u003cToRight\u003e), \u003cToRoot\u003e), \u003cToRight\u003e), \u003cToLeft\u003e), \u003cToLeft\u003e), \u0027x\u0027, \u003cToLeft\u003e)), \u0027y\u0027, \u003cToRight\u003e), 2), \u003cToRight\u003e), \u0027z\u0027, \u003cToLeft\u003e)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2088:15: pre_STrees_MoveToNode(stree, 14)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2089:15: pre_STrees_Delete(STrees_MoveToNode(stree, 14))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2091:15: pre_STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2092:15: pre_STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2094:15: pre_STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2095:15: pre_STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2097:15: pre_STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2098:15: pre_STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2100:15: pre_STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7)), 5)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2101:15: pre_STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7)), 5))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2103:15: pre_STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7)), 5)), 2)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2104:15: pre_STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(STrees_Delete(STrees_MoveToNode(stree, 14)), 17)), 13)), 7)), 5)), 2))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2128:15: pre_STrees_MoveToNode(stree, 3)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2135:16: pre_STrees_GetData(STrees_MoveToNode(stree, 3), 13)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2137:15: pre_STrees_SetCurrentNode(STrees_MoveToNode(stree, 3), STrees_MkNode(\u0027z\u0027, 13))","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2142:15: pre_STrees_StoreCurrentData(STrees_SetCurrentNode(STrees_MoveToNode(stree, 3), STrees_MkNode(\u0027z\u0027, 13)), \u0027Z\u0027)","legal function application obligation in \u0027DEFAULT\u0027 (adt.vdmsl) at line 2143:16: pre_STrees_GetCurrentData(STrees_StoreCurrentData(STrees_SetCurrentNode(STrees_MoveToNode(stree, 3), STrees_MkNode(\u0027z\u0027, 13)), \u0027Z\u0027))"]