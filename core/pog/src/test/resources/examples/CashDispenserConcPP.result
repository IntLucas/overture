["state invariant holds obligation in \u0027Account\u0027 (Account.vdmpp) at line 40:10: (forall cs:map (CardId) to (Cardholder), b:nat \u0026 TransactionsInvariant(transactions))","state invariant holds obligation in \u0027Account\u0027 (Account.vdmpp) at line 60:9: (forall cardId:CardId, amount:nat, date:Date \u0026 ((cardId in set (dom cards)) \u003d\u003e (TransactionsInvariant(transactions) \u003d\u003e TransactionsInvariant(transactions))))","type compatibility obligation in \u0027Account\u0027 (Account.vdmpp) at line 60:28: (forall cardId:CardId, amount:nat, date:Date \u0026 ((cardId in set (dom cards)) \u003d\u003e ((balance - amount) \u003e\u003d 0)))","state invariant holds obligation in \u0027Account\u0027 (Account.vdmpp) at line 61:9: (forall cardId:CardId, amount:nat, date:Date \u0026 ((cardId in set (dom cards)) \u003d\u003e (TransactionsInvariant(transactions) \u003d\u003e TransactionsInvariant((transactions ^ [transaction])))))","legal map application obligation in \u0027Account\u0027 (Account.vdmpp) at line 69:14: (forall cardId:CardId, date:Date \u0026 ((cardId in set (dom cards)) \u003d\u003e (cardId in set (dom cards))))","legal map application obligation in \u0027Account\u0027 (Account.vdmpp) at line 70:16: (forall cardId:CardId, date:Date \u0026 ((cardId in set (dom cards)) \u003d\u003e (cardId in set (dom cards))))","state invariant holds obligation in \u0027Account\u0027 (Account.vdmpp) at line 89:5: (forall cId:CardId, ch:Cardholder \u0026 ((cId not in set (dom cards)) \u003d\u003e (TransactionsInvariant(transactions) \u003d\u003e TransactionsInvariant(transactions))))","map compatible obligation in \u0027Account\u0027 (Account.vdmpp) at line 89:14: (forall cId:CardId, ch:Cardholder \u0026 ((cId not in set (dom cards)) \u003d\u003e (forall ldom1 in set (dom cards), rdom2 in set (dom {cId |-\u003e ch}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (cards(ldom1) \u003d {cId |-\u003e ch}(rdom2))))))","legal sequence application obligation in \u0027Account\u0027 (Account.vdmpp) at line 95:25: (forall ts:seq of (Transaction) \u0026 (forall i in set (inds ts) \u0026 (i in set (inds ts))))","legal sequence application obligation in \u0027Account\u0027 (Account.vdmpp) at line 104:10: (forall date:Date, ts:seq of (Transaction) \u0026 (forall i in set (inds ts) \u0026 (((ts(i).date) \u003d date) \u003d\u003e (i in set (inds ts)))))","legal sequence application obligation in \u0027Account\u0027 (Account.vdmpp) at line 104:44: (forall date:Date, ts:seq of (Transaction) \u0026 (forall i in set (inds ts) \u0026 (i in set (inds ts))))","type compatibility obligation in \u0027Account\u0027 (Account.vdmpp) at line 102:3: (forall date:Date, ts:seq of (Transaction) \u0026 is_(Sum([(ts(i).amount) | i in set (inds ts) \u0026 ((ts(i).date) \u003d date)]), nat))","non-empty sequence obligation in \u0027Account\u0027 (Account.vdmpp) at line 110:10: (forall rs:seq of (real) \u0026 ((not (rs \u003d [])) \u003d\u003e (rs \u003c\u003e [])))","non-empty sequence obligation in \u0027Account\u0027 (Account.vdmpp) at line 110:22: (forall rs:seq of (real) \u0026 ((not (rs \u003d [])) \u003d\u003e (rs \u003c\u003e [])))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 24:10: (forall res:LocalResource \u0026 ((curCard \u003d nil) \u003d\u003e (not cardOk)))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 30:5: (forall res:LocalResource \u0026 (((curCard \u003d nil) \u003d\u003e (not cardOk)) \u003d\u003e ((curCard \u003d nil) \u003d\u003e (not cardOk))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 35:5: (forall c:Card \u0026 ((not CardInside()) \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not cardOk)) \u003d\u003e ((c \u003d nil) \u003d\u003e (not cardOk)))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 47:12: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not cardOk)) \u003d\u003e ((curCard \u003d nil) \u003d\u003e (not (codeOk and cardLegal))))))","type compatibility obligation in \u0027Till\u0027 (Till.vdmpp) at line 47:33: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (codeOk \u003d\u003e is_(cardLegal, bool))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 49:18: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not (codeOk and cardLegal))) \u003d\u003e ((curCard \u003d nil) \u003d\u003e (not (codeOk and cardLegal))))))","type compatibility obligation in \u0027Till\u0027 (Till.vdmpp) at line 49:49: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e is_((retainedCards union {curCard}), set of (Card))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 50:18: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not (codeOk and cardLegal))) \u003d\u003e ((nil \u003d nil) \u003d\u003e (not (codeOk and cardLegal))))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 63:18: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((nil \u003d nil) \u003d\u003e (not (codeOk and cardLegal))) \u003d\u003e ((nil \u003d nil) \u003d\u003e (not (codeOk and cardLegal))))))","type compatibility obligation in \u0027Till\u0027 (Till.vdmpp) at line 63:49: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e is_((retainedCards union {curCard}), set of (Card))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 64:18: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((nil \u003d nil) \u003d\u003e (not (codeOk and cardLegal))) \u003d\u003e ((nil \u003d nil) \u003d\u003e (not false)))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 65:18: (forall pin:PinCode \u0026 ((CardInside() and (not cardOk)) \u003d\u003e (((nil \u003d nil) \u003d\u003e (not false)) \u003d\u003e ((nil \u003d nil) \u003d\u003e (not false)))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 74:6: (CardInside() \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not cardOk)) \u003d\u003e ((curCard \u003d nil) \u003d\u003e (not false))))","state invariant holds obligation in \u0027Till\u0027 (Till.vdmpp) at line 75:6: (CardInside() \u003d\u003e (((curCard \u003d nil) \u003d\u003e (not false)) \u003d\u003e ((nil \u003d nil) \u003d\u003e (not false))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 35:10: (forall accountId:AccountId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e (is_(RESULT, \u003cFail\u003e) or is_(RESULT, [nat])))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 64:10: (forall accountId:AccountId, cardId:CardId, amount:nat \u0026 (forall c1:Channel \u0026 (true \u003d\u003e (is_(RESULT, \u003cFail\u003e) or is_(RESULT, bool)))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 73:10: (forall accountId:AccountId, cardId:CardId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e (is_(RESULT, \u003cFail\u003e) or is_(RESULT, bool)))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 81:10: (forall accountId:AccountId, cardId:CardId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e (is_(RESULT, \u003cFail\u003e) or is_(RESULT, bool)))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 89:10: (forall cardId:CardId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e (is_(RESULT, \u003cFail\u003e) or is_(RESULT, bool)))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 96:10: (forall cardId:CardId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e is_(RESULT, [\u003cFail\u003e]))))","type compatibility obligation in \u0027LocalResource\u0027 (LocalResource.vdmpp) at line 103:10: (forall cardId:CardId \u0026 (forall c1:Channel \u0026 (true \u003d\u003e is_(RESULT, [\u003cFail\u003e]))))","type compatibility obligation in \u0027Channel\u0027 (Channel.vdmpp) at line 105:10: is_(RESULT, Request)","legal sequence application obligation in \u0027Letterbox\u0027 (Letterbox.vdmpp) at line 18:12: ((statements \u003c\u003e []) \u003d\u003e ((len statements) in set (inds statements)))","enumeration map injectivity obligation in \u0027Main\u0027 (concur.vdmpp) at line 20:5: (forall m1, m2 in set {{0 |-\u003e \u00270\u0027}, {1 |-\u003e \u00271\u0027}, {2 |-\u003e \u00272\u0027}, {3 |-\u003e \u00273\u0027}, {4 |-\u003e \u00274\u0027}, {5 |-\u003e \u00275\u0027}, {6 |-\u003e \u00276\u0027}, {7 |-\u003e \u00277\u0027}, {8 |-\u003e \u00278\u0027}, {9 |-\u003e \u00279\u0027}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 33:11: (forall n:nat \u0026 ((not (n \u003d 0)) \u003d\u003e ((n \u003c 10) \u003d\u003e (n in set (dom nat2char)))))","type compatibility obligation in \u0027Main\u0027 (concur.vdmpp) at line 34:23: (forall n:nat \u0026 ((not (n \u003d 0)) \u003d\u003e ((not (n \u003c 10)) \u003d\u003e ((n div 10) \u003e\u003d 0))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 34:36: (forall n:nat \u0026 ((not (n \u003d 0)) \u003d\u003e ((not (n \u003c 10)) \u003d\u003e ((n mod 10) in set (dom nat2char)))))","type compatibility obligation in \u0027Main\u0027 (concur.vdmpp) at line 34:47: (forall n:nat \u0026 ((not (n \u003d 0)) \u003d\u003e ((not (n \u003c 10)) \u003d\u003e ((n mod 10) \u003e\u003d 0))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 46:12: (forall tid:TillId \u0026 (tid in set (dom tills)))","enumeration map injectivity obligation in \u0027Main\u0027 (concur.vdmpp) at line 73:34: (forall m1, m2 in set {{5 |-\u003e peter}, {6 |-\u003e sten}, {7 |-\u003e CSK}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027Main\u0027 (concur.vdmpp) at line 88:20: (forall m1, m2 in set {{1 |-\u003e SetupTill(1, new Till())}, {2 |-\u003e SetupTill(2, new Till())}, {3 |-\u003e SetupTill(3, new Till())}, {4 |-\u003e SetupTill(4, new Till())}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 106:44: (forall tillNum:nat \u0026 (tillNum in set (dom tills)))","legal sequence application obligation in \u0027Main\u0027 (concur.vdmpp) at line 110:34: (forall tillNum:nat, cardNum:nat, pin:nat \u0026 ((tillNum in set (dom tills)) \u003d\u003e (cardNum in set (inds cards))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 111:24: (forall tillNum:nat, cardNum:nat, pin:nat \u0026 ((tillNum in set (dom tills)) \u003d\u003e (tillNum in set (dom tills))))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 127:20: (forall tillNum:nat, amount:nat \u0026 (tillNum in set (dom tills)))","legal map application obligation in \u0027Main\u0027 (concur.vdmpp) at line 137:21: (forall tillNum:nat \u0026 (tillNum in set (dom tills)))","type compatibility obligation in \u0027Main\u0027 (concur.vdmpp) at line 144:49: (forall tillNum:nat \u0026 is_(bal1, nat))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 30:10: (forall c:Clock, l:Letterbox \u0026 (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))))","legal map application obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 62:10: (forall accountId:AccountId, cardId:CardId \u0026 (accountId in set (dom accounts)))","legal map application obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 77:21: (forall accountId:AccountId, cardId:CardId \u0026 ((cardId not in set illegalCards) \u003d\u003e ((accountId in set (dom accounts)) \u003d\u003e (accountId in set (dom accounts)))))","legal map application obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 81:12: (forall cardId:CardId \u0026 (cardId in set (dom numberOfTries)))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 85:5: (forall cardId:CardId \u0026 ((forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))) \u003d\u003e (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {})))))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 89:5: (forall cardId:CardId \u0026 ((forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))) \u003d\u003e (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {})))))","legal map application obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 89:30: (forall cardId:CardId \u0026 (cardId in set (dom numberOfTries)))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 97:6: (forall accId:AccountId, acc:Account \u0026 ((accId not in set (dom accounts)) \u003d\u003e ((forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))) \u003d\u003e (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))))))","comprehension map injectivity obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 98:23: (forall accId:AccountId, acc:Account \u0026 ((accId not in set (dom accounts)) \u003d\u003e (forall m1, m2 in set {{cId |-\u003e 0} | cId in set (acc.GetCardIds)()} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 99:6: (forall accId:AccountId, acc:Account \u0026 ((accId not in set (dom accounts)) \u003d\u003e ((forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))) \u003d\u003e (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))))))","state invariant holds obligation in \u0027CentralResource\u0027 (CentralResource.vdmpp) at line 104:5: (forall cId:CardId \u0026 ((forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {}))) \u003d\u003e (forall acc1, acc2 in set (rng accounts) \u0026 ((acc1 \u003c\u003e acc2) \u003d\u003e (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) \u003d {})))))"]