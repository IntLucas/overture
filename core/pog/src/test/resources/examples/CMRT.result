["state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 22:8: (forall papp:Angle, tDef:[ThreadDef] \u0026 ((dom ranges) \u003d (dom dispensers)))","state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 39:6: (((dom ranges) \u003d (dom dispensers)) \u003d\u003e ((dom (ranges munion {id |-\u003e mk_(angle, DISPENSER_APERTURE)})) \u003d (dom (dispensers munion {id |-\u003e pfldisp}))))","type compatibility obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 47:8: is_(RESULT, (Angle * Angle))","state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 55:4: (forall evid:EventId, pmt:MissileType, pa:Angle, pt:Time \u0026 (((dom ranges) \u003d (dom dispensers)) \u003d\u003e ((dom ranges) \u003d (dom dispensers))))","state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 56:4: (forall evid:EventId, pmt:MissileType, pa:Angle, pt:Time \u0026 (((dom ranges) \u003d (dom dispensers)) \u003d\u003e ((dom ranges) \u003d (dom dispensers))))","non-empty sequence obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 61:57: (threats \u003c\u003e [])","state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 62:4: (((dom ranges) \u003d (dom dispensers)) \u003d\u003e ((dom ranges) \u003d (dom dispensers)))","non-empty sequence obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 62:18: (threats \u003c\u003e [])","legal map application obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 75:41: (id in set (dom ranges))","state invariant holds obligation in \u0027FlareController\u0027 (flarecontroller.vdmrt) at line 78:10: (((dom ranges) \u003d (dom dispensers)) \u003d\u003e ((dom ranges) \u003d (dom dispensers)))","type invariant satisfiable obligation in \u0027GLOBAL\u0027 (global.vdmrt) at line 20:10: (exists num:Angle \u0026 (num \u003c 360))","type compatibility obligation in \u0027Sensor\u0027 (sensor.vdmrt) at line 18:8: is_(RESULT, (Angle * Angle))","type compatibility obligation in \u0027CMTestCase2\u0027 (CMTestCase2.vdmrt) at line 14:8: (((inv_Angle(45) and inv_Angle(270)) and inv_Angle(276)) and inv_Angle(266))","legal function application obligation in \u0027CMTestCase2\u0027 (CMTestCase2.vdmrt) at line 16:13: pre_(((new IO().fwriteval))[seq of (inline)]\"scenario.txt\", inlines, \u003cstart\u003e)","legal sequence application obligation in \u0027CMTestCase2\u0027 (CMTestCase2.vdmrt) at line 24:26: (forall j in set (inds reaction) \u0026 (j in set (inds reaction)))","legal sequence application obligation in \u0027CMTestCase2\u0027 (CMTestCase2.vdmrt) at line 25:26: (forall j in set (inds reaction) \u0026 (((reaction(j).#1) \u003d i) \u003d\u003e (j in set (inds reaction))))","legal sequence application obligation in \u0027CMTestCase2\u0027 (CMTestCase2.vdmrt) at line 25:50: (forall j in set (inds reaction) \u0026 (((reaction(j).#1) \u003d i) \u003d\u003e (j in set (inds reaction))))","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 23:8: (forall tDef:[ThreadDef] \u0026 ((dom ranges) \u003d (dom controllers)))","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 38:4: (((dom ranges) \u003d (dom controllers)) \u003d\u003e ((dom (ranges munion {nid |-\u003e (pctrl.getAperture)()})) \u003d (dom (controllers munion {nid |-\u003e pctrl}))))","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 49:4: (forall evid:EventId, pmt:MissileType, pa:Angle, pt:Time \u0026 (((dom ranges) \u003d (dom controllers)) \u003d\u003e ((dom ranges) \u003d (dom controllers))))","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 50:4: (forall evid:EventId, pmt:MissileType, pa:Angle, pt:Time \u0026 (((dom ranges) \u003d (dom controllers)) \u003d\u003e ((dom ranges) \u003d (dom controllers))))","non-empty sequence obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 55:57: (threats \u003c\u003e [])","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 56:4: (((dom ranges) \u003d (dom controllers)) \u003d\u003e ((dom ranges) \u003d (dom controllers)))","non-empty sequence obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 56:18: (threats \u003c\u003e [])","legal map application obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 69:42: (id in set (dom ranges))","state invariant holds obligation in \u0027MissileDetector\u0027 (missiledetector.vdmrt) at line 72:9: (((dom ranges) \u003d (dom controllers)) \u003d\u003e ((dom ranges) \u003d (dom controllers)))","enumeration map injectivity obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 7:3: (forall m1, m2 in set {{\u003cMissileA\u003e |-\u003e [mk_(\u003cFlareOneA\u003e, 900), mk_(\u003cFlareTwoA\u003e, 500), mk_(\u003cDoNothingA\u003e, 100), mk_(\u003cFlareOneA\u003e, 500)]}, {\u003cMissileB\u003e |-\u003e [mk_(\u003cFlareTwoB\u003e, 500), mk_(\u003cFlareTwoB\u003e, 700)]}, {\u003cMissileC\u003e |-\u003e [mk_(\u003cFlareOneC\u003e, 400), mk_(\u003cDoNothingC\u003e, 100), mk_(\u003cFlareTwoC\u003e, 400), mk_(\u003cFlareOneC\u003e, 500)]}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 19:3: (forall m1, m2 in set {{\u003cMissileA\u003e |-\u003e 1}, {\u003cMissileB\u003e |-\u003e 2}, {\u003cMissileC\u003e |-\u003e 3}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 58:6: (forall evid:EventId, pmt:MissileType, ptime:Time \u0026 (((pmt in set (dom missilePriority)) and (pmt in set (dom responseDB))) \u003d\u003e (pmt in set (dom missilePriority))))","legal map application obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 62:34: (forall evid:EventId, pmt:MissileType, ptime:Time \u0026 (((pmt in set (dom missilePriority)) and (pmt in set (dom responseDB))) \u003d\u003e (pmt in set (dom responseDB))))","non-empty sequence obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 66:36: (forall evid:EventId, pmt:MissileType, ptime:Time \u0026 (((pmt in set (dom missilePriority)) and (pmt in set (dom responseDB))) \u003d\u003e ((newplan ^ [mk_(fltp, newtime)]) \u003c\u003e [])))","non-empty sequence obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 69:23: (forall evid:EventId, pmt:MissileType, ptime:Time \u0026 (((pmt in set (dom missilePriority)) and (pmt in set (dom responseDB))) \u003d\u003e (forall curplan1:Plan, curprio2:nat, busy3:bool, aparature4:Angle, eventid5:[EventId] \u0026 (true \u003d\u003e (newplan \u003c\u003e [])))))","legal map application obligation in \u0027FlareDispenser\u0027 (flaredispenser.vdmrt) at line 71:20: (forall evid:EventId, pmt:MissileType, ptime:Time \u0026 (((pmt in set (dom missilePriority)) and (pmt in set (dom responseDB))) \u003d\u003e (forall curplan1:Plan, curprio2:nat, busy3:bool, aparature4:Angle, eventid5:[EventId] \u0026 (true \u003d\u003e (pmt in set (dom missilePriority))))))","legal function application obligation in \u0027Environment\u0027 (environment.vdmrt) at line 34:23: (forall fname:seq of (char), tDef:[ThreadDef] \u0026 pre_(((io.freadval))[seq of (inline)]fname))","type compatibility obligation in \u0027Environment\u0027 (environment.vdmrt) at line 35:16: (forall fname:seq of (char), tDef:[ThreadDef] \u0026 is_(input, seq of (inline)))","state invariant holds obligation in \u0027Environment\u0027 (environment.vdmrt) at line 32:8: (forall fname:seq of (char), tDef:[ThreadDef] \u0026 ((dom ranges) \u003d (dom sensors)))","legal function application obligation in \u0027Environment\u0027 (environment.vdmrt) at line 80:11: pre_(((io.writeval))[seq of (outline)]outlines)","state invariant holds obligation in \u0027Environment\u0027 (environment.vdmrt) at line 89:6: (((dom ranges) \u003d (dom sensors)) \u003d\u003e ((dom ranges) \u003d (dom sensors)))","operation call obligation in \u0027IO\u0027 (IO.vdmrt) at line 80:3: (forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))"]