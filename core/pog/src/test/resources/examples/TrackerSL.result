["type invariant satisfiable obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 3:1: (exists mk_Tracker(containers, phases):Tracker \u0026 (Consistent(containers, phases) and (PhasesDistinguished(phases) and MaterialSafe(containers, phases))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 17:1: (exists p:Phase \u0026 (((card (p.contents)) \u003c\u003d (p.capacity)) and ((p.expected_materials) \u003c\u003e {})))","map compatible obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 36:17: (forall trk:Tracker, cid:ContainerId, quan:real, mat:Material \u0026 ((cid not in set (dom (trk.containers))) \u003d\u003e (forall ldom1 in set (dom (trk.containers)), rdom2 in set (dom {cid |-\u003e mk_Container(quan, mat)}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e ((trk.containers)(ldom1) \u003d {cid |-\u003e mk_Container(quan, mat)}(rdom2))))))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 36:6: (forall trk:Tracker, cid:ContainerId, quan:real, mat:Material \u0026 ((cid not in set (dom (trk.containers))) \u003d\u003e inv_Tracker(mk_Tracker(((trk.containers) munion {cid |-\u003e mk_Container(quan, mat)}), (trk.phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 47:10: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId \u0026 ((cid in set (dom containers)) \u003d\u003e ((dest in set (dom phases)) \u003d\u003e (dest in set (dom phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 47:34: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId \u0026 ((cid in set (dom containers)) \u003d\u003e ((dest in set (dom phases)) \u003d\u003e (dest in set (dom phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 48:5: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId \u0026 ((cid in set (dom containers)) \u003d\u003e ((dest in set (dom phases)) \u003d\u003e (((card (phases(dest).contents)) \u003c (phases(dest).capacity)) \u003d\u003e (cid in set (dom containers))))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 48:37: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, dest:PhaseId \u0026 ((cid in set (dom containers)) \u003d\u003e ((dest in set (dom phases)) \u003d\u003e (((card (phases(dest).contents)) \u003c (phases(dest).capacity)) \u003d\u003e (dest in set (dom phases))))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 60:16: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 ((source in set (dom phases)) \u003d\u003e (source in set (dom phases))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 54:22: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 (((source in set (dom phases)) and (cid in set (phases(source).contents))) \u003d\u003e (source in set (dom phases))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 55:22: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 (((source in set (dom phases)) and (cid in set (phases(source).contents))) \u003d\u003e (source in set (dom phases))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 56:22: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 (((source in set (dom phases)) and (cid in set (phases(source).contents))) \u003d\u003e (source in set (dom phases))))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 54:13: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 (((source in set (dom phases)) and (cid in set (phases(source).contents))) \u003d\u003e inv_Phase(mk_Phase(((phases(source).contents) \\ {cid}), (phases(source).expected_materials), (phases(source).capacity)))))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 58:5: (forall mk_Tracker(containers, phases):Tracker, cid:ContainerId, source:PhaseId \u0026 (((source in set (dom phases)) and (cid in set (phases(source).contents))) \u003d\u003e let pha:Phase \u003d mk_Phase(((phases(source).contents) \\ {cid}), (phases(source).expected_materials), (phases(source).capacity)) in inv_Tracker(mk_Tracker(containers, (phases ++ {source |-\u003e pha})))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 66:14: (forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId \u0026 ((Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) \u003d\u003e (ptoid in set (dom (trk.phases)))))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 68:14: (forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId \u0026 ((Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) \u003d\u003e let cont:Phase \u003d (trk.phases)(ptoid) in inv_Phase(mk_Phase(((cont.contents) union {cid}), (cont.expected_materials), (cont.capacity)))))","legal function application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 73:17: (forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId \u0026 ((Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) \u003d\u003e let cont:Phase \u003d (trk.phases)(ptoid) in let pha:Phase \u003d mk_Phase(((cont.contents) union {cid}), (cont.expected_materials), (cont.capacity)) in pre_Remove(trk, cid, pfromid)))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 72:6: (forall trk:Tracker, cid:ContainerId, ptoid:PhaseId, pfromid:PhaseId \u0026 ((Permission(trk, cid, ptoid) and pre_Remove(trk, cid, pfromid)) \u003d\u003e let cont:Phase \u003d (trk.phases)(ptoid) in let pha:Phase \u003d mk_Phase(((cont.contents) union {cid}), (cont.expected_materials), (cont.capacity)) in inv_Tracker(mk_Tracker((trk.containers), ((Remove(trk, cid, pfromid).phases) ++ {ptoid |-\u003e pha})))))","legal function application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 83:15: (forall tkr:Tracker, cid:ContainerId, source:PhaseId \u0026 (pre_Remove(tkr, cid, source) \u003d\u003e pre_Remove(tkr, cid, source)))","type compatibility obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 82:4: (forall tkr:Tracker, cid:ContainerId, source:PhaseId \u0026 (pre_Remove(tkr, cid, source) \u003d\u003e inv_Tracker(mk_Tracker(({cid} \u003c-: (tkr.containers)), (Remove(tkr, cid, source).phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 96:9: (forall phases:PhaseInfo \u0026 (forall p1, p2 in set (dom phases) \u0026 ((p1 \u003c\u003e p2) \u003d\u003e (p1 in set (dom phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 96:35: (forall phases:PhaseInfo \u0026 (forall p1, p2 in set (dom phases) \u0026 ((p1 \u003c\u003e p2) \u003d\u003e (p2 in set (dom phases)))))","legal map application obligation in \u0027DEFAULT\u0027 (tracker.vdmsl) at line 103:12: (forall containers:ContainerInfo, phases:PhaseInfo \u0026 (forall ph in set (rng phases) \u0026 (forall cid in set (ph.contents) \u0026 ((cid in set (dom containers)) \u003d\u003e (cid in set (dom containers))))))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 13:20: inv_Phase(mk_Phase({}, all_material, 5))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 15:18: inv_Phase(mk_Phase({}, all_material, 6))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 17:16: inv_Phase(mk_Phase({}, all_material, 5))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 19:21: inv_Phase(mk_Phase({}, {glass, metal, plastic}, 3))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 21:18: inv_Phase(mk_Phase({}, {glass, metal, plastic}, 50))","enumeration map injectivity obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 27:17: (forall m1, m2 in set {{mk_token(\"Unpacking\") |-\u003e unpacking_inital}, {mk_token(\"Sorting\") |-\u003e sorting_inital}, {mk_token(\"Assay\") |-\u003e assay_inital}, {mk_token(\"Compaction\") |-\u003e compaction_inital}, {mk_token(\"Storage\") |-\u003e storage_inital}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation in \u0027DEFAULT\u0027 (testtracker.vdmsl) at line 33:18: inv_Tracker(mk_Tracker(coninfo_inital, phases_inital))"]