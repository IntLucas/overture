<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="3" line="49" message="colMap: function satisfiability obligation in 'DEFAULT' (CountryColouringSL) at line 49:3&#10;(forall r:Relation &amp;&#10;  pre_colMap(r) =&gt; exists cols:Colouring &amp; post_colMap(r, cols))&#10;" number="1" object="" resource="CountryColouringSL" toString="colMap: function satisfiability obligation in 'DEFAULT' (CountryColouringSL) at line 49:3&#10;(forall r:Relation &amp;&#10;  pre_colMap(r) =&gt; exists cols:Colouring &amp; post_colMap(r, cols))&#10;"/>
<po column="14" line="63" message="extndCol: let be st existence obligation in 'DEFAULT' (CountryColouringSL) at line 63:14&#10;(forall cols:Colouring, c:Country, r:Relation &amp;&#10;  (not (cols = {}) =&gt;&#10;    exists col in set cols))&#10;" number="2" object="" resource="CountryColouringSL" toString="extndCol: let be st existence obligation in 'DEFAULT' (CountryColouringSL) at line 63:14&#10;(forall cols:Colouring, c:Country, r:Relation &amp;&#10;  (not (cols = {}) =&gt;&#10;    exists col in set cols))&#10;"/>
<po column="3" line="59" message="extndCol: recursive function obligation in 'DEFAULT' (CountryColouringSL) at line 59:3&#10;(forall cols:Colouring, c:Country, r:Relation &amp;&#10;  (not (cols = {}) =&gt;&#10;    (forall col in set cols &amp;&#10;      (not canBeExtBy(col, c, r) =&gt;&#10;        CardColouring(cols, c, r) &gt; CardColouring((cols \ {col}), c, r)))))&#10;" number="3" object="" resource="CountryColouringSL" toString="extndCol: recursive function obligation in 'DEFAULT' (CountryColouringSL) at line 59:3&#10;(forall cols:Colouring, c:Country, r:Relation &amp;&#10;  (not (cols = {}) =&gt;&#10;    (forall col in set cols &amp;&#10;      (not canBeExtBy(col, c, r) =&gt;&#10;        CardColouring(cols, c, r) &gt; CardColouring((cols \ {col}), c, r)))))&#10;"/>
<po column="14" line="78" message="colCntrs: let be st existence obligation in 'DEFAULT' (CountryColouringSL) at line 78:14&#10;(forall cs:set of (Country), r:Relation &amp;&#10;  (not (cs = {}) =&gt;&#10;    exists c in set cs))&#10;" number="4" object="" resource="CountryColouringSL" toString="colCntrs: let be st existence obligation in 'DEFAULT' (CountryColouringSL) at line 78:14&#10;(forall cs:set of (Country), r:Relation &amp;&#10;  (not (cs = {}) =&gt;&#10;    exists c in set cs))&#10;"/>
<po column="3" line="74" message="colCntrs: recursive function obligation in 'DEFAULT' (CountryColouringSL) at line 74:3&#10;(forall cs:set of (Country), r:Relation &amp;&#10;  (not (cs = {}) =&gt;&#10;    (forall c in set cs &amp;&#10;      CardCountry(cs, r) &gt; CardCountry((cs \ {c}), r))))&#10;" number="5" object="" resource="CountryColouringSL" toString="colCntrs: recursive function obligation in 'DEFAULT' (CountryColouringSL) at line 74:3&#10;(forall cs:set of (Country), r:Relation &amp;&#10;  (not (cs = {}) =&gt;&#10;    (forall c in set cs &amp;&#10;      CardCountry(cs, r) &gt; CardCountry((cs \ {c}), r))))&#10;"/>
</result>
</testResult>
