<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="11" line="112" message="FindAllReferencesToEntity, parms: map apply obligation in 'Database' (expressSL) at line 112:11&#10;ein in set dom (in_model.datasec)&#10;" number="1" object="" resource="expressSL" toString="FindAllReferencesToEntity, parms: map apply obligation in 'Database' (expressSL) at line 112:11&#10;ein in set dom (in_model.datasec)&#10;"/>
<po column="24" line="126" message="FindAllInstances, rec: map apply obligation in 'Database' (expressSL) at line 126:24&#10;ein in set dom (in_model.datasec)&#10;" number="2" object="" resource="expressSL" toString="FindAllInstances, rec: map apply obligation in 'Database' (expressSL) at line 126:24&#10;ein in set dom (in_model.datasec)&#10;"/>
<po column="27" line="138" message="LookUpEntityInstance, rec: map apply obligation in 'Database' (expressSL) at line 138:27&#10;ein in set dom (in_model.datasec)&#10;" number="3" object="" resource="expressSL" toString="LookUpEntityInstance, rec: map apply obligation in 'Database' (expressSL) at line 138:27&#10;ein in set dom (in_model.datasec)&#10;"/>
<po column="42" line="147" message="TransformRmVertex, cpnt_id: sequence apply obligation in 'Database' (expressSL) at line 147:42&#10;5 in set inds parms&#10;" number="4" object="" resource="expressSL" toString="TransformRmVertex, cpnt_id: sequence apply obligation in 'Database' (expressSL) at line 147:42&#10;5 in set inds parms&#10;"/>
<po column="9" line="147" message="TransformRmVertex, cpnt_id: value binding obligation in 'Database' (expressSL) at line 147:9&#10;exists mk_EntityInstanceName(cpnt_id):Parameter &amp; mk_EntityInstanceName(cpnt_id) = parms(5)&#10;" number="5" object="" resource="expressSL" toString="TransformRmVertex, cpnt_id: value binding obligation in 'Database' (expressSL) at line 147:9&#10;exists mk_EntityInstanceName(cpnt_id):Parameter &amp; mk_EntityInstanceName(cpnt_id) = parms(5)&#10;"/>
<po column="42" line="147" message="TransformRmVertex, cpnt_id: subtype obligation in 'Database' (expressSL) at line 147:42&#10;is_(parms(5), EntityInstanceName)&#10;" number="6" object="" resource="expressSL" toString="TransformRmVertex, cpnt_id: subtype obligation in 'Database' (expressSL) at line 147:42&#10;is_(parms(5), EntityInstanceName)&#10;"/>
<po column="35" line="155" message="TransformRmEdge, rmees: sequence apply obligation in 'Database' (expressSL) at line 155:35&#10;3 in set inds parms&#10;" number="7" object="" resource="expressSL" toString="TransformRmEdge, rmees: sequence apply obligation in 'Database' (expressSL) at line 155:35&#10;3 in set inds parms&#10;"/>
<po column="9" line="155" message="TransformRmEdge, rmees: value binding obligation in 'Database' (expressSL) at line 155:9&#10;exists mk_ListParameter(rmees):Parameter &amp; mk_ListParameter(rmees) = parms(3)&#10;" number="8" object="" resource="expressSL" toString="TransformRmEdge, rmees: value binding obligation in 'Database' (expressSL) at line 155:9&#10;exists mk_ListParameter(rmees):Parameter &amp; mk_ListParameter(rmees) = parms(3)&#10;"/>
<po column="35" line="155" message="TransformRmEdge, rmees: subtype obligation in 'Database' (expressSL) at line 155:35&#10;is_(parms(3), ListParameter)&#10;" number="9" object="" resource="expressSL" toString="TransformRmEdge, rmees: subtype obligation in 'Database' (expressSL) at line 155:35&#10;is_(parms(3), ListParameter)&#10;"/>
<po column="13" line="159" message="TransformRmEdge, rmee_id: value binding obligation in 'Database' (expressSL) at line 159:13&#10;exists mk_EntityInstanceName(rmee_id):Parameter &amp; mk_EntityInstanceName(rmee_id) = rmee&#10;" number="10" object="" resource="expressSL" toString="TransformRmEdge, rmee_id: value binding obligation in 'Database' (expressSL) at line 159:13&#10;exists mk_EntityInstanceName(rmee_id):Parameter &amp; mk_EntityInstanceName(rmee_id) = rmee&#10;"/>
<po column="46" line="159" message="TransformRmEdge, rmee_id: subtype obligation in 'Database' (expressSL) at line 159:46&#10;is_(rmee, EntityInstanceName)&#10;" number="11" object="" resource="expressSL" toString="TransformRmEdge, rmee_id: subtype obligation in 'Database' (expressSL) at line 159:46&#10;is_(rmee, EntityInstanceName)&#10;"/>
<po column="41" line="170" message="TransformRmLoop, rmess: sequence apply obligation in 'Database' (expressSL) at line 170:41&#10;2 in set inds parms&#10;" number="12" object="" resource="expressSL" toString="TransformRmLoop, rmess: sequence apply obligation in 'Database' (expressSL) at line 170:41&#10;2 in set inds parms&#10;"/>
<po column="15" line="170" message="TransformRmLoop, rmess: value binding obligation in 'Database' (expressSL) at line 170:15&#10;exists mk_ListParameter(rmess):Parameter &amp; mk_ListParameter(rmess) = parms(2)&#10;" number="13" object="" resource="expressSL" toString="TransformRmLoop, rmess: value binding obligation in 'Database' (expressSL) at line 170:15&#10;exists mk_ListParameter(rmess):Parameter &amp; mk_ListParameter(rmess) = parms(2)&#10;"/>
<po column="41" line="170" message="TransformRmLoop, rmess: subtype obligation in 'Database' (expressSL) at line 170:41&#10;is_(parms(2), ListParameter)&#10;" number="14" object="" resource="expressSL" toString="TransformRmLoop, rmess: subtype obligation in 'Database' (expressSL) at line 170:41&#10;is_(parms(2), ListParameter)&#10;"/>
<po column="21" line="173" message="TransformRmLoop, rmes_id: value binding obligation in 'Database' (expressSL) at line 173:21&#10;exists mk_EntityInstanceName(rmes_id):Parameter &amp; mk_EntityInstanceName(rmes_id) = rmes&#10;" number="15" object="" resource="expressSL" toString="TransformRmLoop, rmes_id: value binding obligation in 'Database' (expressSL) at line 173:21&#10;exists mk_EntityInstanceName(rmes_id):Parameter &amp; mk_EntityInstanceName(rmes_id) = rmes&#10;"/>
<po column="54" line="173" message="TransformRmLoop, rmes_id: subtype obligation in 'Database' (expressSL) at line 173:54&#10;is_(rmes, EntityInstanceName)&#10;" number="16" object="" resource="expressSL" toString="TransformRmLoop, rmes_id: subtype obligation in 'Database' (expressSL) at line 173:54&#10;is_(rmes, EntityInstanceName)&#10;"/>
<po column="31" line="196" message="Create: map compatible obligation in 'Database' (expressSL) at line 196:31&#10;forall ldom1 in set dom LookUpTable, rdom2 in set dom {ent |-&gt; last_id} &amp;&#10;ldom1 = rdom2 =&gt; LookUpTable(ldom1) = {ent |-&gt; last_id}(rdom2)&#10;" number="17" object="" resource="expressSL" toString="Create: map compatible obligation in 'Database' (expressSL) at line 196:31&#10;forall ldom1 in set dom LookUpTable, rdom2 in set dom {ent |-&gt; last_id} &amp;&#10;ldom1 = rdom2 =&gt; LookUpTable(ldom1) = {ent |-&gt; last_id}(rdom2)&#10;"/>
<po column="46" line="199" message="Create: sequence apply obligation in 'Database' (expressSL) at line 199:46&#10;3 in set inds parms&#10;" number="18" object="" resource="expressSL" toString="Create: sequence apply obligation in 'Database' (expressSL) at line 199:46&#10;3 in set inds parms&#10;"/>
<po column="24" line="198" message="Create: map compatible obligation in 'Database' (expressSL) at line 198:24&#10;forall ldom1 in set dom ds, rdom2 in set dom {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;VERTEX&quot;, [parms(3)]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;VERTEX&quot;, [parms(3)]))}(rdom2)&#10;" number="19" object="" resource="expressSL" toString="Create: map compatible obligation in 'Database' (expressSL) at line 198:24&#10;forall ldom1 in set dom ds, rdom2 in set dom {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;VERTEX&quot;, [parms(3)]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;VERTEX&quot;, [parms(3)]))}(rdom2)&#10;"/>
<po column="22" line="203" message="Create: map compatible obligation in 'Database' (expressSL) at line 203:22&#10;forall ldom1 in set dom ds, rdom2 in set dom {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;POLYLINE&quot;, [mk_ListParameter(MapInToOut(poly, LookUpTable))]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;POLYLINE&quot;, [mk_ListParameter(MapInToOut(poly, LookUpTable))]))}(rdom2)&#10;" number="20" object="" resource="expressSL" toString="Create: map compatible obligation in 'Database' (expressSL) at line 203:22&#10;forall ldom1 in set dom ds, rdom2 in set dom {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;POLYLINE&quot;, [mk_ListParameter(MapInToOut(poly, LookUpTable))]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {last_id |-&gt; mk_(nil, mk_SimpleRecord(&quot;POLYLINE&quot;, [mk_ListParameter(MapInToOut(poly, LookUpTable))]))}(rdom2)&#10;"/>
<po column="18" line="208" message="Create: map compatible obligation in 'Database' (expressSL) at line 208:18&#10;forall ldom1 in set dom ds, rdom2 in set dom {(last_id + 1) |-&gt; mk_(nil, mk_SimpleRecord(&quot;DRAWING&quot;, [mk_ListParameter(polylist)]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {(last_id + 1) |-&gt; mk_(nil, mk_SimpleRecord(&quot;DRAWING&quot;, [mk_ListParameter(polylist)]))}(rdom2)&#10;" number="21" object="" resource="expressSL" toString="Create: map compatible obligation in 'Database' (expressSL) at line 208:18&#10;forall ldom1 in set dom ds, rdom2 in set dom {(last_id + 1) |-&gt; mk_(nil, mk_SimpleRecord(&quot;DRAWING&quot;, [mk_ListParameter(polylist)]))} &amp;&#10;ldom1 = rdom2 =&gt; ds(ldom1) = {(last_id + 1) |-&gt; mk_(nil, mk_SimpleRecord(&quot;DRAWING&quot;, [mk_ListParameter(polylist)]))}(rdom2)&#10;"/>
<po column="14" line="211" message="Create: map sequence compatible obligation in 'Database' (expressSL) at line 211:14&#10;forall m1, m2 in set {{&quot;FILE_NAME&quot; |-&gt; [mk_UnknownParameter()]}, {&quot;FILE_DESCRIPTION&quot; |-&gt; [mk_UnknownParameter()]}, {&quot;FILE_SCHEMA&quot; |-&gt; [mk_UnknownParameter()]}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="22" object="" resource="expressSL" toString="Create: map sequence compatible obligation in 'Database' (expressSL) at line 211:14&#10;forall m1, m2 in set {{&quot;FILE_NAME&quot; |-&gt; [mk_UnknownParameter()]}, {&quot;FILE_DESCRIPTION&quot; |-&gt; [mk_UnknownParameter()]}, {&quot;FILE_SCHEMA&quot; |-&gt; [mk_UnknownParameter()]}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="35" line="230" message="MapInToOut: map apply obligation in 'Database' (expressSL) at line 230:35&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    (hd ins) in set dom lut))&#10;" number="23" object="" resource="expressSL" toString="MapInToOut: map apply obligation in 'Database' (expressSL) at line 230:35&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    (hd ins) in set dom lut))&#10;"/>
<po column="42" line="230" message="MapInToOut: non-empty sequence obligation in 'Database' (expressSL) at line 230:42&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    ins &lt;&gt; []))&#10;" number="24" object="" resource="expressSL" toString="MapInToOut: non-empty sequence obligation in 'Database' (expressSL) at line 230:42&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    ins &lt;&gt; []))&#10;"/>
<po column="7" line="225" message="MapInToOut: recursive function obligation in 'Database' (expressSL) at line 225:7&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    LenPar1(ins, lut) &gt; LenPar1((tl ins), lut)))&#10;" number="25" object="" resource="expressSL" toString="MapInToOut: recursive function obligation in 'Database' (expressSL) at line 225:7&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    LenPar1(ins, lut) &gt; LenPar1((tl ins), lut)))&#10;"/>
<po column="65" line="230" message="MapInToOut: non-empty sequence obligation in 'Database' (expressSL) at line 230:65&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    ins &lt;&gt; []))&#10;" number="26" object="" resource="expressSL" toString="MapInToOut: non-empty sequence obligation in 'Database' (expressSL) at line 230:65&#10;(forall ins:seq of (nat), lut:map (nat) to (nat) &amp;&#10;  (not (ins = []) =&gt;&#10;    ins &lt;&gt; []))&#10;"/>
<po column="25" line="241" message="Collect: let be st existence obligation in 'Database' (expressSL) at line 241:25&#10;(forall theSet:set of (seq of (nat)) &amp;&#10;  (not {} = theSet =&gt;&#10;    exists e in set theSet))&#10;" number="27" object="" resource="expressSL" toString="Collect: let be st existence obligation in 'Database' (expressSL) at line 241:25&#10;(forall theSet:set of (seq of (nat)) &amp;&#10;  (not {} = theSet =&gt;&#10;    exists e in set theSet))&#10;"/>
<po column="7" line="237" message="Collect: recursive function obligation in 'Database' (expressSL) at line 237:7&#10;(forall theSet:set of (seq of (nat)) &amp;&#10;  (not {} = theSet =&gt;&#10;    (forall e in set theSet &amp;&#10;      SetCard(theSet) &gt; SetCard((theSet \ {e})))))&#10;" number="28" object="" resource="expressSL" toString="Collect: recursive function obligation in 'Database' (expressSL) at line 237:7&#10;(forall theSet:set of (seq of (nat)) &amp;&#10;  (not {} = theSet =&gt;&#10;    (forall e in set theSet &amp;&#10;      SetCard(theSet) &gt; SetCard((theSet \ {e})))))&#10;"/>
<po column="15" line="252" message="IsA, name: value binding obligation in 'Database' (expressSL) at line 252:15&#10;(forall rec:Record, nm:seq of (char) &amp;&#10;  (is_(rec, SimpleRecord) =&gt;&#10;    exists mk_SimpleRecord(name, -):Record &amp; mk_SimpleRecord(name, -) = rec))&#10;" number="29" object="" resource="expressSL" toString="IsA, name: value binding obligation in 'Database' (expressSL) at line 252:15&#10;(forall rec:Record, nm:seq of (char) &amp;&#10;  (is_(rec, SimpleRecord) =&gt;&#10;    exists mk_SimpleRecord(name, -):Record &amp; mk_SimpleRecord(name, -) = rec))&#10;"/>
<po column="42" line="252" message="IsA, name: subtype obligation in 'Database' (expressSL) at line 252:42&#10;(forall rec:Record, nm:seq of (char) &amp;&#10;  (is_(rec, SimpleRecord) =&gt;&#10;    is_(rec, SimpleRecord)))&#10;" number="30" object="" resource="expressSL" toString="IsA, name: subtype obligation in 'Database' (expressSL) at line 252:42&#10;(forall rec:Record, nm:seq of (char) &amp;&#10;  (is_(rec, SimpleRecord) =&gt;&#10;    is_(rec, SimpleRecord)))&#10;"/>
<po column="18" line="262" message="SortInnerLeft: let be st existence obligation in 'Database' (expressSL) at line 262:18&#10;(forall theSet:set of ((nat * nat)), goal:nat &amp;&#10;  (not {} = theSet =&gt;&#10;    exists mk_(a, b) in set theSet &amp; (a = goal)))&#10;" number="31" object="" resource="expressSL" toString="SortInnerLeft: let be st existence obligation in 'Database' (expressSL) at line 262:18&#10;(forall theSet:set of ((nat * nat)), goal:nat &amp;&#10;  (not {} = theSet =&gt;&#10;    exists mk_(a, b) in set theSet &amp; (a = goal)))&#10;"/>
<po column="18" line="271" message="SortInnerRight: let be st existence obligation in 'Database' (expressSL) at line 271:18&#10;(forall theSet:set of ((nat * nat)), goal:nat &amp;&#10;  (not {} = theSet =&gt;&#10;    exists mk_(a, b) in set theSet &amp; (b = goal)))&#10;" number="32" object="" resource="expressSL" toString="SortInnerRight: let be st existence obligation in 'Database' (expressSL) at line 271:18&#10;(forall theSet:set of ((nat * nat)), goal:nat &amp;&#10;  (not {} = theSet =&gt;&#10;    exists mk_(a, b) in set theSet &amp; (b = goal)))&#10;"/>
<po column="14" line="277" message="SortPoints: let be st existence obligation in 'Database' (expressSL) at line 277:14&#10;(forall theSet:set of ((nat * nat)) &amp;&#10;  exists mk_(a, b) in set theSet)&#10;" number="33" object="" resource="expressSL" toString="SortPoints: let be st existence obligation in 'Database' (expressSL) at line 277:14&#10;(forall theSet:set of ((nat * nat)) &amp;&#10;  exists mk_(a, b) in set theSet)&#10;"/>
</result>
</testResult>
