<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="18" line="49" message="Message_in_bits: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 49:18&#10;(forall M:seq of (Bit) &amp;&#10;  ((((len M) mod Word_Length) = 0) =&gt;&#10;    Word_Length &lt;&gt; 0))&#10;" number="1" object="" resource="MAASL" toString="Message_in_bits: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 49:18&#10;(forall M:seq of (Bit) &amp;&#10;  ((((len M) mod Word_Length) = 0) =&gt;&#10;    Word_Length &lt;&gt; 0))&#10;"/>
<po column="17" line="51" message="Message_in_bits: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 51:17&#10;(forall M:seq of (Bit) &amp;&#10;  (not (((len M) mod Word_Length) = 0) =&gt;&#10;    Word_Length &lt;&gt; 0))&#10;" number="2" object="" resource="MAASL" toString="Message_in_bits: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 51:17&#10;(forall M:seq of (Bit) &amp;&#10;  (not (((len M) mod Word_Length) = 0) =&gt;&#10;    Word_Length &lt;&gt; 0))&#10;"/>
<po column="16" line="94" message="Pad_out_Message: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 94:16&#10;(forall M:Message_in_bits &amp;&#10;  (let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in&#10;    (not (No_Extra_bits = Word_Length) =&gt;&#10;      pre_Get_Application_defined_bits(M, No_Extra_bits))))&#10;" number="3" object="" resource="MAASL" toString="Pad_out_Message: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 94:16&#10;(forall M:Message_in_bits &amp;&#10;  (let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in&#10;    (not (No_Extra_bits = Word_Length) =&gt;&#10;      pre_Get_Application_defined_bits(M, No_Extra_bits))))&#10;"/>
<po column="47" line="94" message="Pad_out_Message: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 94:47&#10;(forall M:Message_in_bits &amp;&#10;  (let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in&#10;    (not (No_Extra_bits = Word_Length) =&gt;&#10;      No_Extra_bits &gt;= 0)))&#10;" number="4" object="" resource="MAASL" toString="Pad_out_Message: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 94:47&#10;(forall M:Message_in_bits &amp;&#10;  (let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in&#10;    (not (No_Extra_bits = Word_Length) =&gt;&#10;      No_Extra_bits &gt;= 0)))&#10;"/>
<po column="4" line="89" message="Pad_out_Message: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 89:4&#10;(forall M:Message_in_bits &amp;&#10;  inv_Message_in_bits(let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)&#10;  then M&#10;  else (M ^ Get_Application_defined_bits(M, No_Extra_bits)))) and (is_(let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)&#10;  then M&#10;  else (M ^ Get_Application_defined_bits(M, No_Extra_bits))), seq of (Bit))))&#10;" number="5" object="" resource="MAASL" toString="Pad_out_Message: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 89:4&#10;(forall M:Message_in_bits &amp;&#10;  inv_Message_in_bits(let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)&#10;  then M&#10;  else (M ^ Get_Application_defined_bits(M, No_Extra_bits)))) and (is_(let No_Extra_bits:int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)&#10;  then M&#10;  else (M ^ Get_Application_defined_bits(M, No_Extra_bits))), seq of (Bit))))&#10;"/>
<po column="4" line="96" message="Get_Application_defined_bits: function satisfiability obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 96:4&#10;(forall M:Message_in_bits, No_bits:nat &amp;&#10;  pre_Get_Application_defined_bits(M, No_bits) =&gt; exists Extra:Message_in_bits &amp; post_Get_Application_defined_bits(M, No_bits, Extra))&#10;" number="6" object="" resource="MAASL" toString="Get_Application_defined_bits: function satisfiability obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 96:4&#10;(forall M:Message_in_bits, No_bits:nat &amp;&#10;  pre_Get_Application_defined_bits(M, No_bits) =&gt; exists Extra:Message_in_bits &amp; post_Get_Application_defined_bits(M, No_bits, Extra))&#10;"/>
<po column="11" line="104" message="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 104:11&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (((len M) = Word_Length) =&gt;&#10;    pre_Form_Number(M)))&#10;" number="7" object="" resource="MAASL" toString="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 104:11&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (((len M) = Word_Length) =&gt;&#10;    pre_Form_Number(M)))&#10;"/>
<po column="11" line="105" message="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 105:11&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Form_Number(Get_head_in_bits(M, Word_Length))))&#10;" number="8" object="" resource="MAASL" toString="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 105:11&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Form_Number(Get_head_in_bits(M, Word_Length))))&#10;"/>
<po column="23" line="105" message="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 105:23&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Get_head_in_bits(M, Word_Length)))&#10;" number="9" object="" resource="MAASL" toString="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 105:23&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Get_head_in_bits(M, Word_Length)))&#10;"/>
<po column="10" line="106" message="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 106:10&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))&#10;" number="10" object="" resource="MAASL" toString="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 106:10&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))&#10;"/>
<po column="35" line="106" message="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 106:35&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Get_tail_in_bits(M, Word_Length)))&#10;" number="11" object="" resource="MAASL" toString="Form_Message_into_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 106:35&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  (not ((len M) = Word_Length) =&gt;&#10;    pre_Get_tail_in_bits(M, Word_Length)))&#10;"/>
<po column="4" line="101" message="Form_Message_into_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 101:4&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  inv_Message_in_blocks((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (is_((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length)))), seq of (Number)))))&#10;" number="12" object="" resource="MAASL" toString="Form_Message_into_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 101:4&#10;(forall M:Message_in_bits &amp; (((len M) &gt;= Word_Length) and (((len M) mod Word_Length) = 0)) =&gt;&#10;  inv_Message_in_blocks((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (is_((if ((len M) = Word_Length)&#10;  then [Form_Number(M)]&#10;  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length)))), seq of (Number)))))&#10;"/>
<po column="29" line="111" message="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 111:29&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="13" object="" resource="MAASL" toString="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 111:29&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="14" line="112" message="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:14&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="14" object="" resource="MAASL" toString="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:14&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="22" line="112" message="Form_Number: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:22&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    pre_Form_Number((tl M))))&#10;" number="15" object="" resource="MAASL" toString="Form_Number: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:22&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    pre_Form_Number((tl M))))&#10;"/>
<po column="38" line="112" message="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:38&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="16" object="" resource="MAASL" toString="Form_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 112:38&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="4" line="109" message="Form_Number: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 109:4&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  inv_Number((if ((len M) = 1)&#10;  then (hd M)&#10;  else ((hd M) + (2 * Form_Number((tl M)))))) and (is_nat((if ((len M) = 1)&#10;  then (hd M)&#10;  else ((hd M) + (2 * Form_Number((tl M))))))))&#10;" number="17" object="" resource="MAASL" toString="Form_Number: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 109:4&#10;(forall M:Message_in_bits &amp; ((len M) &lt;= Word_Length) =&gt;&#10;  inv_Number((if ((len M) = 1)&#10;  then (hd M)&#10;  else ((hd M) + (2 * Form_Number((tl M)))))) and (is_nat((if ((len M) = 1)&#10;  then (hd M)&#10;  else ((hd M) + (2 * Form_Number((tl M))))))))&#10;"/>
<po column="4" line="122" message="CYC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 122:4&#10;(forall X:Number &amp;&#10;  inv_Number((ADD(X, X) + CAR(X, X))) and (is_nat((ADD(X, X) + CAR(X, X)))))&#10;" number="18" object="" resource="MAASL" toString="CYC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 122:4&#10;(forall X:Number &amp;&#10;  inv_Number((ADD(X, X) + CAR(X, X))) and (is_nat((ADD(X, X) + CAR(X, X)))))&#10;"/>
<po column="40" line="130" message="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 130:40&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;" number="19" object="" resource="MAASL" toString="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 130:40&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;"/>
<po column="48" line="130" message="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 130:48&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;" number="20" object="" resource="MAASL" toString="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 130:48&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;"/>
<po column="4" line="126" message="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 126:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then 0&#10;  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then 0&#10;  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2))))))))&#10;" number="21" object="" resource="MAASL" toString="AND: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 126:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then 0&#10;  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then 0&#10;  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2))))))))&#10;"/>
<po column="42" line="136" message="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 136:42&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;" number="22" object="" resource="MAASL" toString="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 136:42&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;"/>
<po column="50" line="136" message="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 136:50&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;" number="23" object="" resource="MAASL" toString="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 136:50&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;"/>
<po column="4" line="132" message="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 132:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2))))))))&#10;" number="24" object="" resource="MAASL" toString="OR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 132:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2))))))))&#10;"/>
<po column="36" line="148" message="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 148:36&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;" number="25" object="" resource="MAASL" toString="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 148:36&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((X div 2)) and (is_nat((X div 2)))))&#10;"/>
<po column="44" line="148" message="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 148:44&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;" number="26" object="" resource="MAASL" toString="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 148:44&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X = 0) or (Y = 0)) =&gt;&#10;    inv_Number((Y div 2)) and (is_nat((Y div 2)))))&#10;"/>
<po column="4" line="144" message="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 144:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2))))))))&#10;" number="27" object="" resource="MAASL" toString="XOR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 144:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))&#10;  then (X + Y)&#10;  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2))))))))&#10;"/>
<po column="4" line="150" message="ADD: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 150:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number(((X + Y) mod Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) mod Maximum_Number_Size_plus_1))))&#10;" number="28" object="" resource="MAASL" toString="ADD: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 150:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number(((X + Y) mod Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) mod Maximum_Number_Size_plus_1))))&#10;"/>
<po column="12" line="156" message="CAR: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 156:12&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;" number="29" object="" resource="MAASL" toString="CAR: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 156:12&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;"/>
<po column="4" line="154" message="CAR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 154:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number(((X + Y) div Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) div Maximum_Number_Size_plus_1))))&#10;" number="30" object="" resource="MAASL" toString="CAR: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 154:4&#10;(forall X:Number, Y:Number &amp;&#10;  inv_Number(((X + Y) div Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) div Maximum_Number_Size_plus_1))))&#10;"/>
<po column="14" line="167" message="MUL1, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 167:14&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;" number="31" object="" resource="MAASL" toString="MUL1, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 167:14&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;"/>
<po column="16" line="168" message="MUL1, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 168:16&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="32" object="" resource="MAASL" toString="MUL1, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 168:16&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="18" line="168" message="MUL1, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 168:18&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(L) and (is_nat(L))))&#10;" number="33" object="" resource="MAASL" toString="MUL1, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 168:18&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(L) and (is_nat(L))))&#10;"/>
<po column="12" line="169" message="MUL1, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 169:12&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="34" object="" resource="MAASL" toString="MUL1, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 169:12&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="14" line="169" message="MUL1, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 169:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(L) and (is_nat(L))))&#10;" number="35" object="" resource="MAASL" toString="MUL1, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 169:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(L) and (is_nat(L))))&#10;"/>
<po column="14" line="179" message="MUL2, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:14&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;" number="36" object="" resource="MAASL" toString="MUL2, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:14&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;"/>
<po column="60" line="179" message="MUL2, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:60&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="37" object="" resource="MAASL" toString="MUL2, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:60&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="62" line="179" message="MUL2, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:62&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="38" object="" resource="MAASL" toString="MUL2, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 179:62&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="12" line="180" message="MUL2, E: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:12&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="39" object="" resource="MAASL" toString="MUL2, E: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:12&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="14" line="180" message="MUL2, E: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="40" object="" resource="MAASL" toString="MUL2, E: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="36" line="180" message="MUL2, F: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:36&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      inv_Number((2 * E)) and (is_nat((2 * E))))))&#10;" number="41" object="" resource="MAASL" toString="MUL2, F: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:36&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      inv_Number((2 * E)) and (is_nat((2 * E))))))&#10;"/>
<po column="58" line="180" message="MUL2, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:58&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        inv_Number(L) and (is_nat(L))))))&#10;" number="42" object="" resource="MAASL" toString="MUL2, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 180:58&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        inv_Number(L) and (is_nat(L))))))&#10;"/>
<po column="14" line="181" message="MUL2, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 181:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        inv_Number(L) and (is_nat(L))))))&#10;" number="43" object="" resource="MAASL" toString="MUL2, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 181:14&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        inv_Number(L) and (is_nat(L))))))&#10;"/>
<po column="28" line="181" message="MUL2: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 181:28&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        (let S:Number = ADD(F, L), C:Number = CAR(F, L) in&#10;          inv_Number((2 * C)) and (is_nat((2 * C))))))))&#10;" number="44" object="" resource="MAASL" toString="MUL2: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 181:28&#10;(forall X:Number, Y:Number &amp;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U), E:Number = CAR(U, U) in&#10;      (let F:Number = ADD(D, (2 * E)) in&#10;        (let S:Number = ADD(F, L), C:Number = CAR(F, L) in&#10;          inv_Number((2 * C)) and (is_nat((2 * C))))))))&#10;"/>
<po column="11" line="196" message="MUL2A: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 196:11&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1_div_2 &lt;&gt; 0)&#10;" number="45" object="" resource="MAASL" toString="MUL2A: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 196:11&#10;(forall X:Number, Y:Number &amp;&#10;  Maximum_Number_Size_plus_1_div_2 &lt;&gt; 0)&#10;"/>
<po column="11" line="197" message="MUL2A: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 197:11&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X div Maximum_Number_Size_plus_1_div_2) = 0) =&gt;&#10;    Maximum_Number_Size_plus_1_div_2 &lt;&gt; 0))&#10;" number="46" object="" resource="MAASL" toString="MUL2A: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 197:11&#10;(forall X:Number, Y:Number &amp;&#10;  (not ((X div Maximum_Number_Size_plus_1_div_2) = 0) =&gt;&#10;    Maximum_Number_Size_plus_1_div_2 &lt;&gt; 0))&#10;"/>
<po column="14" line="192" message="MUL2A, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 192:14&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;" number="47" object="" resource="MAASL" toString="MUL2A, U: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 192:14&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  Maximum_Number_Size_plus_1 &lt;&gt; 0)&#10;"/>
<po column="16" line="193" message="MUL2A, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 193:16&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="48" object="" resource="MAASL" toString="MUL2A, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 193:16&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="18" line="193" message="MUL2A, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 193:18&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;" number="49" object="" resource="MAASL" toString="MUL2A, D: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 193:18&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    inv_Number(U) and (is_nat(U))))&#10;"/>
<po column="18" line="194" message="MUL2A, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 194:18&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      inv_Number(L) and (is_nat(L)))))&#10;" number="50" object="" resource="MAASL" toString="MUL2A, S: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 194:18&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      inv_Number(L) and (is_nat(L)))))&#10;"/>
<po column="14" line="195" message="MUL2A, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 195:14&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      inv_Number(L) and (is_nat(L)))))&#10;" number="51" object="" resource="MAASL" toString="MUL2A, C: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 195:14&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      inv_Number(L) and (is_nat(L)))))&#10;"/>
<po column="28" line="195" message="MUL2A: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 195:28&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      (let S:Number = ADD(D, L), C:Number = CAR(D, L) in&#10;        inv_Number((2 * C)) and (is_nat((2 * C)))))))&#10;" number="52" object="" resource="MAASL" toString="MUL2A: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 195:28&#10;(forall X:Number, Y:Number &amp; (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =&gt;&#10;  (let L:nat = ((X * Y) mod Maximum_Number_Size_plus_1), U:int = ((X * Y) div Maximum_Number_Size_plus_1) in&#10;    (let D:Number = ADD(U, U) in&#10;      (let S:Number = ADD(D, L), C:Number = CAR(D, L) in&#10;        inv_Number((2 * C)) and (is_nat((2 * C)))))))&#10;"/>
<po column="16" line="206" message="BYT, X: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 206:16&#10;(forall K:Double_Number &amp;&#10;  K &lt;&gt; [])&#10;" number="53" object="" resource="MAASL" toString="BYT, X: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 206:16&#10;(forall K:Double_Number &amp;&#10;  K &lt;&gt; [])&#10;"/>
<po column="20" line="207" message="BYT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 207:20&#10;(forall K:Double_Number &amp;&#10;  K &lt;&gt; [])&#10;" number="54" object="" resource="MAASL" toString="BYT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 207:20&#10;(forall K:Double_Number &amp;&#10;  K &lt;&gt; [])&#10;"/>
<po column="17" line="207" message="BYT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 207:17&#10;(forall K:Double_Number &amp;&#10;  (tl K) &lt;&gt; [])&#10;" number="55" object="" resource="MAASL" toString="BYT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 207:17&#10;(forall K:Double_Number &amp;&#10;  (tl K) &lt;&gt; [])&#10;"/>
<po column="14" line="208" message="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 3)))&#10;" number="56" object="" resource="MAASL" toString="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 3)))&#10;"/>
<po column="24" line="208" message="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:24&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 2)))&#10;" number="57" object="" resource="MAASL" toString="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:24&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 2)))&#10;"/>
<po column="34" line="208" message="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:34&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 1)))&#10;" number="58" object="" resource="MAASL" toString="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:34&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 1)))&#10;"/>
<po column="44" line="208" message="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:44&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 0)))&#10;" number="59" object="" resource="MAASL" toString="BYT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 208:44&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 0)))&#10;"/>
<po column="14" line="209" message="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 3)))&#10;" number="60" object="" resource="MAASL" toString="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 3)))&#10;"/>
<po column="24" line="209" message="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:24&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 2)))&#10;" number="61" object="" resource="MAASL" toString="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:24&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 2)))&#10;"/>
<po column="34" line="209" message="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:34&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 1)))&#10;" number="62" object="" resource="MAASL" toString="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:34&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(Y, 1)))&#10;"/>
<po column="44" line="209" message="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:44&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 0)))&#10;" number="63" object="" resource="MAASL" toString="BYT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 209:44&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    pre_Byte(X, 0)))&#10;"/>
<po column="33" line="212" message="BYT, XY': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 212:33&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))&#10;" number="64" object="" resource="MAASL" toString="BYT, XY': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 212:33&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))&#10;"/>
<po column="36" line="212" message="BYT, XY': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 212:36&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Number(P) and (is_nat(P))))))&#10;" number="65" object="" resource="MAASL" toString="BYT, XY': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 212:36&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Number(P) and (is_nat(P))))))&#10;"/>
<po column="14" line="213" message="BYT, X'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 213:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        (let XY':Message_in_blocks = Condition_Sequence(XY, P) in&#10;          pre_Get_head_in_blocks(XY', 4))))))&#10;" number="66" object="" resource="MAASL" toString="BYT, X'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 213:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        (let XY':Message_in_blocks = Condition_Sequence(XY, P) in&#10;          pre_Get_head_in_blocks(XY', 4))))))&#10;"/>
<po column="14" line="214" message="BYT, Y'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 214:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        (let XY':Message_in_blocks = Condition_Sequence(XY, P) in&#10;          pre_Get_tail_in_blocks(XY', 4))))))&#10;" number="67" object="" resource="MAASL" toString="BYT, Y'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 214:14&#10;(forall K:Double_Number &amp;&#10;  (let X:Number = (hd K), Y:Number = (hd (tl K)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        (let XY':Message_in_blocks = Condition_Sequence(XY, P) in&#10;          pre_Get_tail_in_blocks(XY', 4))))))&#10;"/>
<po column="4" line="204" message="BYT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 204:4&#10;(forall K:Double_Number &amp;&#10;  inv_Double_Number(let X:Number = (hd K), Y:Number = (hd (tl K)) in let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in let XY':Message_in_blocks = Condition_Sequence(XY, P) in let X'':Message_in_blocks = Get_head_in_blocks(XY', 4), Y'':Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')])) and (is_(let X:Number = (hd K), Y:Number = (hd (tl K)) in let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in let XY':Message_in_blocks = Condition_Sequence(XY, P) in let X'':Message_in_blocks = Get_head_in_blocks(XY', 4), Y'':Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')]), seq of (Number))))&#10;" number="68" object="" resource="MAASL" toString="BYT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 204:4&#10;(forall K:Double_Number &amp;&#10;  inv_Double_Number(let X:Number = (hd K), Y:Number = (hd (tl K)) in let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in let XY':Message_in_blocks = Condition_Sequence(XY, P) in let X'':Message_in_blocks = Get_head_in_blocks(XY', 4), Y'':Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')])) and (is_(let X:Number = (hd K), Y:Number = (hd (tl K)) in let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in let XY':Message_in_blocks = Condition_Sequence(XY, P) in let X'':Message_in_blocks = Get_head_in_blocks(XY', 4), Y'':Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')]), seq of (Number))))&#10;"/>
<po column="10" line="221" message="Byte: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:10&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    pre_Byte((N div (2 ** 8)), (B - 1))))&#10;" number="69" object="" resource="MAASL" toString="Byte: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:10&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    pre_Byte((N div (2 ** 8)), (B - 1))))&#10;"/>
<po column="17" line="221" message="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:17&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    inv_Number((N div (2 ** 8))) and (is_nat((N div (2 ** 8))))))&#10;" number="70" object="" resource="MAASL" toString="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:17&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    inv_Number((N div (2 ** 8))) and (is_nat((N div (2 ** 8))))))&#10;"/>
<po column="29" line="221" message="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:29&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    (B - 1) &gt;= 0))&#10;" number="71" object="" resource="MAASL" toString="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:29&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    (B - 1) &gt;= 0))&#10;"/>
<po column="17" line="221" message="Byte: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:17&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    (2 ** 8) &lt;&gt; 0))&#10;" number="72" object="" resource="MAASL" toString="Byte: non-zero obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 221:17&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  (not (B = 0) =&gt;&#10;    (2 ** 8) &lt;&gt; 0))&#10;"/>
<po column="4" line="217" message="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 217:4&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  inv_Number((if (B = 0)&#10;  then (N mod (2 ** 8))&#10;  else Byte((N div (2 ** 8)), (B - 1)))) and (is_nat((if (B = 0)&#10;  then (N mod (2 ** 8))&#10;  else Byte((N div (2 ** 8)), (B - 1))))))&#10;" number="73" object="" resource="MAASL" toString="Byte: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 217:4&#10;(forall N:Number, B:nat &amp; ((B &gt;= 0) and (B &lt;= 3)) =&gt;&#10;  inv_Number((if (B = 0)&#10;  then (N mod (2 ** 8))&#10;  else Byte((N div (2 ** 8)), (B - 1)))) and (is_nat((if (B = 0)&#10;  then (N mod (2 ** 8))&#10;  else Byte((N div (2 ** 8)), (B - 1))))))&#10;"/>
<po column="31" line="227" message="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 227:31&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="74" object="" resource="MAASL" toString="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 227:31&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="31" line="228" message="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 228:31&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="75" object="" resource="MAASL" toString="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 228:31&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="33" line="229" message="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 229:33&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="76" object="" resource="MAASL" toString="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 229:33&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="47" line="229" message="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 229:47&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="77" object="" resource="MAASL" toString="Condition_Sequence: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 229:47&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="4" line="224" message="Condition_Sequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 224:4&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  inv_Message_in_blocks((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (is_((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P)))), seq of (Number)))))&#10;" number="78" object="" resource="MAASL" toString="Condition_Sequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 224:4&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  inv_Message_in_blocks((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (is_((if ((len M) = 1)&#10;  then [Condition_value((hd M), P)]&#10;  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P)))), seq of (Number)))))&#10;"/>
<po column="4" line="231" message="Condition_value: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 231:4&#10;(forall B:Number, P:Number &amp;&#10;  inv_Number(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if (B = 0)&#10;  then P''&#10;  else (if (B = ((2 ** 8) - 1))&#10;  then (((2 ** 8) - 1) - P'')&#10;  else B))) and (is_nat(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if (B = 0)&#10;  then P''&#10;  else (if (B = ((2 ** 8) - 1))&#10;  then (((2 ** 8) - 1) - P'')&#10;  else B)))))&#10;" number="79" object="" resource="MAASL" toString="Condition_value: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 231:4&#10;(forall B:Number, P:Number &amp;&#10;  inv_Number(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if (B = 0)&#10;  then P''&#10;  else (if (B = ((2 ** 8) - 1))&#10;  then (((2 ** 8) - 1) - P'')&#10;  else B))) and (is_nat(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if (B = 0)&#10;  then P''&#10;  else (if (B = ((2 ** 8) - 1))&#10;  then (((2 ** 8) - 1) - P'')&#10;  else B)))))&#10;"/>
<po column="4" line="240" message="Changes: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 240:4&#10;(forall B:Number, P:Number &amp;&#10;  inv_Number(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))&#10;  then P''&#10;  else P')) and (is_nat(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))&#10;  then P''&#10;  else P'))))&#10;" number="80" object="" resource="MAASL" toString="Changes: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 240:4&#10;(forall B:Number, P:Number &amp;&#10;  inv_Number(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))&#10;  then P''&#10;  else P')) and (is_nat(let P':nat1 = (2 * P) in let P'':nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))&#10;  then P''&#10;  else P'))))&#10;"/>
<po column="14" line="251" message="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 251:14&#10;(forall M:Message_in_blocks &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="81" object="" resource="MAASL" toString="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 251:14&#10;(forall M:Message_in_blocks &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="38" line="252" message="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 252:38&#10;(forall M:Message_in_blocks &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="82" object="" resource="MAASL" toString="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 252:38&#10;(forall M:Message_in_blocks &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="47" line="252" message="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 252:47&#10;(forall M:Message_in_blocks &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="83" object="" resource="MAASL" toString="Convert_Bytes_to_Number: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 252:47&#10;(forall M:Message_in_blocks &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="4" line="248" message="Convert_Bytes_to_Number: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 248:4&#10;(forall M:Message_in_blocks &amp;&#10;  inv_Number((if ((len M) = 1)&#10;  then (hd M)&#10;  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1))))))) and (is_nat((if ((len M) = 1)&#10;  then (hd M)&#10;  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1)))))))))&#10;" number="84" object="" resource="MAASL" toString="Convert_Bytes_to_Number: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 248:4&#10;(forall M:Message_in_blocks &amp;&#10;  inv_Number((if ((len M) = 1)&#10;  then (hd M)&#10;  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1))))))) and (is_nat((if ((len M) = 1)&#10;  then (hd M)&#10;  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1)))))))))&#10;"/>
<po column="16" line="256" message="PAT, X: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 256:16&#10;(forall D:Double_Number &amp;&#10;  D &lt;&gt; [])&#10;" number="85" object="" resource="MAASL" toString="PAT, X: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 256:16&#10;(forall D:Double_Number &amp;&#10;  D &lt;&gt; [])&#10;"/>
<po column="20" line="257" message="PAT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 257:20&#10;(forall D:Double_Number &amp;&#10;  D &lt;&gt; [])&#10;" number="86" object="" resource="MAASL" toString="PAT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 257:20&#10;(forall D:Double_Number &amp;&#10;  D &lt;&gt; [])&#10;"/>
<po column="17" line="257" message="PAT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 257:17&#10;(forall D:Double_Number &amp;&#10;  (tl D) &lt;&gt; [])&#10;" number="87" object="" resource="MAASL" toString="PAT, Y: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 257:17&#10;(forall D:Double_Number &amp;&#10;  (tl D) &lt;&gt; [])&#10;"/>
<po column="14" line="258" message="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:14&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(X, 3)))&#10;" number="88" object="" resource="MAASL" toString="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:14&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(X, 3)))&#10;"/>
<po column="24" line="258" message="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:24&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(X, 2)))&#10;" number="89" object="" resource="MAASL" toString="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:24&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(X, 2)))&#10;"/>
<po column="34" line="258" message="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:34&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 1)))&#10;" number="90" object="" resource="MAASL" toString="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:34&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 1)))&#10;"/>
<po column="44" line="258" message="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:44&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 0)))&#10;" number="91" object="" resource="MAASL" toString="PAT, X': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 258:44&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 0)))&#10;"/>
<po column="14" line="259" message="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:14&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 3)))&#10;" number="92" object="" resource="MAASL" toString="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:14&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 3)))&#10;"/>
<po column="24" line="259" message="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:24&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 2)))&#10;" number="93" object="" resource="MAASL" toString="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:24&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 2)))&#10;"/>
<po column="34" line="259" message="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:34&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 1)))&#10;" number="94" object="" resource="MAASL" toString="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:34&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 1)))&#10;"/>
<po column="44" line="259" message="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:44&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 0)))&#10;" number="95" object="" resource="MAASL" toString="PAT, Y': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 259:44&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    pre_Byte(Y, 0)))&#10;"/>
<po column="19" line="262" message="PAT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 262:19&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))&#10;" number="96" object="" resource="MAASL" toString="PAT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 262:19&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))&#10;"/>
<po column="22" line="262" message="PAT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 262:22&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Number(P) and (is_nat(P))))))&#10;" number="97" object="" resource="MAASL" toString="PAT: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 262:22&#10;(forall D:Double_Number &amp;&#10;  (let X:Number = (hd D), Y:Number = (hd (tl D)) in&#10;    (let X':seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y':seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in&#10;      (let XY:seq1 of (Number) = (X' ^ Y'), P:nat = 0 in&#10;        inv_Number(P) and (is_nat(P))))))&#10;"/>
<po column="22" line="267" message="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 267:22&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="98" object="" resource="MAASL" toString="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 267:22&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="29" line="268" message="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 268:29&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="99" object="" resource="MAASL" toString="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 268:29&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="43" line="268" message="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 268:43&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;" number="100" object="" resource="MAASL" toString="Record_Changes: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 268:43&#10;(forall M:Message_in_blocks, P:Number &amp;&#10;  (not ((len M) = 1) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="17" line="280" message="Prelude, J1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 280:17&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    J1K1 &lt;&gt; []))&#10;" number="101" object="" resource="MAASL" toString="Prelude, J1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 280:17&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    J1K1 &lt;&gt; []))&#10;"/>
<po column="21" line="281" message="Prelude, K1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 281:21&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    J1K1 &lt;&gt; []))&#10;" number="102" object="" resource="MAASL" toString="Prelude, K1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 281:21&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    J1K1 &lt;&gt; []))&#10;"/>
<po column="18" line="281" message="Prelude, K1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 281:18&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (tl J1K1) &lt;&gt; []))&#10;" number="103" object="" resource="MAASL" toString="Prelude, K1: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 281:18&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (tl J1K1) &lt;&gt; []))&#10;"/>
<po column="21" line="306" message="Prelude, H5: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 306:21&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            inv_Number(Q) and (is_nat(Q))))))))))))))))&#10;" number="104" object="" resource="MAASL" toString="Prelude, H5: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 306:21&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            inv_Number(Q) and (is_nat(Q))))))))))))))))&#10;"/>
<po column="19" line="309" message="Prelude, X0Y0: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 309:19&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H4, H5]))))))))))))))))&#10;" number="105" object="" resource="MAASL" toString="Prelude, X0Y0: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 309:19&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H4, H5]))))))))))))))))&#10;"/>
<po column="18" line="310" message="Prelude, V0W: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 310:18&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H6, H7]))))))))))))))))&#10;" number="106" object="" resource="MAASL" toString="Prelude, V0W: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 310:18&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H6, H7]))))))))))))))))&#10;"/>
<po column="17" line="311" message="Prelude, ST: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 311:17&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H8, H9]))))))))))))))))&#10;" number="107" object="" resource="MAASL" toString="Prelude, ST: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 311:17&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              inv_Double_Number([H8, H9]))))))))))))))))&#10;"/>
<po column="24" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:24&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                X0Y0 &lt;&gt; []))))))))))))))))&#10;" number="108" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:24&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                X0Y0 &lt;&gt; []))))))))))))))))&#10;"/>
<po column="37" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:37&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                X0Y0 &lt;&gt; []))))))))))))))))&#10;" number="109" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:37&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                X0Y0 &lt;&gt; []))))))))))))))))&#10;"/>
<po column="34" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:34&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl X0Y0) &lt;&gt; []))))))))))))))))&#10;" number="110" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:34&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl X0Y0) &lt;&gt; []))))))))))))))))&#10;"/>
<po column="46" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:46&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                V0W &lt;&gt; []))))))))))))))))&#10;" number="111" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:46&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                V0W &lt;&gt; []))))))))))))))))&#10;"/>
<po column="58" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:58&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                V0W &lt;&gt; []))))))))))))))))&#10;" number="112" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:58&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                V0W &lt;&gt; []))))))))))))))))&#10;"/>
<po column="55" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:55&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl V0W) &lt;&gt; []))))))))))))))))&#10;" number="113" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:55&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl V0W) &lt;&gt; []))))))))))))))))&#10;"/>
<po column="66" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:66&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                ST &lt;&gt; []))))))))))))))))&#10;" number="114" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:66&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                ST &lt;&gt; []))))))))))))))))&#10;"/>
<po column="77" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:77&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                ST &lt;&gt; []))))))))))))))))&#10;" number="115" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:77&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                ST &lt;&gt; []))))))))))))))))&#10;"/>
<po column="74" line="312" message="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:74&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl ST) &lt;&gt; []))))))))))))))))&#10;" number="116" object="" resource="MAASL" toString="Prelude: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 312:74&#10;(forall K:Key &amp;&#10;  (let J1K1:Double_Number = BYT(K) in&#10;    (let J1:Number = (hd J1K1), K1:Number = (hd (tl J1K1)), P:Number = PAT(K), Q:nat1 = ((1 + P) * (1 + P)) in&#10;      (let J12:Number = MUL1(J1, J1), J22:Number = MUL2(J1, J1) in&#10;        (let J14:Number = MUL1(J12, J12), J24:Number = MUL2(J22, J22) in&#10;          (let J16:Number = MUL1(J12, J14), J26:Number = MUL2(J22, J24) in&#10;            (let J18:Number = MUL1(J12, J16), J28:Number = MUL2(J22, J26) in&#10;              (let H4:Number = XOR(J14, J28), H6:Number = XOR(J16, J26), H8:Number = XOR(J18, J28) in&#10;                (let K12:Number = MUL1(K1, K1), K22:Number = MUL2(K1, K1) in&#10;                  (let K14:Number = MUL1(K12, K12), K24:Number = MUL2(K22, K22) in&#10;                    (let K15:Number = MUL1(K1, K14), K25:Number = MUL2(K1, K24) in&#10;                      (let K17:Number = MUL1(K12, K15), K27:Number = MUL2(K22, K25) in&#10;                        (let K19:Number = MUL1(K12, K17), K29:Number = MUL2(K22, K27) in&#10;                          (let H':Number = XOR(K15, K25) in&#10;                            (let H5:Number = MUL2(H', Q), H7:Number = XOR(K17, K27), H9:Number = XOR(K19, K29) in&#10;                              (let X0Y0:Double_Number = BYT([H4, H5]), V0W:Double_Number = BYT([H6, H7]), ST:Double_Number = BYT([H8, H9]) in&#10;                                (tl ST) &lt;&gt; []))))))))))))))))&#10;"/>
<po column="23" line="325" message="Main_loop, Mi: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 325:23&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      M &lt;&gt; [])))&#10;" number="117" object="" resource="MAASL" toString="Main_loop, Mi: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 325:23&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      M &lt;&gt; [])))&#10;"/>
<po column="24" line="332" message="Main_loop, F': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 332:24&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              inv_Number(A) and (is_nat(A)))))))))&#10;" number="118" object="" resource="MAASL" toString="Main_loop, F': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 332:24&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              inv_Number(A) and (is_nat(A)))))))))&#10;"/>
<po column="24" line="333" message="Main_loop, G': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 333:24&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              inv_Number(B) and (is_nat(B)))))))))&#10;" number="119" object="" resource="MAASL" toString="Main_loop, G': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 333:24&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              inv_Number(B) and (is_nat(B)))))))))&#10;"/>
<po column="27" line="334" message="Main_loop, F'': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 334:27&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                inv_Number(C) and (is_nat(C))))))))))&#10;" number="120" object="" resource="MAASL" toString="Main_loop, F'': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 334:27&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                inv_Number(C) and (is_nat(C))))))))))&#10;"/>
<po column="27" line="335" message="Main_loop, G'': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 335:27&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                inv_Number(D) and (is_nat(D))))))))))&#10;" number="121" object="" resource="MAASL" toString="Main_loop, G'': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 335:27&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                inv_Number(D) and (is_nat(D))))))))))&#10;"/>
<po column="20" line="337" message="Main_loop, Y'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 337:20&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                (let F'':Number = AND(F', C), G'':Number = AND(G', D) in&#10;                  pre_MUL2A(Y', G''))))))))))&#10;" number="122" object="" resource="MAASL" toString="Main_loop, Y'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 337:20&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                (let F'':Number = AND(F', C), G'':Number = AND(G', D) in&#10;                  pre_MUL2A(Y', G''))))))))))&#10;"/>
<po column="18" line="338" message="Main_loop: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 338:18&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                (let F'':Number = AND(F', C), G'':Number = AND(G', D) in&#10;                  (let X'':Number = MUL1(X', F''), Y'':Number = MUL2A(Y', G'') in&#10;                    M &lt;&gt; []))))))))))&#10;" number="123" object="" resource="MAASL" toString="Main_loop: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 338:18&#10;(forall M:Message_in_blocks_plus_empty_Message, KC:Key_Constant &amp;&#10;  (let mk_Key_Constant(X, Y, V, W, S, T):Key_Constant = KC in&#10;    (not ((len M) = 0) =&gt;&#10;      (let Mi:Number = (hd M) in&#10;        (let V':Number = CYC(V) in&#10;          (let E:Number = XOR(V', W), X':Number = XOR(X, Mi), Y':Number = XOR(Y, Mi) in&#10;            (let F:Number = ADD(E, Y'), G:Number = ADD(E, X') in&#10;              (let F':Number = OR(F, A), G':Number = OR(G, B) in&#10;                (let F'':Number = AND(F', C), G'':Number = AND(G', D) in&#10;                  (let X'':Number = MUL1(X', F''), Y'':Number = MUL2A(Y', G'') in&#10;                    M &lt;&gt; []))))))))))&#10;"/>
<po column="14" line="352" message="Z: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 352:14&#10;(forall M:Message_in_blocks, K:Key &amp;&#10;  (let KC:Key_Constant = Prelude(K) in&#10;    (let S:Number = (KC.S), T:Number = (KC.T) in&#10;      (let M':seq1 of (Number) = ((M ^ [S]) ^ [T]) in&#10;        inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))&#10;" number="124" object="" resource="MAASL" toString="Z: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 352:14&#10;(forall M:Message_in_blocks, K:Key &amp;&#10;  (let KC:Key_Constant = Prelude(K) in&#10;    (let S:Number = (KC.S), T:Number = (KC.T) in&#10;      (let M':seq1 of (Number) = ((M ^ [S]) ^ [T]) in&#10;        inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))&#10;"/>
<po column="14" line="362" message="MAC, M'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 362:14&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    pre_Form_Message_into_blocks(M')))&#10;" number="125" object="" resource="MAASL" toString="MAC, M'': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 362:14&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    pre_Form_Message_into_blocks(M')))&#10;"/>
<po column="19" line="366" message="MAC, M''': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 366:19&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        pre_Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))&#10;" number="126" object="" resource="MAASL" toString="MAC, M''': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 366:19&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        pre_Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))&#10;"/>
<po column="42" line="366" message="MAC, M''': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 366:42&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        Maximum_No_of_blocks_for_MAC &gt;= 0))))&#10;" number="127" object="" resource="MAASL" toString="MAC, M''': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 366:42&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        Maximum_No_of_blocks_for_MAC &gt;= 0))))&#10;"/>
<po column="21" line="367" message="MAC, M''': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 367:21&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        pre_Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))&#10;" number="128" object="" resource="MAASL" toString="MAC, M''': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 367:21&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        pre_Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))&#10;"/>
<po column="44" line="367" message="MAC, M''': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 367:44&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        Maximum_No_of_blocks_for_MAC &gt;= 0))))&#10;" number="129" object="" resource="MAASL" toString="MAC, M''': subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 367:44&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        Maximum_No_of_blocks_for_MAC &gt;= 0))))&#10;"/>
<po column="17" line="368" message="MAC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 368:17&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        (let M''':seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in&#10;          inv_Message_in_blocks(M''') and (inv_Message_in_blocks_plus_empty_Message(M''') and (is_(M''', seq of (Number)))))))))&#10;" number="130" object="" resource="MAASL" toString="MAC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 368:17&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        (let M''':seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in&#10;          inv_Message_in_blocks(M''') and (inv_Message_in_blocks_plus_empty_Message(M''') and (is_(M''', seq of (Number)))))))))&#10;"/>
<po column="24" line="368" message="MAC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 368:24&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        (let M''':seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in&#10;          Maximum_No_of_blocks_for_MAC_plus_1 &gt;= 0)))))&#10;" number="131" object="" resource="MAASL" toString="MAC: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 368:24&#10;(forall M:Message_in_bits, K:Key &amp;&#10;  (let M':Message_in_bits = Pad_out_Message(M) in&#10;    (let M'':Message_in_blocks = Form_Message_into_blocks(M') in&#10;      (not ((len M'') &lt;= Maximum_No_of_blocks_for_MAC) =&gt;&#10;        (let M''':seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in&#10;          Maximum_No_of_blocks_for_MAC_plus_1 &gt;= 0)))))&#10;"/>
<po column="22" line="374" message="Z_of_SEG, M': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 374:22&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    pre_Get_head_in_blocks(M, No_blocks)))&#10;" number="132" object="" resource="MAASL" toString="Z_of_SEG, M': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 374:22&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    pre_Get_head_in_blocks(M, No_blocks)))&#10;"/>
<po column="16" line="375" message="Z_of_SEG, M': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 375:16&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    pre_Get_tail_in_blocks(M, No_blocks)))&#10;" number="133" object="" resource="MAASL" toString="Z_of_SEG, M': function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 375:16&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    pre_Get_tail_in_blocks(M, No_blocks)))&#10;"/>
<po column="17" line="376" message="Z_of_SEG: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 376:17&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    (let M':seq1 of (Number) = ([Z(Get_head_in_blocks(M, No_blocks), K)] ^ Get_tail_in_blocks(M, No_blocks)) in&#10;      inv_Message_in_blocks(M') and (inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))&#10;" number="134" object="" resource="MAASL" toString="Z_of_SEG: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 376:17&#10;(forall M:Message_in_blocks, K:Key, No_blocks:nat &amp;&#10;  (not ((len M) &lt;= No_blocks) =&gt;&#10;    (let M':seq1 of (Number) = ([Z(Get_head_in_blocks(M, No_blocks), K)] ^ Get_tail_in_blocks(M, No_blocks)) in&#10;      inv_Message_in_blocks(M') and (inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))&#10;"/>
<po column="10" line="388" message="Get_tail_in_bits: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:10&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    pre_Get_tail_in_bits((tl M), (No_bits - 1))))&#10;" number="135" object="" resource="MAASL" toString="Get_tail_in_bits: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:10&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    pre_Get_tail_in_bits((tl M), (No_bits - 1))))&#10;"/>
<po column="41" line="388" message="Get_tail_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:41&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    (No_bits - 1) &gt;= 0))&#10;" number="136" object="" resource="MAASL" toString="Get_tail_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:41&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    (No_bits - 1) &gt;= 0))&#10;"/>
<po column="31" line="388" message="Get_tail_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:31&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="137" object="" resource="MAASL" toString="Get_tail_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 388:31&#10;(forall M:Message_in_bits, No_bits:nat &amp; ((len M) &gt;= No_bits) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="15" line="394" message="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 394:15&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  ((No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="138" object="" resource="MAASL" toString="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 394:15&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  ((No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="15" line="395" message="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:15&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="139" object="" resource="MAASL" toString="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:15&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="22" line="395" message="Get_head_in_bits: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:22&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    pre_Get_head_in_bits((tl M), (No_bits - 1))))&#10;" number="140" object="" resource="MAASL" toString="Get_head_in_bits: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:22&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    pre_Get_head_in_bits((tl M), (No_bits - 1))))&#10;"/>
<po column="53" line="395" message="Get_head_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:53&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    (No_bits - 1) &gt;= 0))&#10;" number="141" object="" resource="MAASL" toString="Get_head_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:53&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    (No_bits - 1) &gt;= 0))&#10;"/>
<po column="43" line="395" message="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:43&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="142" object="" resource="MAASL" toString="Get_head_in_bits: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 395:43&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  (not (No_bits = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="4" line="391" message="Get_head_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 391:4&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  inv_Message_in_bits((if (No_bits = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1))))) and (is_((if (No_bits = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1)))), seq of (Bit))))&#10;" number="143" object="" resource="MAASL" toString="Get_head_in_bits: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 391:4&#10;(forall M:Message_in_bits, No_bits:nat &amp; (((len M) &gt;= No_bits) and (No_bits &gt;= 1)) =&gt;&#10;  inv_Message_in_bits((if (No_bits = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1))))) and (is_((if (No_bits = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1)))), seq of (Bit))))&#10;"/>
<po column="10" line="402" message="Get_tail_in_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:10&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    pre_Get_tail_in_blocks((tl M), (No_blocks - 1))))&#10;" number="144" object="" resource="MAASL" toString="Get_tail_in_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:10&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    pre_Get_tail_in_blocks((tl M), (No_blocks - 1))))&#10;"/>
<po column="45" line="402" message="Get_tail_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:45&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    (No_blocks - 1) &gt;= 0))&#10;" number="145" object="" resource="MAASL" toString="Get_tail_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:45&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    (No_blocks - 1) &gt;= 0))&#10;"/>
<po column="33" line="402" message="Get_tail_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:33&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="146" object="" resource="MAASL" toString="Get_tail_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 402:33&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; ((len M) &gt;= No_blocks) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="15" line="408" message="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 408:15&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  ((No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="147" object="" resource="MAASL" toString="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 408:15&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  ((No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="15" line="409" message="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:15&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="148" object="" resource="MAASL" toString="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:15&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="22" line="409" message="Get_head_in_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:22&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    pre_Get_head_in_blocks((tl M), (No_blocks - 1))))&#10;" number="149" object="" resource="MAASL" toString="Get_head_in_blocks: function apply obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:22&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    pre_Get_head_in_blocks((tl M), (No_blocks - 1))))&#10;"/>
<po column="57" line="409" message="Get_head_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:57&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    (No_blocks - 1) &gt;= 0))&#10;" number="150" object="" resource="MAASL" toString="Get_head_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:57&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    (No_blocks - 1) &gt;= 0))&#10;"/>
<po column="45" line="409" message="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:45&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;" number="151" object="" resource="MAASL" toString="Get_head_in_blocks: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 409:45&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  (not (No_blocks = 0) =&gt;&#10;    M &lt;&gt; []))&#10;"/>
<po column="4" line="405" message="Get_head_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 405:4&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  inv_Message_in_blocks((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (inv_Message_in_blocks_plus_empty_Message((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (is_((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1)))), seq of (Number)))))&#10;" number="152" object="" resource="MAASL" toString="Get_head_in_blocks: subtype obligation in 'DEFAULT' (src\test\resources\modules\MAASL) at line 405:4&#10;(forall M:Message_in_blocks, No_blocks:nat &amp; (((len M) &gt;= No_blocks) and (No_blocks &gt;= 1)) =&gt;&#10;  inv_Message_in_blocks((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (inv_Message_in_blocks_plus_empty_Message((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (is_((if (No_blocks = 0)&#10;  then [(hd M)]&#10;  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1)))), seq of (Number)))))&#10;"/>
</result>
</testResult>
