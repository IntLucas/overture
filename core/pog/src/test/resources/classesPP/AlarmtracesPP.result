<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="30" line="89" message="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 89:30&#10;(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) &amp;&#10;  (forall p in set (dom sch) &amp;&#10;    p in set dom sch))&#10;" number="0" object="" resource="AlarmtracesPP" toString="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 89:30&#10;(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) &amp;&#10;  (forall p in set (dom sch) &amp;&#10;    p in set dom sch))&#10;"/>
<po column="29" line="92" message="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 92:29&#10;(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) &amp;&#10;  ((forall p in set (dom sch) &amp; (sch(p) &lt;&gt; {})) =&gt;&#10;    (forall a in set as &amp;&#10;      (forall p in set (dom sch) &amp;&#10;        p in set dom sch))))&#10;" number="0" object="" resource="AlarmtracesPP" toString="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 92:29&#10;(forall as:set of (Alarm), sch:map (Period) to (set of (Expert)) &amp;&#10;  ((forall p in set (dom sch) &amp; (sch(p) &lt;&gt; {})) =&gt;&#10;    (forall a in set as &amp;&#10;      (forall p in set (dom sch) &amp;&#10;        p in set dom sch))))&#10;"/>
<po column="22" line="111" message="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 111:22&#10;(let expert:Expert = RESULT in&#10;  p in set dom schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 111:22&#10;(let expert:Expert = RESULT in&#10;  p in set dom schedule)&#10;"/>
<po column="8" line="101" message="ExpertToPage(Alarm, Period): operation post condition obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 101:8&#10;let expert:Expert = RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))&#10;" number="0" object="" resource="AlarmtracesPP" toString="ExpertToPage(Alarm, Period): operation post condition obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 101:8&#10;let expert:Expert = RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))&#10;"/>
<po column="7" line="103" message="ExpertToPage(Alarm, Period): let be st existence obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 103:7&#10;exists expert in set schedule(p) &amp; ((a.GetReqQuali)() in set (expert.GetQuali)())&#10;" number="0" object="" resource="AlarmtracesPP" toString="ExpertToPage(Alarm, Period): let be st existence obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 103:7&#10;exists expert in set schedule(p) &amp; ((a.GetReqQuali)() in set (expert.GetQuali)())&#10;"/>
<po column="21" line="103" message="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 103:21&#10;p in set dom schedule&#10;" number="0" object="" resource="AlarmtracesPP" toString="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 103:21&#10;p in set dom schedule&#10;"/>
<po column="15" line="116" message="NumberOfExperts(Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 116:15&#10;p in set dom schedule&#10;" number="0" object="" resource="AlarmtracesPP" toString="NumberOfExperts(Period): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 116:15&#10;p in set dom schedule&#10;"/>
<po column="25" line="122" message="ExpertIsOnDuty(Expert): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 122:25&#10;(forall p in set (dom schedule) &amp;&#10;  p in set dom schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="ExpertIsOnDuty(Expert): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 122:25&#10;(forall p in set (dom schedule) &amp;&#10;  p in set dom schedule)&#10;"/>
<po column="8" line="124" message="Plant(set of (Alarm), map (Period) to (set of (Expert))): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 124:8&#10;-- After Plant(set of (Alarm), map (Period) to (set of (Expert))) constructor body&#10;PlantInv(alarms, schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="Plant(set of (Alarm), map (Period) to (set of (Expert))): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 124:8&#10;-- After Plant(set of (Alarm), map (Period) to (set of (Expert))) constructor body&#10;PlantInv(alarms, schedule)&#10;"/>
<po column="3" line="134" message="AddExpertToSchedule(Period, Expert): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 134:3&#10;-- After schedule(p) := (if (p in set (dom schedule))&#10;then (schedule(p) union {ex})&#10;else {ex})&#10;PlantInv(alarms, schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="AddExpertToSchedule(Period, Expert): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 134:3&#10;-- After schedule(p) := (if (p in set (dom schedule))&#10;then (schedule(p) union {ex})&#10;else {ex})&#10;PlantInv(alarms, schedule)&#10;"/>
<po column="23" line="135" message="AddExpertToSchedule(Period, Expert): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 135:23&#10;((p in set (dom schedule)) =&gt;&#10;  p in set dom schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="AddExpertToSchedule(Period, Expert): map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 135:23&#10;((p in set (dom schedule)) =&gt;&#10;  p in set dom schedule)&#10;"/>
<po column="13" line="141" message="RemoveExpertFromSchedule(Period, Expert), exs: map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 141:13&#10;p in set dom schedule&#10;" number="0" object="" resource="AlarmtracesPP" toString="RemoveExpertFromSchedule(Period, Expert), exs: map apply obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 141:13&#10;p in set dom schedule&#10;"/>
<po column="5" line="143" message="RemoveExpertFromSchedule(Period, Expert): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 143:5&#10;-- After schedule := (if ((card exs) = 1)&#10;then ({p} &lt;-: schedule)&#10;else (schedule ++ {p |-&gt; (exs \ {ex})}))&#10;PlantInv(alarms, schedule)&#10;" number="0" object="" resource="AlarmtracesPP" toString="RemoveExpertFromSchedule(Period, Expert): state invariant obligation in 'Plant' (src\test\resources\classesPP\AlarmtracesPP) at line 143:5&#10;-- After schedule := (if ((card exs) = 1)&#10;then ({p} &lt;-: schedule)&#10;else (schedule ++ {p |-&gt; (exs \ {ex})}))&#10;PlantInv(alarms, schedule)&#10;"/>
<po column="33" line="165" message="plant: map sequence compatible obligation in 'Test1' (src\test\resources\classesPP\AlarmtracesPP) at line 165:33&#10;forall m1, m2 in set {{p1 |-&gt; {ex1, ex4}}, {p2 |-&gt; {ex2, ex3}}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="AlarmtracesPP" toString="plant: map sequence compatible obligation in 'Test1' (src\test\resources\classesPP\AlarmtracesPP) at line 165:33&#10;forall m1, m2 in set {{p1 |-&gt; {ex1, ex4}}, {p2 |-&gt; {ex2, ex3}}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
</result>
</testResult>
