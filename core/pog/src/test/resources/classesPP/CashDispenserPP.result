<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="3" line="19" message="inv_Account: state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 19:3&#10;-- After instance variable initializers&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="inv_Account: state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 19:3&#10;-- After instance variable initializers&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="6" line="52" message="Create(map (CardId) to (Cardholder), nat): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 52:6&#10;-- After cards := cs&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="Create(map (CardId) to (Cardholder), nat): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 52:6&#10;-- After cards := cs&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="6" line="53" message="Create(map (CardId) to (Cardholder), nat): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 53:6&#10;-- After balance := b&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="Create(map (CardId) to (Cardholder), nat): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 53:6&#10;-- After balance := b&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="9" line="72" message="Withdrawal(CardId, nat, Date): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 72:9&#10;-- After balance := (balance - amount)&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="Withdrawal(CardId, nat, Date): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 72:9&#10;-- After balance := (balance - amount)&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="28" line="72" message="Withdrawal(CardId, nat, Date): subtype obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 72:28&#10;(balance - amount) &gt;= 0&#10;" number="0" object="" resource="CashDispenserPP" toString="Withdrawal(CardId, nat, Date): subtype obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 72:28&#10;(balance - amount) &gt;= 0&#10;"/>
<po column="9" line="73" message="Withdrawal(CardId, nat, Date): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 73:9&#10;-- After transactions := (transactions ^ [transaction])&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="Withdrawal(CardId, nat, Date): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 73:9&#10;-- After transactions := (transactions ^ [transaction])&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="14" line="81" message="MakeStatement(CardId, Date), nm: map apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 81:14&#10;cardId in set dom cards&#10;" number="0" object="" resource="CashDispenserPP" toString="MakeStatement(CardId, Date), nm: map apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 81:14&#10;cardId in set dom cards&#10;"/>
<po column="16" line="82" message="MakeStatement(CardId, Date), addr: map apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 82:16&#10;cardId in set dom cards&#10;" number="0" object="" resource="CashDispenserPP" toString="MakeStatement(CardId, Date), addr: map apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 82:16&#10;cardId in set dom cards&#10;"/>
<po column="5" line="101" message="AddCard(CardId, Cardholder): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 101:5&#10;-- After cards := (cards munion {cId |-&gt; ch})&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="AddCard(CardId, Cardholder): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 101:5&#10;-- After cards := (cards munion {cId |-&gt; ch})&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="14" line="101" message="AddCard(CardId, Cardholder): map compatible obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 101:14&#10;forall ldom1 in set dom cards, rdom2 in set dom {cId |-&gt; ch} &amp;&#10;ldom1 = rdom2 =&gt; cards(ldom1) = {cId |-&gt; ch}(rdom2)&#10;" number="0" object="" resource="CashDispenserPP" toString="AddCard(CardId, Cardholder): map compatible obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 101:14&#10;forall ldom1 in set dom cards, rdom2 in set dom {cId |-&gt; ch} &amp;&#10;ldom1 = rdom2 =&gt; cards(ldom1) = {cId |-&gt; ch}(rdom2)&#10;"/>
<po column="5" line="106" message="RemoveCard(CardId): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 106:5&#10;-- After cards := ({cId} &lt;-: cards)&#10;TransactionsInvariant(transactions)&#10;" number="0" object="" resource="CashDispenserPP" toString="RemoveCard(CardId): state invariant obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 106:5&#10;-- After cards := ({cId} &lt;-: cards)&#10;TransactionsInvariant(transactions)&#10;"/>
<po column="25" line="112" message="TransactionsInvariant(seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 112:25&#10;(forall ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp;&#10;    i in set inds ts))&#10;" number="0" object="" resource="CashDispenserPP" toString="TransactionsInvariant(seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 112:25&#10;(forall ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp;&#10;    i in set inds ts))&#10;"/>
<po column="10" line="121" message="DateTotal(Date, seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 121:10&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp; ((ts(i).date) = date) =&gt;&#10;    i in set inds ts))&#10;" number="0" object="" resource="CashDispenserPP" toString="DateTotal(Date, seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 121:10&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp; ((ts(i).date) = date) =&gt;&#10;    i in set inds ts))&#10;"/>
<po column="44" line="121" message="DateTotal(Date, seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 121:44&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp;&#10;    i in set inds ts))&#10;" number="0" object="" resource="CashDispenserPP" toString="DateTotal(Date, seq of (Transaction)): sequence apply obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 121:44&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  (forall i in set (inds ts) &amp;&#10;    i in set inds ts))&#10;"/>
<po column="3" line="119" message="DateTotal(Date, seq of (Transaction)): subtype obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 119:3&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  Sum([(ts(i).amount) | i in set (inds ts) &amp; ((ts(i).date) = date)]) &gt;= 0)&#10;" number="0" object="" resource="CashDispenserPP" toString="DateTotal(Date, seq of (Transaction)): subtype obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 119:3&#10;(forall date:Date, ts:seq of (Transaction) &amp;&#10;  Sum([(ts(i).amount) | i in set (inds ts) &amp; ((ts(i).date) = date)]) &gt;= 0)&#10;"/>
<po column="10" line="127" message="Sum(seq of (real)): non-empty sequence obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 127:10&#10;(forall rs:seq of (real) &amp;&#10;  (not (rs = []) =&gt;&#10;    rs &lt;&gt; []))&#10;" number="0" object="" resource="CashDispenserPP" toString="Sum(seq of (real)): non-empty sequence obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 127:10&#10;(forall rs:seq of (real) &amp;&#10;  (not (rs = []) =&gt;&#10;    rs &lt;&gt; []))&#10;"/>
<po column="22" line="127" message="Sum(seq of (real)): non-empty sequence obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 127:22&#10;(forall rs:seq of (real) &amp;&#10;  (not (rs = []) =&gt;&#10;    rs &lt;&gt; []))&#10;" number="0" object="" resource="CashDispenserPP" toString="Sum(seq of (real)): non-empty sequence obligation in 'Account' (src\test\resources\classesPP\CashDispenserPP) at line 127:22&#10;(forall rs:seq of (real) &amp;&#10;  (not (rs = []) =&gt;&#10;    rs &lt;&gt; []))&#10;"/>
<po column="1" line="241" message="inv_CentralResource: state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 241:1&#10;-- After instance variable initializers&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="inv_CentralResource: state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 241:1&#10;-- After instance variable initializers&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="3" line="251" message="inv_CentralResource: state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 251:3&#10;-- After instance variable initializers&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="inv_CentralResource: state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 251:3&#10;-- After instance variable initializers&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="6" line="261" message="AddLetterbox(Clock, Letterbox): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 261:6&#10;-- After clock := c&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="AddLetterbox(Clock, Letterbox): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 261:6&#10;-- After clock := c&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="6" line="262" message="AddLetterbox(Clock, Letterbox): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 262:6&#10;-- After letterbox := l&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="AddLetterbox(Clock, Letterbox): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 262:6&#10;-- After letterbox := l&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="10" line="292" message="PostStatement(AccountId, CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 292:10&#10;accountId in set dom accounts&#10;" number="0" object="" resource="CashDispenserPP" toString="PostStatement(AccountId, CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 292:10&#10;accountId in set dom accounts&#10;"/>
<po column="21" line="307" message="IsLegalCard(AccountId, CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 307:21&#10;((cardId not in set illegalCards) =&gt;&#10;  ((accountId in set (dom accounts)) =&gt;&#10;    accountId in set dom accounts))&#10;" number="0" object="" resource="CashDispenserPP" toString="IsLegalCard(AccountId, CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 307:21&#10;((cardId not in set illegalCards) =&gt;&#10;  ((accountId in set (dom accounts)) =&gt;&#10;    accountId in set dom accounts))&#10;"/>
<po column="12" line="311" message="NumberOfTriesExceeded(CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 311:12&#10;cardId in set dom numberOfTries&#10;" number="0" object="" resource="CashDispenserPP" toString="NumberOfTriesExceeded(CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 311:12&#10;cardId in set dom numberOfTries&#10;"/>
<po column="5" line="315" message="ResetNumberOfTries(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 315:5&#10;-- After numberOfTries(cardId) := 0&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="ResetNumberOfTries(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 315:5&#10;-- After numberOfTries(cardId) := 0&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="5" line="319" message="IncrNumberOfTries(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 319:5&#10;-- After numberOfTries(cardId) := (numberOfTries(cardId) + 1)&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="IncrNumberOfTries(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 319:5&#10;-- After numberOfTries(cardId) := (numberOfTries(cardId) + 1)&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="30" line="319" message="IncrNumberOfTries(CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 319:30&#10;cardId in set dom numberOfTries&#10;" number="0" object="" resource="CashDispenserPP" toString="IncrNumberOfTries(CardId): map apply obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 319:30&#10;cardId in set dom numberOfTries&#10;"/>
<po column="6" line="328" message="AddAccount(AccountId, Account): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 328:6&#10;-- After accounts := (accounts ++ {accId |-&gt; acc})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="AddAccount(AccountId, Account): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 328:6&#10;-- After accounts := (accounts ++ {accId |-&gt; acc})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="6" line="329" message="AddAccount(AccountId, Account): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 329:6&#10;-- After numberOfTries := (numberOfTries ++ {cId |-&gt; 0 | cId in set (acc.GetCardIds)()})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="AddAccount(AccountId, Account): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 329:6&#10;-- After numberOfTries := (numberOfTries ++ {cId |-&gt; 0 | cId in set (acc.GetCardIds)()})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="23" line="330" message="AddAccount(AccountId, Account): map set compatible obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 330:23&#10;forall m1, m2 in set {{cId |-&gt; 0} | cId in set (acc.GetCardIds)()} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="CashDispenserPP" toString="AddAccount(AccountId, Account): map set compatible obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 330:23&#10;forall m1, m2 in set {{cId |-&gt; 0} | cId in set (acc.GetCardIds)()} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="5" line="336" message="AddIllegalCard(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 336:5&#10;-- After illegalCards := (illegalCards union {cId})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;" number="0" object="" resource="CashDispenserPP" toString="AddIllegalCard(CardId): state invariant obligation in 'CentralResource' (src\test\resources\classesPP\CashDispenserPP) at line 336:5&#10;-- After illegalCards := (illegalCards union {cId})&#10;(((dom numberOfTries) union illegalCards) subset (dunion {(acc.GetCardIds)() | [acc in set (rng accounts)]})) and (forall acc1, acc2 in set (rng accounts) &amp; ((acc1 &lt;&gt; acc2) =&gt; (((acc1.GetCardIds)() inter (acc2.GetCardIds)()) = {})))&#10;"/>
<po column="12" line="431" message="GetLastStatement(): sequence apply obligation in 'Letterbox' (src\test\resources\classesPP\CashDispenserPP) at line 431:12&#10;(len statements) in set inds statements&#10;" number="0" object="" resource="CashDispenserPP" toString="GetLastStatement(): sequence apply obligation in 'Letterbox' (src\test\resources\classesPP\CashDispenserPP) at line 431:12&#10;(len statements) in set inds statements&#10;"/>
<po column="20" line="678" message="tills: map sequence compatible obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 678:20&#10;forall m1, m2 in set {{1 |-&gt; new Till(resource)}, {2 |-&gt; new Till(resource)}, {3 |-&gt; new Till(resource)}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="CashDispenserPP" toString="tills: map sequence compatible obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 678:20&#10;forall m1, m2 in set {{1 |-&gt; new Till(resource)}, {2 |-&gt; new Till(resource)}, {3 |-&gt; new Till(resource)}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="12" line="695" message="GetTill(TillId): map apply obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 695:12&#10;tid in set dom tills&#10;" number="0" object="" resource="CashDispenserPP" toString="GetTill(TillId): map apply obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 695:12&#10;tid in set dom tills&#10;"/>
<po column="43" line="718" message="System(), ifacc1: map sequence compatible obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 718:43&#10;forall m1, m2 in set {{5 |-&gt; peter}, {6 |-&gt; sten}, {7 |-&gt; CSK}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="CashDispenserPP" toString="System(), ifacc1: map sequence compatible obligation in 'System' (src\test\resources\classesPP\CashDispenserPP) at line 718:43&#10;forall m1, m2 in set {{5 |-&gt; peter}, {6 |-&gt; sten}, {7 |-&gt; CSK}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="11" line="789" message="runTests(seq of (Event)): sequence apply obligation in 'Test' (src\test\resources\classesPP\CashDispenserPP) at line 789:11&#10;(forall i in set (inds events) &amp;&#10;  i in set inds events)&#10;" number="0" object="" resource="CashDispenserPP" toString="runTests(seq of (Event)): sequence apply obligation in 'Test' (src\test\resources\classesPP\CashDispenserPP) at line 789:11&#10;(forall i in set (inds events) &amp;&#10;  i in set inds events)&#10;"/>
<po column="10" line="888" message="Till(CentralResource): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 888:10&#10;-- After Till(CentralResource) constructor body&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Till(CentralResource): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 888:10&#10;-- After Till(CentralResource) constructor body&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="5" line="898" message="InsertCard(Card): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 898:5&#10;-- After curCard := c&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="InsertCard(Card): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 898:5&#10;-- After curCard := c&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="8" line="913" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 913:8&#10;-- After cardOk := (codeOk and cardLegal)&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 913:8&#10;-- After cardOk := (codeOk and cardLegal)&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="11" line="915" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 915:11&#10;-- After retainedCards := (retainedCards union {curCard})&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 915:11&#10;-- After retainedCards := (retainedCards union {curCard})&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="42" line="915" message="Validate(PinCode): subtype obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 915:42&#10;is_((retainedCards union {curCard}), set of (Card))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): subtype obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 915:42&#10;is_((retainedCards union {curCard}), set of (Card))&#10;"/>
<po column="11" line="916" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 916:11&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 916:11&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="14" line="923" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 923:14&#10;-- After retainedCards := (retainedCards union {curCard})&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 923:14&#10;-- After retainedCards := (retainedCards union {curCard})&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="45" line="923" message="Validate(PinCode): subtype obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 923:45&#10;is_((retainedCards union {curCard}), set of (Card))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): subtype obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 923:45&#10;is_((retainedCards union {curCard}), set of (Card))&#10;"/>
<po column="14" line="924" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 924:14&#10;-- After cardOk := false&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 924:14&#10;-- After cardOk := false&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="14" line="925" message="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 925:14&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="Validate(PinCode): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 925:14&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="6" line="941" message="ReturnCard(): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 941:6&#10;-- After cardOk := false&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="ReturnCard(): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 941:6&#10;-- After cardOk := false&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
<po column="6" line="942" message="ReturnCard(): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 942:6&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;" number="0" object="" resource="CashDispenserPP" toString="ReturnCard(): state invariant obligation in 'Till' (src\test\resources\classesPP\CashDispenserPP) at line 942:6&#10;-- After curCard := nil&#10;((curCard = nil) =&gt; (not cardOk))&#10;"/>
</result>
</testResult>
