<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="5" line="20" message="sin(real): post condition obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 20:5&#10;(forall v:real &amp;&#10;  post_sin(v, sin(v)))&#10;" number="0" object="" resource="QuadilateralPP" toString="sin(real): post condition obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 20:5&#10;(forall v:real &amp;&#10;  post_sin(v, sin(v)))&#10;"/>
<po column="5" line="20" message="sin(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 20:5&#10;(forall v:real &amp;&#10;  is_real(sin(v)))&#10;" number="0" object="" resource="QuadilateralPP" toString="sin(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 20:5&#10;(forall v:real &amp;&#10;  is_real(sin(v)))&#10;"/>
<po column="5" line="26" message="cos(real): post condition obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 26:5&#10;(forall v:real &amp;&#10;  post_cos(v, cos(v)))&#10;" number="0" object="" resource="QuadilateralPP" toString="cos(real): post condition obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 26:5&#10;(forall v:real &amp;&#10;  post_cos(v, cos(v)))&#10;"/>
<po column="5" line="26" message="cos(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 26:5&#10;(forall v:real &amp;&#10;  is_real(cos(v)))&#10;" number="0" object="" resource="QuadilateralPP" toString="cos(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 26:5&#10;(forall v:real &amp;&#10;  is_real(cos(v)))&#10;"/>
<po column="5" line="32" message="tan(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 32:5&#10;(forall a:real &amp; (cos(a) &lt;&gt; 0) =&gt;&#10;  is_real(tan(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="tan(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 32:5&#10;(forall a:real &amp; (cos(a) &lt;&gt; 0) =&gt;&#10;  is_real(tan(a)))&#10;"/>
<po column="5" line="38" message="cot(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 38:5&#10;(forall a:real &amp; (sin(a) &lt;&gt; 0) =&gt;&#10;  is_real(cot(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="cot(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 38:5&#10;(forall a:real &amp; (sin(a) &lt;&gt; 0) =&gt;&#10;  is_real(cot(a)))&#10;"/>
<po column="5" line="44" message="asin(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 44:5&#10;(forall a:real &amp; ((abs a) &lt;= 1) =&gt;&#10;  is_real(asin(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="asin(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 44:5&#10;(forall a:real &amp; ((abs a) &lt;= 1) =&gt;&#10;  is_real(asin(a)))&#10;"/>
<po column="5" line="50" message="acos(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 50:5&#10;(forall a:real &amp; ((abs a) &lt;= 1) =&gt;&#10;  is_real(acos(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="acos(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 50:5&#10;(forall a:real &amp; ((abs a) &lt;= 1) =&gt;&#10;  is_real(acos(a)))&#10;"/>
<po column="5" line="56" message="atan(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 56:5&#10;(forall v:real &amp;&#10;  is_real(atan(v)))&#10;" number="0" object="" resource="QuadilateralPP" toString="atan(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 56:5&#10;(forall v:real &amp;&#10;  is_real(atan(v)))&#10;"/>
<po column="11" line="63" message="acot(real): non-zero obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 63:11&#10;(forall a:real &amp; (a &lt;&gt; 0) =&gt;&#10;  a &lt;&gt; 0)&#10;" number="0" object="" resource="QuadilateralPP" toString="acot(real): non-zero obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 63:11&#10;(forall a:real &amp; (a &lt;&gt; 0) =&gt;&#10;  a &lt;&gt; 0)&#10;"/>
<po column="5" line="67" message="sqrt(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 67:5&#10;(forall a:real &amp; (a &gt;= 0) =&gt;&#10;  is_real(sqrt(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="sqrt(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 67:5&#10;(forall a:real &amp; (a &gt;= 0) =&gt;&#10;  is_real(sqrt(a)))&#10;"/>
<po column="5" line="73" message="pi_f(): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 73:5&#10;is_real(pi_f())&#10;" number="0" object="" resource="QuadilateralPP" toString="pi_f(): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 73:5&#10;is_real(pi_f())&#10;"/>
<po column="5" line="99" message="exp(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 99:5&#10;(forall a:real &amp;&#10;  is_real(exp(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="exp(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 99:5&#10;(forall a:real &amp;&#10;  is_real(exp(a)))&#10;"/>
<po column="5" line="104" message="ln(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 104:5&#10;(forall a:real &amp; (a &gt; 0) =&gt;&#10;  is_real(ln(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="ln(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 104:5&#10;(forall a:real &amp; (a &gt; 0) =&gt;&#10;  is_real(ln(a)))&#10;"/>
<po column="5" line="110" message="log(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 110:5&#10;(forall a:real &amp; (a &gt; 0) =&gt;&#10;  is_real(log(a)))&#10;" number="0" object="" resource="QuadilateralPP" toString="log(real): subtype obligation in 'MATH' (src\test\resources\classesPP\QuadilateralPP) at line 110:5&#10;(forall a:real &amp; (a &gt; 0) =&gt;&#10;  is_real(log(a)))&#10;"/>
<po column="5" line="135" message="acos(real): function satisfiability obligation in 'Mathematics' (src\test\resources\classesPP\QuadilateralPP) at line 135:5&#10;(forall x:real &amp;&#10;  exists res:Angle &amp; post_acos(x, res))&#10;" number="0" object="" resource="QuadilateralPP" toString="acos(real): function satisfiability obligation in 'Mathematics' (src\test\resources\classesPP\QuadilateralPP) at line 135:5&#10;(forall x:real &amp;&#10;  exists res:Angle &amp; post_acos(x, res))&#10;"/>
<po column="5" line="138" message="sqrt(real): function satisfiability obligation in 'Mathematics' (src\test\resources\classesPP\QuadilateralPP) at line 138:5&#10;(forall r:real &amp;&#10;  exists res:real &amp; post_sqrt(r, res))&#10;" number="0" object="" resource="QuadilateralPP" toString="sqrt(real): function satisfiability obligation in 'Mathematics' (src\test\resources\classesPP\QuadilateralPP) at line 138:5&#10;(forall r:real &amp;&#10;  exists res:real &amp; post_sqrt(r, res))&#10;"/>
<po column="7" line="149" message="inv_Parallelogram: state invariant obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 149:7&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4)))&#10;" number="0" object="" resource="QuadilateralPP" toString="inv_Parallelogram: state invariant obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 149:7&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4)))&#10;"/>
<po column="16" line="157" message="GetAngle(): function apply obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 157:16&#10;pre_((math.acos), (inproduct(v1, v2) / (length(v1) * length(v2))))&#10;" number="0" object="" resource="QuadilateralPP" toString="GetAngle(): function apply obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 157:16&#10;pre_((math.acos), (inproduct(v1, v2) / (length(v1) * length(v2))))&#10;"/>
<po column="46" line="157" message="GetAngle(): non-zero obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 157:46&#10;(length(v1) * length(v2)) &lt;&gt; 0&#10;" number="0" object="" resource="QuadilateralPP" toString="GetAngle(): non-zero obligation in 'Parallelogram' (src\test\resources\classesPP\QuadilateralPP) at line 157:46&#10;(length(v1) * length(v2)) &lt;&gt; 0&#10;"/>
<po column="5" line="173" message="inv_Quadrilateral: state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 173:5&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="inv_Quadrilateral: state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 173:5&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="7" line="179" message="Move(Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 179:7&#10;-- After position := add(position, mk_vector(p1, p2))&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="Move(Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 179:7&#10;-- After position := add(position, mk_vector(p1, p2))&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="7" line="185" message="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 185:7&#10;-- After v1 := mk_vector(p1, p2)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 185:7&#10;-- After v1 := mk_vector(p1, p2)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="7" line="186" message="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 186:7&#10;-- After v2 := mk_vector(p2, p3)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 186:7&#10;-- After v2 := mk_vector(p2, p3)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="7" line="187" message="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 187:7&#10;-- After v3 := mk_vector(p3, p4)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 187:7&#10;-- After v3 := mk_vector(p3, p4)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="7" line="188" message="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 188:7&#10;-- After v4 := mk_vector(p4, p1)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;" number="0" object="" resource="QuadilateralPP" toString="SetShape(Position, Position, Position, Position): state invariant obligation in 'Quadrilateral' (src\test\resources\classesPP\QuadilateralPP) at line 188:7&#10;-- After v4 := mk_vector(p4, p1)&#10;(add(add(v1, v2), add(v3, v4)) = NullVector)&#10;"/>
<po column="3" line="203" message="inv_Rectangle: state invariant obligation in 'Rectangle' (src\test\resources\classesPP\QuadilateralPP) at line 203:3&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4))) and (inproduct(v1, v2) = 0)&#10;" number="0" object="" resource="QuadilateralPP" toString="inv_Rectangle: state invariant obligation in 'Rectangle' (src\test\resources\classesPP\QuadilateralPP) at line 203:3&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4))) and (inproduct(v1, v2) = 0)&#10;"/>
<po column="3" line="213" message="inv_Rhombus: state invariant obligation in 'Rhombus' (src\test\resources\classesPP\QuadilateralPP) at line 213:3&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4))) and (length(v1) = length(v2))&#10;" number="0" object="" resource="QuadilateralPP" toString="inv_Rhombus: state invariant obligation in 'Rhombus' (src\test\resources\classesPP\QuadilateralPP) at line 213:3&#10;-- After instance variable initializers&#10;(add(add(v1, v2), add(v3, v4)) = NullVector) and ((length(v1) = length(v3)) and (length(v2) = length(v4))) and (length(v1) = length(v2))&#10;"/>
<po column="11" line="257" message="length(vector): function apply obligation in 'Vector' (src\test\resources\classesPP\QuadilateralPP) at line 257:11&#10;(forall v:vector &amp;&#10;  (let mk_vector(mk_(hdx, hdy), mk_(tlx, tly)):vector = v in&#10;    (let math:MATH = new MATH() in&#10;      pre_((math.sqrt), (((tlx - hdx) ** 2) + ((tly - hdy) ** 2))))))&#10;" number="0" object="" resource="QuadilateralPP" toString="length(vector): function apply obligation in 'Vector' (src\test\resources\classesPP\QuadilateralPP) at line 257:11&#10;(forall v:vector &amp;&#10;  (let mk_vector(mk_(hdx, hdy), mk_(tlx, tly)):vector = v in&#10;    (let math:MATH = new MATH() in&#10;      pre_((math.sqrt), (((tlx - hdx) ** 2) + ((tly - hdy) ** 2))))))&#10;"/>
<po column="24" line="264" message="add(vector, vector): subtype obligation in 'Vector' (src\test\resources\classesPP\QuadilateralPP) at line 264:24&#10;(forall v1:vector, v2:vector &amp;&#10;  (let mk_vector(hd1, mk_(tl1x, tl1y)):vector = v1, mk_vector(mk_(hd2x, hd2y), mk_(tl2x, tl2y)):vector = v2 in&#10;    (((is_nat((tl1x + (tl2x - hd2x))))) and ((is_nat((tl1y + (tl2y - hd2y))))))))&#10;" number="0" object="" resource="QuadilateralPP" toString="add(vector, vector): subtype obligation in 'Vector' (src\test\resources\classesPP\QuadilateralPP) at line 264:24&#10;(forall v1:vector, v2:vector &amp;&#10;  (let mk_vector(hd1, mk_(tl1x, tl1y)):vector = v1, mk_vector(mk_(hd2x, hd2y), mk_(tl2x, tl2y)):vector = v2 in&#10;    (((is_nat((tl1x + (tl2x - hd2x))))) and ((is_nat((tl1y + (tl2y - hd2y))))))))&#10;"/>
<po column="14" line="284" message="LookUp(Token): map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 284:14&#10;qid in set dom screen&#10;" number="0" object="" resource="QuadilateralPP" toString="LookUp(Token): map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 284:14&#10;qid in set dom screen&#10;"/>
<po column="39" line="292" message="GetAngle(Token): map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 292:39&#10;((qid in set (dom screen)) =&gt;&#10;  qid in set dom screen)&#10;" number="0" object="" resource="QuadilateralPP" toString="GetAngle(Token): map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 292:39&#10;((qid in set (dom screen)) =&gt;&#10;  qid in set dom screen)&#10;"/>
<po column="33" line="289" message="GetAngle(Token), scrn: subtype obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 289:33&#10;is_(screen(qid), Parallelogram)&#10;" number="0" object="" resource="QuadilateralPP" toString="GetAngle(Token), scrn: subtype obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 289:33&#10;is_(screen(qid), Parallelogram)&#10;"/>
<po column="33" line="289" message="GetAngle(Token), scrn: map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 289:33&#10;qid in set dom screen&#10;" number="0" object="" resource="QuadilateralPP" toString="GetAngle(Token), scrn: map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 289:33&#10;qid in set dom screen&#10;"/>
<po column="19" line="296" message="Display(Token, Quadrilateral): map compatible obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 296:19&#10;forall ldom1 in set dom screen, rdom2 in set dom {qid |-&gt; q} &amp;&#10;ldom1 = rdom2 =&gt; screen(ldom1) = {qid |-&gt; q}(rdom2)&#10;" number="0" object="" resource="QuadilateralPP" toString="Display(Token, Quadrilateral): map compatible obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 296:19&#10;forall ldom1 in set dom screen, rdom2 in set dom {qid |-&gt; q} &amp;&#10;ldom1 = rdom2 =&gt; screen(ldom1) = {qid |-&gt; q}(rdom2)&#10;"/>
<po column="35" line="307" message="Move(Token, (nat * nat), (nat * nat)), scrn: map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 307:35&#10;qid in set dom screen&#10;" number="0" object="" resource="QuadilateralPP" toString="Move(Token, (nat * nat), (nat * nat)), scrn: map apply obligation in 'WorkSpace' (src\test\resources\classesPP\QuadilateralPP) at line 307:35&#10;qid in set dom screen&#10;"/>
</result>
</testResult>
