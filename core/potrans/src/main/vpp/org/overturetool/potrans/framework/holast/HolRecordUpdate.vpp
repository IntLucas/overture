class HolRecordUpdate is subclass of HolExpression

instance variables
record:			[HolExpression];
fieldNames:		seq of HolIdentifier;
fieldValues:	seq of HolExpression

operations

public HolRecordUpdate : [HolExpression] * seq of HolIdentifier * seq of HolExpression ==> HolRecordUpdate
HolRecordUpdate(newRecord, newFieldNames, newFieldValues) ==
(
	record := newRecord;
	fieldNames := newFieldNames;
	fieldValues := newFieldValues
)
pre len newFieldNames = len newFieldValues;

public setTypeInformation : HolTypeDescription ==> ()
setTypeInformation (typeInfo) ==
(
	for i = 1 to len fieldValues do
		fieldValues(i).setTypeInformation(typeInfo);
	if record <> nil then
		record.setTypeInformation(typeInfo)
);

public requires : () ==> set of seq of char
requires() == 
(
	dcl result : set of seq of char := 
		if record <> nil then
			record.requires()
		else {};
	for i = 1 to len fieldValues do
		result := result union fieldValues(i).requires();
	return result;
);

public print : () ==> seq of char
print () ==
(
	dcl result : seq of char;
	result := "<|";
	for i = 1 to len fieldNames do
	(
		result := result ^ fieldNames(i).print() ^ ":=" ^ fieldValues(i).print();
		if i < len fieldNames then
			result := result ^ "; "
	);
	result := conc [result, "|>"];
	if record = nil then return result
	else return "(" ^ record.print() ^ " with " ^ result ^ ")"
)
pre len fieldNames = len fieldValues;

end HolRecordUpdate
