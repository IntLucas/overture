class HolSetComprehension is subclass of HolExpression

instance variables
element:		HolExpression;
restrictions:	seq of HolExpression

operations

public HolSetComprehension : HolExpression * seq of HolExpression ==> HolSetComprehension
HolSetComprehension(newElement, newRestrictions) ==
(
	element := newElement;
	restrictions := newRestrictions
);

public setTypeInformation : HolTypeDescription ==> ()
setTypeInformation (typeInfo) ==
(
	element.setTypeInformation(typeInfo);
	for i = 1 to len restrictions do
		restrictions(i).setTypeInformation(typeInfo)
);

public requires : () ==> set of seq of char
requires() == 
(
	dcl result : set of seq of char := {};
	for i = 1 to len restrictions do
		result := result union restrictions(i).requires();
	return (element.requires() union result) \ (element.requires() inter result)		-- All requirements of element and restrictions, except for the ones that they have in common
);

public print : () ==> seq of char
print () ==
(
	dcl result : seq of char;
	result := conc ["{", element.print(), " | "];
	for i = 1 to len restrictions do
	(
		result := conc [result, restrictions(i).print()];
		if i < len restrictions then
			result := conc [result, " /\\ "]
	);
	return conc [result, "}"]
);

public setElement : HolExpression ==> HolSetComprehension
setElement (newElement) == 
(
	element := newElement;
	return self
);

public getElement : () ==> HolExpression
getElement () == 
	return element;

functions

end HolSetComprehension
