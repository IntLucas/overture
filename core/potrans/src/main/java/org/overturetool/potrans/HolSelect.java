//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class HolSelect extends HolExpression {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=variable KEEP=NO
  private HolIdentifier variable = null;
// ***** VDMTOOLS END Name=variable

// ***** VDMTOOLS START Name=restrictor KEEP=NO
  private HolExpression restrictor = null;
// ***** VDMTOOLS END Name=restrictor


// ***** VDMTOOLS START Name=vdm_init_HolSelect KEEP=NO
  private void vdm_init_HolSelect () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_HolSelect


// ***** VDMTOOLS START Name=HolSelect KEEP=NO
  public HolSelect () throws CGException {
    vdm_init_HolSelect();
  }
// ***** VDMTOOLS END Name=HolSelect


// ***** VDMTOOLS START Name=HolSelect#2|HolIdentifier|Vector KEEP=NO
  public HolSelect (final HolIdentifier newVar, final Vector newRestrictors) throws CGException {

    vdm_init_HolSelect();
    {

      variable = (HolIdentifier) UTIL.clone(newVar);
      restrictor = (HolExpression) UTIL.clone((HolExpression) mergeExpression(newRestrictors));
    }
  }
// ***** VDMTOOLS END Name=HolSelect#2|HolIdentifier|Vector


// ***** VDMTOOLS START Name=setTypeInformation#1|HolTypeDescription KEEP=NO
  public void setTypeInformation (final HolTypeDescription typeInfo) throws CGException {
    restrictor.setTypeInformation((HolTypeDescription) typeInfo);
  }
// ***** VDMTOOLS END Name=setTypeInformation#1|HolTypeDescription


// ***** VDMTOOLS START Name=requires KEEP=NO
  public HashSet requires () throws CGException {

    HashSet rexpr_1 = new HashSet();
    HashSet var1_2 = new HashSet();
    var1_2 = restrictor.requires();
    HashSet var2_3 = new HashSet();
    String enum_set_4 = null;
    enum_set_4 = variable.print();
    var2_3 = new HashSet();
    var2_3.add(enum_set_4);
    rexpr_1 = (HashSet) var1_2.clone();
    rexpr_1.removeAll(var2_3);
    return rexpr_1;
  }
// ***** VDMTOOLS END Name=requires


// ***** VDMTOOLS START Name=print KEEP=NO
  public String print () throws CGException {

    String rexpr_1 = null;
    Vector unArg_2 = null;
    unArg_2 = new Vector();
    unArg_2.add(new String("(@ "));
    String e_seq_4 = null;
    e_seq_4 = variable.print();
    unArg_2.add(e_seq_4);
    unArg_2.add(new String("."));
    String e_seq_6 = null;
    e_seq_6 = restrictor.print();
    unArg_2.add(e_seq_6);
    unArg_2.add(new String(")"));
    String rdcseq_8 = new String();
    for (Iterator enm_11 = unArg_2.iterator(); enm_11.hasNext(); ) {

      String e_9 = UTIL.ConvertToString(enm_11.next());
      rdcseq_8 = rdcseq_8.concat(e_9);
    }
    rexpr_1 = rdcseq_8;
    return rexpr_1;
  }
// ***** VDMTOOLS END Name=print


// ***** VDMTOOLS START Name=mergeExpression#1|Vector KEEP=NO
  private HolExpression mergeExpression (final Vector exprs) throws CGException {

    Object varRes_2 = null;
    if (new Boolean(new Integer(exprs.size()).intValue() == new Integer(0).intValue()).booleanValue()) 
      varRes_2 = new HolIdentifier(new String("T"));
    else 
      if (new Boolean(new Integer(exprs.size()).intValue() == new Integer(1).intValue()).booleanValue()) 
        if ((1 <= new Integer(1).intValue()) && (new Integer(1).intValue() <= exprs.size())) 
          varRes_2 = exprs.get(new Integer(1).intValue() - 1);
        else 
          UTIL.RunTime("Run-Time Error:Illegal index");
      else {

        Vector arg_9 = null;
        arg_9 = new Vector();
        arg_9.add((HolExpression) exprs.get(0));
        arg_9.add((HolExpression) mergeExpression(new Vector(exprs.subList(1, exprs.size()))));
        varRes_2 = new HolApplication(new HolNativeIdentifier(new String("$/\\")), arg_9);
      }
    return (HolExpression) varRes_2;
  }
// ***** VDMTOOLS END Name=mergeExpression#1|Vector

}
;
