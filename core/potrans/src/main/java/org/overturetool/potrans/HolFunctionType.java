//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class HolFunctionType extends HolType {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=domain KEEP=NO
  private HolProductType domain = null;
// ***** VDMTOOLS END Name=domain

// ***** VDMTOOLS START Name=range KEEP=NO
  private HolType range = null;
// ***** VDMTOOLS END Name=range


// ***** VDMTOOLS START Name=vdm_init_HolFunctionType KEEP=NO
  private void vdm_init_HolFunctionType () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_HolFunctionType


// ***** VDMTOOLS START Name=HolFunctionType KEEP=NO
  public HolFunctionType () throws CGException {
    vdm_init_HolFunctionType();
  }
// ***** VDMTOOLS END Name=HolFunctionType


// ***** VDMTOOLS START Name=HolFunctionType#2|HolProductType|HolType KEEP=NO
  public HolFunctionType (final HolProductType newDom, final HolType newRng) throws CGException {

    vdm_init_HolFunctionType();
    {

      domain = (HolProductType) UTIL.clone(newDom);
      range = (HolType) UTIL.clone(newRng);
    }
  }
// ***** VDMTOOLS END Name=HolFunctionType#2|HolProductType|HolType


// ***** VDMTOOLS START Name=HolFunctionType#2|Vector|HolType KEEP=NO
  public HolFunctionType (final Vector newDom, final HolType newRng) throws CGException {

    vdm_init_HolFunctionType();
    {

      domain = (HolProductType) UTIL.clone(new HolProductType(newDom));
      range = (HolType) UTIL.clone(newRng);
    }
  }
// ***** VDMTOOLS END Name=HolFunctionType#2|Vector|HolType


// ***** VDMTOOLS START Name=setTypeInformation#1|HolTypeDescription KEEP=NO
  public void setTypeInformation (final HolTypeDescription typeInfo) throws CGException {

    domain.setTypeInformation((HolTypeDescription) typeInfo);
    range.setTypeInformation((HolTypeDescription) typeInfo);
  }
// ***** VDMTOOLS END Name=setTypeInformation#1|HolTypeDescription


// ***** VDMTOOLS START Name=requires KEEP=NO
  public HashSet requires () throws CGException {

    HashSet rexpr_1 = new HashSet();
    HashSet var1_2 = new HashSet();
    var1_2 = domain.requires();
    HashSet var2_3 = new HashSet();
    var2_3 = range.requires();
    rexpr_1 = (HashSet) var1_2.clone();
    rexpr_1.addAll(var2_3);
    return rexpr_1;
  }
// ***** VDMTOOLS END Name=requires


// ***** VDMTOOLS START Name=print#1|Object KEEP=NO
  public String print (final Object specType) throws CGException {

    String rexpr_2 = null;
    Vector unArg_3 = null;
    String e_seq_4 = null;
    e_seq_4 = domain.printAsCurriedFunction(specType);
    unArg_3 = new Vector();
    unArg_3.add(e_seq_4);
    unArg_3.add(new String("->"));
    String e_seq_7 = null;
    e_seq_7 = range.print(specType);
    unArg_3.add(e_seq_7);
    String rdcseq_9 = new String();
    for (Iterator enm_12 = unArg_3.iterator(); enm_12.hasNext(); ) {

      String e_10 = UTIL.ConvertToString(enm_12.next());
      rdcseq_9 = rdcseq_9.concat(e_10);
    }
    rexpr_2 = rdcseq_9;
    return rexpr_2;
  }
// ***** VDMTOOLS END Name=print#1|Object


// ***** VDMTOOLS START Name=printAsTerm KEEP=NO
  public String printAsTerm () throws CGException {
    return print(new org.overturetool.potrans.quotes.term());
  }
// ***** VDMTOOLS END Name=printAsTerm


// ***** VDMTOOLS START Name=getDomain KEEP=NO
  public HolProductType getDomain () throws CGException {
    return (HolProductType) domain;
  }
// ***** VDMTOOLS END Name=getDomain


// ***** VDMTOOLS START Name=getRange KEEP=NO
  public HolType getRange () throws CGException {
    return (HolType) range;
  }
// ***** VDMTOOLS END Name=getRange

}
;
