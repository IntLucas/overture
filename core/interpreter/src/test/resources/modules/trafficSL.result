<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="org.overture.interpreter.tests.InterpreterStringSlTestCase">
<result>
<output object="mk_Kernel({mk_token(&quot;A1North&quot;) |-&gt; &lt;Red&gt;, mk_token(&quot;A1South&quot;) |-&gt; &lt;Red&gt;, mk_token(&quot;A66East&quot;) |-&gt; &lt;Amber&gt;, mk_token(&quot;A66West&quot;) |-&gt; &lt;Green&gt;}, {mk_Conflict(mk_token(&quot;A1North&quot;), mk_token(&quot;A66East&quot;)), mk_Conflict(mk_token(&quot;A1North&quot;), mk_token(&quot;A66West&quot;)), mk_Conflict(mk_token(&quot;A1South&quot;), mk_token(&quot;A66East&quot;)), mk_Conflict(mk_token(&quot;A1South&quot;), mk_token(&quot;A66West&quot;)), mk_Conflict(mk_token(&quot;A66East&quot;), mk_token(&quot;A1North&quot;)), mk_Conflict(mk_token(&quot;A66East&quot;), mk_token(&quot;A1South&quot;)), mk_Conflict(mk_token(&quot;A66West&quot;), mk_token(&quot;A1North&quot;)), mk_Conflict(mk_token(&quot;A66West&quot;), mk_token(&quot;A1South&quot;))})" resource="trafficSL" value="mk_Kernel({mk_token(&quot;A1North&quot;) |-&gt; &lt;Red&gt;, mk_token(&quot;A1South&quot;) |-&gt; &lt;Red&gt;, mk_token(&quot;A66East&quot;) |-&gt; &lt;Amber&gt;, mk_token(&quot;A66West&quot;) |-&gt; &lt;Green&gt;}, {mk_Conflict(mk_token(&quot;A1North&quot;), mk_token(&quot;A66East&quot;)), mk_Conflict(mk_token(&quot;A1North&quot;), mk_token(&quot;A66West&quot;)), mk_Conflict(mk_token(&quot;A1South&quot;), mk_token(&quot;A66East&quot;)), mk_Conflict(mk_token(&quot;A1South&quot;), mk_token(&quot;A66West&quot;)), mk_Conflict(mk_token(&quot;A66East&quot;), mk_token(&quot;A1North&quot;)), mk_Conflict(mk_token(&quot;A66East&quot;), mk_token(&quot;A1South&quot;)), mk_Conflict(mk_token(&quot;A66West&quot;), mk_token(&quot;A1North&quot;)), mk_Conflict(mk_token(&quot;A66West&quot;), mk_token(&quot;A1South&quot;))})"/>
</result>
</testResult>
