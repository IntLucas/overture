// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

// import java collection types
import java.util.*;

public class JavaInheritanceClause extends JavaNode implements IJavaInheritanceClause
{
	// private member variable (implement_list)
	private List<IJavaIdentifier> m_implement_list = new Vector<IJavaIdentifier>();

	// public operation to retrieve the embedded private field value
	public List<IJavaIdentifier> getImplementList()
	{
		return m_implement_list;
	}

	// public operation to set the embedded private field value
	public void setImplementList(List<IJavaIdentifier> p_implement_list)
	{
		// consistency check (field must be non null!)
		assert(p_implement_list != null);

		// instantiate the member variable
		m_implement_list = p_implement_list;

		// set the parent of each element in the sequence parameter passed
		for (IJavaNode lnode: p_implement_list) lnode.setParent(this);
	}

	// private member variable (extends)
	private List<IJavaIdentifier> m_extends = new Vector<IJavaIdentifier>();

	// public operation to retrieve the embedded private field value
	public List<IJavaIdentifier> getExtends()
	{
		return m_extends;
	}

	// public operation to set the embedded private field value
	public void setExtends(List<IJavaIdentifier> p_extends)
	{
		// consistency check (field must be non null!)
		assert(p_extends != null);

		// instantiate the member variable
		m_extends = p_extends;

		// set the parent of each element in the sequence parameter passed
		for (IJavaNode lnode: p_extends) lnode.setParent(this);
	}

	// default constructor
	public JavaInheritanceClause()
	{
		super();
		m_implement_list = null;
		m_extends = null;
	}

	// auxiliary constructor
	public JavaInheritanceClause(
		List<IJavaIdentifier> p_implement_list,
		List<IJavaIdentifier> p_extends
	) {
		super();
		setImplementList(p_implement_list);
		setExtends(p_extends);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitInheritanceClause(this); }

	// the identity function
	public String identify() { return "JavaInheritanceClause"; }
}
