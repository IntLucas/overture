// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

// import the List and Vector types
import java.util.*;

public class JavaNode implements IJavaNode
{
	// keep track of all children nodes
	private Vector<IJavaNode> children = null;

	// retrieve the list of children of this node
	public List<IJavaNode> getChildren() { return children; }

	// link each node to a possible parent node
	private IJavaNode parent = null;

	// retrieve the parent node
	public IJavaNode getParent() { return parent; }

	// set the parent node
	public void setParent(IJavaNode pNode)
	{
		// integrity check
		assert(pNode != null);

		// set the parent
		parent = pNode;

		// and add ourselves to the list of children of that node
		pNode.getChildren().add(this);
	}

	// default constructor
	public JavaNode()
	{
		// initialize the list of children
		children = new Vector<IJavaNode>();
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitNode(this); }

	// the identity function
	public String identify() { return "JavaNode"; }
}
