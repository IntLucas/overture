// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

public class JavaIsBasicTypeExpression extends JavaExpression implements IJavaIsBasicTypeExpression
{
	// private member variable (type)
	private IJavaType m_type = null;

	// public operation to retrieve the embedded private field value
	public IJavaType getType()
	{
		return m_type;
	}

	// public operation to set the embedded private field value
	public void setType(IJavaType p_type)
	{
		// consistency check (field must be non null!)
		assert(p_type != null);

		// instantiate the member variable
		m_type = p_type;

		// set the parent of the parameter passed
		p_type.setParent(this);
	}

	// private member variable (Value)
	private IJavaExpression m_Value = null;

	// public operation to retrieve the embedded private field value
	public IJavaExpression getValue()
	{
		return m_Value;
	}

	// public operation to set the embedded private field value
	public void setValue(IJavaExpression p_Value)
	{
		// consistency check (field must be non null!)
		assert(p_Value != null);

		// instantiate the member variable
		m_Value = p_Value;

		// set the parent of the parameter passed
		p_Value.setParent(this);
	}

	// default constructor
	public JavaIsBasicTypeExpression()
	{
		super();
		m_type = null;
		m_Value = null;
	}

	// auxiliary constructor
	public JavaIsBasicTypeExpression(
		IJavaType p_type,
		IJavaExpression p_Value
	) {
		super();
		setType(p_type);
		setValue(p_Value);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitIsBasicTypeExpression(this); }

	// the identity function
	public String identify() { return "JavaIsBasicTypeExpression"; }
}
