// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.itf;

public abstract interface IJavaVisitor {
	// visitor operation signatures for all Java types
	public abstract void visitNode(IJavaNode pNode);
	public abstract void visitTailExpression(IJavaTailExpression pNode);
	public abstract void visitRangeResToExpression(IJavaRangeResToExpression pNode);
	public abstract void visitSpecification(IJavaSpecification pNode);
	public abstract void visitNilLiteral(IJavaNilLiteral pNode);
	public abstract void visitModifier(IJavaModifier pNode);
	public abstract void visitBind(IJavaBind pNode);
	public abstract void visitMapDomainExpression(IJavaMapDomainExpression pNode);
	public abstract void visitRecordConstructor(IJavaRecordConstructor pNode);
	public abstract void visitSeqForLoop(IJavaSeqForLoop pNode);
	public abstract void visitSetBind(IJavaSetBind pNode);
	public abstract void visitIntType(IJavaIntType pNode);
	public abstract void visitNotYetSpecifiedStatement(IJavaNotYetSpecifiedStatement pNode);
	public abstract void visitIdentifier(IJavaIdentifier pNode);
	public abstract void visitCallStatement(IJavaCallStatement pNode);
	public abstract void visitVectorExpression(IJavaVectorExpression pNode);
	public abstract void visitSetDifferenceExpression(IJavaSetDifferenceExpression pNode);
	public abstract void visitPatternIdentifier(IJavaPatternIdentifier pNode);
	public abstract void visitNameDesignator(IJavaNameDesignator pNode);
	public abstract void visitIndexForLoop(IJavaIndexForLoop pNode);
	public abstract void visitTextLiteral(IJavaTextLiteral pNode);
	public abstract void visitNewDesignator(IJavaNewDesignator pNode);
	public abstract void visitSymbolicLiteralExpression(IJavaSymbolicLiteralExpression pNode);
	public abstract void visitVectorType(IJavaVectorType pNode);
	public abstract void visitVectorEnumExpression(IJavaVectorEnumExpression pNode);
	public abstract void visitAccessDefinition(IJavaAccessDefinition pNode);
	public abstract void visitStringType(IJavaStringType pNode);
	public abstract void visitSetType(IJavaSetType pNode);
	public abstract void visitMapApplication(IJavaMapApplication pNode);
	public abstract void visitNewExpression(IJavaNewExpression pNode);
	public abstract void visitAtomicStatement(IJavaAtomicStatement pNode);
	public abstract void visitFieldReference(IJavaFieldReference pNode);
	public abstract void visitMapType(IJavaMapType pNode);
	public abstract void visitReturnStatement(IJavaReturnStatement pNode);
	public abstract void visitIntDivExpression(IJavaIntDivExpression pNode);
	public abstract void visitBlockStatement(IJavaBlockStatement pNode);
	public abstract void visitMapRangeExpression(IJavaMapRangeExpression pNode);
	public abstract void visitRemainderExpression(IJavaRemainderExpression pNode);
	public abstract void visitUnaryExpression(IJavaUnaryExpression pNode);
	public abstract void visitStringLiteralExpression(IJavaStringLiteralExpression pNode);
	public abstract void visitBooleanType(IJavaBooleanType pNode);
	public abstract void visitBiimplicationExpression(IJavaBiimplicationExpression pNode);
	public abstract void visitImplicationExpression(IJavaImplicationExpression pNode);
	public abstract void visitIndexesExpression(IJavaIndexesExpression pNode);
	public abstract void visitVariableType(IJavaVariableType pNode);
	public abstract void visitNumericLiteral(IJavaNumericLiteral pNode);
	public abstract void visitDistConcat(IJavaDistConcat pNode);
	public abstract void visitDomainResToExpression(IJavaDomainResToExpression pNode);
	public abstract void visitSetPattern(IJavaSetPattern pNode);
	public abstract void visitUnresolvedType(IJavaUnresolvedType pNode);
	public abstract void visitTypeBind(IJavaTypeBind pNode);
	public abstract void visitApplyExpression(IJavaApplyExpression pNode);
	public abstract void visitSetIntersectExpression(IJavaSetIntersectExpression pNode);
	public abstract void visitCallObjectStatement(IJavaCallObjectStatement pNode);
	public abstract void visitRecordExpression(IJavaRecordExpression pNode);
	public abstract void visitRecordModifier(IJavaRecordModifier pNode);
	public abstract void visitObjectDesignatorExpression(IJavaObjectDesignatorExpression pNode);
	public abstract void visitBiMap(IJavaBiMap pNode);
	public abstract void visitRealLiteral(IJavaRealLiteral pNode);
	public abstract void visitExpression(IJavaExpression pNode);
	public abstract void visitQuoteLiteral(IJavaQuoteLiteral pNode);
	public abstract void visitScope(IJavaScope pNode);
	public abstract void visitElementsExpression(IJavaElementsExpression pNode);
	public abstract void visitContinueStatement(IJavaContinueStatement pNode);
	public abstract void visitWhileLoop(IJavaWhileLoop pNode);
	public abstract void visitIsSubClassResponsibilityStatement(IJavaIsSubClassResponsibilityStatement pNode);
	public abstract void visitShortType(IJavaShortType pNode);
	public abstract void visitLongType(IJavaLongType pNode);
	public abstract void visitSetForLoop(IJavaSetForLoop pNode);
	public abstract void visitMethodDefinition(IJavaMethodDefinition pNode);
	public abstract void visitSameClassMembership(IJavaSameClassMembership pNode);
	public abstract void visitCardinalityExpression(IJavaCardinalityExpression pNode);
	public abstract void visitVoidType(IJavaVoidType pNode);
	public abstract void visitLengthExpression(IJavaLengthExpression pNode);
	public abstract void visitTupleConsExpression(IJavaTupleConsExpression pNode);
	public abstract void visitBinaryOperator(IJavaBinaryOperator pNode);
	public abstract void visitIsExpression(IJavaIsExpression pNode);
	public abstract void visitMapInverseExpression(IJavaMapInverseExpression pNode);
	public abstract void visitBooleanLiteral(IJavaBooleanLiteral pNode);
	public abstract void visitThisExpression(IJavaThisExpression pNode);
	public abstract void visitMethodBody(IJavaMethodBody pNode);
	public abstract void visitDefinition(IJavaDefinition pNode);
	public abstract void visitSubSetExpression(IJavaSubSetExpression pNode);
	public abstract void visitSetExpression(IJavaSetExpression pNode);
	public abstract void visitByteType(IJavaByteType pNode);
	public abstract void visitPowerSetExpression(IJavaPowerSetExpression pNode);
	public abstract void visitThisDesignator(IJavaThisDesignator pNode);
	public abstract void visitInterfaceDefinition(IJavaInterfaceDefinition pNode);
	public abstract void visitRecordModification(IJavaRecordModification pNode);
	public abstract void visitCharacterLiteral(IJavaCharacterLiteral pNode);
	public abstract void visitSubVectorExpression(IJavaSubVectorExpression pNode);
	public abstract void visitCompositionExpression(IJavaCompositionExpression pNode);
	public abstract void visitIfExpression(IJavaIfExpression pNode);
	public abstract void visitAssignStatement(IJavaAssignStatement pNode);
	public abstract void visitIsBasicTypeExpression(IJavaIsBasicTypeExpression pNode);
	public abstract void visitProductType(IJavaProductType pNode);
	public abstract void visitErrorStatement(IJavaErrorStatement pNode);
	public abstract void visitGenMap(IJavaGenMap pNode);
	public abstract void visitIsSubClassResponsibilityExpression(IJavaIsSubClassResponsibilityExpression pNode);
	public abstract void visitEmptyExpression(IJavaEmptyExpression pNode);
	public abstract void visitHeadExpression(IJavaHeadExpression pNode);
	public abstract void visitLiteral(IJavaLiteral pNode);
	public abstract void visitCharType(IJavaCharType pNode);
	public abstract void visitClassDefinition(IJavaClassDefinition pNode);
	public abstract void visitSetEnumExpression(IJavaSetEnumExpression pNode);
	public abstract void visitElseIfStatement(IJavaElseIfStatement pNode);
	public abstract void visitMapEnumExpression(IJavaMapEnumExpression pNode);
	public abstract void visitInSetExpression(IJavaInSetExpression pNode);
	public abstract void visitDistMergeExpression(IJavaDistMergeExpression pNode);
	public abstract void visitPlusPlusExpression(IJavaPlusPlusExpression pNode);
	public abstract void visitMapCompExpression(IJavaMapCompExpression pNode);
	public abstract void visitObjectFieldReference(IJavaObjectFieldReference pNode);
	public abstract void visitUnaryOperator(IJavaUnaryOperator pNode);
	public abstract void visitPattern(IJavaPattern pNode);
	public abstract void visitInterfaceDefinitions(IJavaInterfaceDefinitions pNode);
	public abstract void visitDomainResByExpression(IJavaDomainResByExpression pNode);
	public abstract void visitSetRangeExpression(IJavaSetRangeExpression pNode);
	public abstract void visitTokenExpression(IJavaTokenExpression pNode);
	public abstract void visitEqualsExpression(IJavaEqualsExpression pNode);
	public abstract void visitType(IJavaType pNode);
	public abstract void visitReferenceType(IJavaReferenceType pNode);
	public abstract void visitEmptyDefinition(IJavaEmptyDefinition pNode);
	public abstract void visitModulusExpression(IJavaModulusExpression pNode);
	public abstract void visitStatement(IJavaStatement pNode);
	public abstract void visitSeqCompExpression(IJavaSeqCompExpression pNode);
	public abstract void visitTokenType(IJavaTokenType pNode);
	public abstract void visitNotYetSpecifiedExpression(IJavaNotYetSpecifiedExpression pNode);
	public abstract void visitInheritanceClause(IJavaInheritanceClause pNode);
	public abstract void visitDefinitionList(IJavaDefinitionList pNode);
	public abstract void visitFloatType(IJavaFloatType pNode);
	public abstract void visitAssignmentDefinition(IJavaAssignmentDefinition pNode);
	public abstract void visitNotInSetExpression(IJavaNotInSetExpression pNode);
	public abstract void visitQuoteType(IJavaQuoteType pNode);
	public abstract void visitSetCompExpression(IJavaSetCompExpression pNode);
	public abstract void visitBinaryObjectOperator(IJavaBinaryObjectOperator pNode);
	public abstract void visitDoubleType(IJavaDoubleType pNode);
	public abstract void visitObjectDesignator(IJavaObjectDesignator pNode);
	public abstract void visitInstanceVariableDefinition(IJavaInstanceVariableDefinition pNode);
	public abstract void visitObjectApply(IJavaObjectApply pNode);
	public abstract void visitDistUnionExpression(IJavaDistUnionExpression pNode);
	public abstract void visitBinaryExpression(IJavaBinaryExpression pNode);
	public abstract void visitClassDefinitions(IJavaClassDefinitions pNode);
	public abstract void visitMapOrSequenceReference(IJavaMapOrSequenceReference pNode);
	public abstract void visitStarStarExpression(IJavaStarStarExpression pNode);
	public abstract void visitRangeResByExpression(IJavaRangeResByExpression pNode);
	public abstract void visitProperSubsetExpression(IJavaProperSubsetExpression pNode);
	public abstract void visitQuoteLiteralExpression(IJavaQuoteLiteralExpression pNode);
	public abstract void visitElseIfExpression(IJavaElseIfExpression pNode);
	public abstract void visitForLoop(IJavaForLoop pNode);
	public abstract void visitMapExpression(IJavaMapExpression pNode);
	public abstract void visitEmptyStatement(IJavaEmptyStatement pNode);
	public abstract void visitClassType(IJavaClassType pNode);
	public abstract void visitMapUnionExpression(IJavaMapUnionExpression pNode);
	public abstract void visitName(IJavaName pNode);
	public abstract void visitSetUnionExpression(IJavaSetUnionExpression pNode);
	public abstract void visitVectorConcatExpression(IJavaVectorConcatExpression pNode);
	public abstract void visitIfStatement(IJavaIfStatement pNode);
	public abstract void visitStateDesignator(IJavaStateDesignator pNode);
	public abstract void visitDistIntersectionExpression(IJavaDistIntersectionExpression pNode);
	public abstract void visitMapletExpression(IJavaMapletExpression pNode);
	public abstract void visitVectorApplication(IJavaVectorApplication pNode);
	public abstract void visitStateDesignatorName(IJavaStateDesignatorName pNode);
}
