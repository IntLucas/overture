// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

public class JavaEqualsExpression extends JavaExpression implements IJavaEqualsExpression
{
	// private member variable (lhs_expression)
	private IJavaExpression m_lhs_expression = null;

	// public operation to retrieve the embedded private field value
	public IJavaExpression getLhsExpression()
	{
		return m_lhs_expression;
	}

	// public operation to set the embedded private field value
	public void setLhsExpression(IJavaExpression p_lhs_expression)
	{
		// consistency check (field must be non null!)
		assert(p_lhs_expression != null);

		// instantiate the member variable
		m_lhs_expression = p_lhs_expression;

		// set the parent of the parameter passed
		p_lhs_expression.setParent(this);
	}

	// private member variable (operator)
	private IJavaBinaryObjectOperator m_operator = null;

	// public operation to retrieve the embedded private field value
	public IJavaBinaryObjectOperator getOperator()
	{
		return m_operator;
	}

	// public operation to set the embedded private field value
	public void setOperator(IJavaBinaryObjectOperator p_operator)
	{
		// consistency check (field must be non null!)
		assert(p_operator != null);

		// instantiate the member variable
		m_operator = p_operator;

		// set the parent of the parameter passed
		p_operator.setParent(this);
	}

	// private member variable (rhs_expression)
	private IJavaExpression m_rhs_expression = null;

	// public operation to retrieve the embedded private field value
	public IJavaExpression getRhsExpression()
	{
		return m_rhs_expression;
	}

	// public operation to set the embedded private field value
	public void setRhsExpression(IJavaExpression p_rhs_expression)
	{
		// consistency check (field must be non null!)
		assert(p_rhs_expression != null);

		// instantiate the member variable
		m_rhs_expression = p_rhs_expression;

		// set the parent of the parameter passed
		p_rhs_expression.setParent(this);
	}

	// default constructor
	public JavaEqualsExpression()
	{
		super();
		m_lhs_expression = null;
		m_operator = null;
		m_rhs_expression = null;
	}

	// auxiliary constructor
	public JavaEqualsExpression(
		IJavaExpression p_lhs_expression,
		IJavaBinaryObjectOperator p_operator,
		IJavaExpression p_rhs_expression
	) {
		super();
		setLhsExpression(p_lhs_expression);
		setOperator(p_operator);
		setRhsExpression(p_rhs_expression);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitEqualsExpression(this); }

	// the identity function
	public String identify() { return "JavaEqualsExpression"; }
}
