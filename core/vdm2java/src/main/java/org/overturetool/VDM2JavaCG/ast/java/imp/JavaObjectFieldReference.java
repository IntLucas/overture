// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

public class JavaObjectFieldReference extends JavaObjectDesignator implements IJavaObjectFieldReference
{
	// private member variable (object_designator)
	private IJavaObjectDesignator m_object_designator = null;

	// public operation to retrieve the embedded private field value
	public IJavaObjectDesignator getObjectDesignator()
	{
		return m_object_designator;
	}

	// public operation to set the embedded private field value
	public void setObjectDesignator(IJavaObjectDesignator p_object_designator)
	{
		// consistency check (field must be non null!)
		assert(p_object_designator != null);

		// instantiate the member variable
		m_object_designator = p_object_designator;

		// set the parent of the parameter passed
		p_object_designator.setParent(this);
	}

	// private member variable (name)
	private IJavaName m_name = null;

	// public operation to retrieve the embedded private field value
	public IJavaName getName()
	{
		return m_name;
	}

	// public operation to set the embedded private field value
	public void setName(IJavaName p_name)
	{
		// consistency check (field must be non null!)
		assert(p_name != null);

		// instantiate the member variable
		m_name = p_name;

		// set the parent of the parameter passed
		p_name.setParent(this);
	}

	// default constructor
	public JavaObjectFieldReference()
	{
		super();
		m_object_designator = null;
		m_name = null;
	}

	// auxiliary constructor
	public JavaObjectFieldReference(
		IJavaObjectDesignator p_object_designator,
		IJavaName p_name
	) {
		super();
		setObjectDesignator(p_object_designator);
		setName(p_name);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitObjectFieldReference(this); }

	// the identity function
	public String identify() { return "JavaObjectFieldReference"; }
}
