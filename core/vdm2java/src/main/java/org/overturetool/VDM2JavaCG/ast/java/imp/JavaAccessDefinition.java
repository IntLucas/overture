// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

public class JavaAccessDefinition extends JavaNode implements IJavaAccessDefinition
{
	// private member variable (static_accsess)
	private Boolean m_static_accsess = new Boolean(false);

	// public operation to retrieve the embedded private field value
	public Boolean getStaticAccsess()
	{
		return m_static_accsess;
	}

	// public operation to set the embedded private field value
	public void setStaticAccsess(Boolean p_static_accsess)
	{
		// consistency check (field must be non null!)
		assert(p_static_accsess != null);

		// instantiate the member variable
		m_static_accsess = p_static_accsess;
	}

	// private member variable (scope)
	private IJavaScope m_scope = null;

	// public operation to retrieve the embedded private field value
	public IJavaScope getScope()
	{
		return m_scope;
	}

	// public operation to set the embedded private field value
	public void setScope(IJavaScope p_scope)
	{
		// consistency check (field must be non null!)
		assert(p_scope != null);

		// instantiate the member variable
		m_scope = p_scope;

		// set the parent of the parameter passed
		p_scope.setParent(this);
	}

	// default constructor
	public JavaAccessDefinition()
	{
		super();
		m_static_accsess = null;
		m_scope = null;
	}

	// auxiliary constructor
	public JavaAccessDefinition(
		Boolean p_static_accsess,
		IJavaScope p_scope
	) {
		super();
		setStaticAccsess(p_static_accsess);
		setScope(p_scope);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitAccessDefinition(this); }

	// the identity function
	public String identify() { return "JavaAccessDefinition"; }
}
