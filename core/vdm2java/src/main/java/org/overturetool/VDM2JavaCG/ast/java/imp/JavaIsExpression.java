// this file is automatically generated by treegen. do not modify!

package org.overturetool.VDM2JavaCG.ast.java.imp;

// import the abstract tree interfaces
import org.overturetool.VDM2JavaCG.ast.java.itf.*;

public class JavaIsExpression extends JavaExpression implements IJavaIsExpression
{
	// private member variable (ClassName)
	private IJavaExpression m_ClassName = null;

	// public operation to retrieve the embedded private field value
	public IJavaExpression getClassName()
	{
		return m_ClassName;
	}

	// public operation to set the embedded private field value
	public void setClassName(IJavaExpression p_ClassName)
	{
		// consistency check (field must be non null!)
		assert(p_ClassName != null);

		// instantiate the member variable
		m_ClassName = p_ClassName;

		// set the parent of the parameter passed
		p_ClassName.setParent(this);
	}

	// private member variable (InstanceName)
	private IJavaExpression m_InstanceName = null;

	// public operation to retrieve the embedded private field value
	public IJavaExpression getInstanceName()
	{
		return m_InstanceName;
	}

	// public operation to set the embedded private field value
	public void setInstanceName(IJavaExpression p_InstanceName)
	{
		// consistency check (field must be non null!)
		assert(p_InstanceName != null);

		// instantiate the member variable
		m_InstanceName = p_InstanceName;

		// set the parent of the parameter passed
		p_InstanceName.setParent(this);
	}

	// default constructor
	public JavaIsExpression()
	{
		super();
		m_ClassName = null;
		m_InstanceName = null;
	}

	// auxiliary constructor
	public JavaIsExpression(
		IJavaExpression p_ClassName,
		IJavaExpression p_InstanceName
	) {
		super();
		setClassName(p_ClassName);
		setInstanceName(p_InstanceName);
	}

	// visitor support
	public void accept(IJavaVisitor pVisitor) { pVisitor.visitIsExpression(this); }

	// the identity function
	public String identify() { return "JavaIsExpression"; }
}
