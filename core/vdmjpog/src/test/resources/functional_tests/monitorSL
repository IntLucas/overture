-- TCErrors: WARNING:5000:18,3 WARNING:5000:24,3 WARNING:5000:32,3 WARNING:5000:38,3 WARNING:5000:46,3 WARNING:5000:58,3 WARNING:5000:61,3 PROOFOBLIGATION: UmlzaW5nLDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAxIGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: UmlzaW5nLDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICA1IGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: T3ZlckxpbWl0LDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAxIGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: T3ZlckxpbWl0LDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAobm90ICh0ZW1wKDEpID4gNDAwKSA9PgogICAgMiBpbiBzZXQgaW5kcyB0ZW1wKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: T3ZlckxpbWl0LDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAobm90ICh0ZW1wKDEpID4gNDAwKSA9PgogICAgKG5vdCAodGVtcCgyKSA+IDQwMCkgPT4KICAgICAgMyBpbiBzZXQgaW5kcyB0ZW1wKSkpCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: T3ZlckxpbWl0LDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAobm90ICh0ZW1wKDEpID4gNDAwKSA9PgogICAgKG5vdCAodGVtcCgyKSA+IDQwMCkgPT4KICAgICAgKG5vdCAodGVtcCgzKSA+IDQwMCkgPT4KICAgICAgICA0IGluIHNldCBpbmRzIHRlbXApKSkpCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: T3ZlckxpbWl0LDAsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAobm90ICh0ZW1wKDEpID4gNDAwKSA9PgogICAgKG5vdCAodGVtcCgyKSA+IDQwMCkgPT4KICAgICAgKG5vdCAodGVtcCgzKSA+IDQwMCkgPT4KICAgICAgICAobm90ICh0ZW1wKDQpID4gNDAwKSA9PgogICAgICAgICAgNSBpbiBzZXQgaW5kcyB0ZW1wKSkpKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: T3ZlckxpbWl0MiwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKGZvcmFsbCBpIGluIHNldCAoaW5kcyB0ZW1wKSAmCiAgICBpIGluIHNldCBpbmRzIHRlbXApKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: Q29udE92ZXJMaW1pdCwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgMSBpbiBzZXQgaW5kcyB0ZW1wKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: Q29udE92ZXJMaW1pdCwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKCh0ZW1wKDEpID4gNDAwKSA9PgogICAgMiBpbiBzZXQgaW5kcyB0ZW1wKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: Q29udE92ZXJMaW1pdCwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKCh0ZW1wKDEpID4gNDAwKSA9PgogICAgKCh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAzIGluIHNldCBpbmRzIHRlbXApKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: Q29udE92ZXJMaW1pdCwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKCh0ZW1wKDEpID4gNDAwKSA9PgogICAgKCh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAoKHRlbXAoMykgPiA0MDApID0+CiAgICAgICAgNCBpbiBzZXQgaW5kcyB0ZW1wKSkpKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: Q29udE92ZXJMaW1pdCwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKCh0ZW1wKDEpID4gNDAwKSA9PgogICAgKCh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAoKHRlbXAoMykgPiA0MDApID0+CiAgICAgICAgKCh0ZW1wKDQpID4gNDAwKSA9PgogICAgICAgICAgNSBpbiBzZXQgaW5kcyB0ZW1wKSkpKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: Q29udE92ZXJMaW1pdDIsMCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChmb3JhbGwgaSBpbiBzZXQgKGluZHMgdGVtcCkgJgogICAgaSBpbiBzZXQgaW5kcyB0ZW1wKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs PROOFOBLIGATION: U2FmZSwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgMyBpbiBzZXQgaW5kcyB0ZW1wKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: U2FmZSwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgNSBpbiBzZXQgaW5kcyB0ZW1wKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: UmFpc2VBbGFybSwwLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgZXhpc3RzIGFsYXJtOmJvb2wgJiBwb3N0X1JhaXNlQWxhcm0odGVtcCwgYWxhcm0pKQosZnVuY3Rpb24gc2F0aXNmaWFiaWxpdHksbnVsbCxVbnByb3ZlZCw= PROOFOBLIGATION: TWl4UXVhbnQsMCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChmb3JhbGwgbWluIGluIHNldCB7MSwgLi4uICw1fSAmCiAgICAoZm9yYWxsIGkgaW4gc2V0IHsxLCAuLi4gLDV9ICYKICAgICAgaSBpbiBzZXQgaW5kcyB0ZW1wKSkpCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkLA== PROOFOBLIGATION: TWl4UXVhbnQsMCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChmb3JhbGwgbWluIGluIHNldCB7MSwgLi4uICw1fSAmCiAgICAoZm9yYWxsIGkgaW4gc2V0IHsxLCAuLi4gLDV9ICYKICAgICAgbWluIGluIHNldCBpbmRzIHRlbXApKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWQs


--monitor.vdmsl

-- A temperature monitor
-- For Chapter 4 (Logic)

types

  TempRead = seq of int
  inv temp == len temp = 5

functions

-- the last reading in a sample is greater than the first

  Rising: TempRead -> bool
  Rising(temp) ==
   temp(1) < temp(5);

-- there is a reading in excess of 400 degrees

  OverLimit: TempRead -> bool
  OverLimit(temp) ==
    temp(1) > 400 or temp(2) > 400 or 
    temp(3) > 400 or temp(4) > 400 or 
    temp(5) > 400;

-- alternative formulation using a quantified expression

  OverLimit2: TempRead -> bool
  OverLimit2(temp) ==
    exists i in set inds temp & temp(i) > 400;

-- all readings in a sample exceed 400 degrees

  ContOverLimit: TempRead -> bool
  ContOverLimit(temp) ==
    temp(1) > 400 and temp(2) > 400 and 
    temp(3) > 400 and temp(4) > 400 and 
    temp(5) > 400;

-- alternative formulation using a quantified expression

  ContOverLimit2: TempRead -> bool
  ContOverLimit2(temp) ==
    forall i in set inds temp & temp(i) > 400;

-- detecting whether a reactor can be considered safe

  Safe: TempRead -> bool
  Safe(temp) ==
    temp(3) > 400 => temp(5) < 400;

-- detecting whether an alarm should be raised

  RaiseAlarm(temp: TempRead) alarm : bool
  post not Safe(temp) <=> alarm;

  MixQuant: TempRead -> bool
  MixQuant(temp) ==
    exists min in set {1,...,5} &
       forall i in set {1,...,5} &
          i <> min =>
          temp(i) > temp(min)