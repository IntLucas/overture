-- TCErrors: WARNING:5000:18,3 WARNING:5000:24,3 WARNING:5000:32,3 WARNING:5000:38,3 WARNING:5000:46,3 WARNING:5000:58,3 WARNING:5000:61,3 PROOFOBLIGATION: fDIwIFJpc2luZywoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIDEgaW4gc2V0IGluZHMgdGVtcCkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDIwIFJpc2luZywoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIDUgaW4gc2V0IGluZHMgdGVtcCkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDI2IE92ZXJMaW1pdCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIDEgaW4gc2V0IGluZHMgdGVtcCkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDI2IE92ZXJMaW1pdCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChub3QgKHRlbXAoMSkgPiA0MDApID0+CiAgICAyIGluIHNldCBpbmRzIHRlbXApKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDI3IE92ZXJMaW1pdCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChub3QgKHRlbXAoMSkgPiA0MDApID0+CiAgICAobm90ICh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAzIGluIHNldCBpbmRzIHRlbXApKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDI3IE92ZXJMaW1pdCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChub3QgKHRlbXAoMSkgPiA0MDApID0+CiAgICAobm90ICh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAobm90ICh0ZW1wKDMpID4gNDAwKSA9PgogICAgICAgIDQgaW4gc2V0IGluZHMgdGVtcCkpKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDI4IE92ZXJMaW1pdCwoZm9yYWxsIHRlbXA6VGVtcFJlYWQgJgogIChub3QgKHRlbXAoMSkgPiA0MDApID0+CiAgICAobm90ICh0ZW1wKDIpID4gNDAwKSA9PgogICAgICAobm90ICh0ZW1wKDMpID4gNDAwKSA9PgogICAgICAgIChub3QgKHRlbXAoNCkgPiA0MDApID0+CiAgICAgICAgICA1IGluIHNldCBpbmRzIHRlbXApKSkpKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM0IE92ZXJMaW1pdDIsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAoZm9yYWxsIGkgaW4gc2V0IChpbmRzIHRlbXApICYKICAgIGkgaW4gc2V0IGluZHMgdGVtcCkpCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDQwIENvbnRPdmVyTGltaXQsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAxIGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDQwIENvbnRPdmVyTGltaXQsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAoKHRlbXAoMSkgPiA0MDApID0+CiAgICAyIGluIHNldCBpbmRzIHRlbXApKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDQxIENvbnRPdmVyTGltaXQsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAoKHRlbXAoMSkgPiA0MDApID0+CiAgICAoKHRlbXAoMikgPiA0MDApID0+CiAgICAgIDMgaW4gc2V0IGluZHMgdGVtcCkpKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDQxIENvbnRPdmVyTGltaXQsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAoKHRlbXAoMSkgPiA0MDApID0+CiAgICAoKHRlbXAoMikgPiA0MDApID0+CiAgICAgICgodGVtcCgzKSA+IDQwMCkgPT4KICAgICAgICA0IGluIHNldCBpbmRzIHRlbXApKSkpCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDQyIENvbnRPdmVyTGltaXQsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAoKHRlbXAoMSkgPiA0MDApID0+CiAgICAoKHRlbXAoMikgPiA0MDApID0+CiAgICAgICgodGVtcCgzKSA+IDQwMCkgPT4KICAgICAgICAoKHRlbXAoNCkgPiA0MDApID0+CiAgICAgICAgICA1IGluIHNldCBpbmRzIHRlbXApKSkpKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDQ4IENvbnRPdmVyTGltaXQyLChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKGZvcmFsbCBpIGluIHNldCAoaW5kcyB0ZW1wKSAmCiAgICBpIGluIHNldCBpbmRzIHRlbXApKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDU0IFNhZmUsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICAzIGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDU0IFNhZmUsKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICA1IGluIHNldCBpbmRzIHRlbXApCixzZXF1ZW5jZSBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDU4IFJhaXNlQWxhcm0sKGZvcmFsbCB0ZW1wOlRlbXBSZWFkICYKICBleGlzdHMgYWxhcm06Ym9vbCAmIHBvc3RfUmFpc2VBbGFybSh0ZW1wLCBhbGFybSkpCixmdW5jdGlvbiBzYXRpc2ZpYWJpbGl0eSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDY2IE1peFF1YW50LChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKGZvcmFsbCBtaW4gaW4gc2V0IHsxLCAuLi4gLDV9ICYKICAgIChmb3JhbGwgaSBpbiBzZXQgezEsIC4uLiAsNX0gJgogICAgICBpIGluIHNldCBpbmRzIHRlbXApKSkKLHNlcXVlbmNlIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDY2IE1peFF1YW50LChmb3JhbGwgdGVtcDpUZW1wUmVhZCAmCiAgKGZvcmFsbCBtaW4gaW4gc2V0IHsxLCAuLi4gLDV9ICYKICAgIChmb3JhbGwgaSBpbiBzZXQgezEsIC4uLiAsNX0gJgogICAgICBtaW4gaW4gc2V0IGluZHMgdGVtcCkpKQosc2VxdWVuY2UgYXBwbHksbnVsbCxVbnByb3ZlZHw=


--monitor.vdmsl

-- A temperature monitor
-- For Chapter 4 (Logic)

types

  TempRead = seq of int
  inv temp == len temp = 5

functions

-- the last reading in a sample is greater than the first

  Rising: TempRead -> bool
  Rising(temp) ==
   temp(1) < temp(5);

-- there is a reading in excess of 400 degrees

  OverLimit: TempRead -> bool
  OverLimit(temp) ==
    temp(1) > 400 or temp(2) > 400 or 
    temp(3) > 400 or temp(4) > 400 or 
    temp(5) > 400;

-- alternative formulation using a quantified expression

  OverLimit2: TempRead -> bool
  OverLimit2(temp) ==
    exists i in set inds temp & temp(i) > 400;

-- all readings in a sample exceed 400 degrees

  ContOverLimit: TempRead -> bool
  ContOverLimit(temp) ==
    temp(1) > 400 and temp(2) > 400 and 
    temp(3) > 400 and temp(4) > 400 and 
    temp(5) > 400;

-- alternative formulation using a quantified expression

  ContOverLimit2: TempRead -> bool
  ContOverLimit2(temp) ==
    forall i in set inds temp & temp(i) > 400;

-- detecting whether a reactor can be considered safe

  Safe: TempRead -> bool
  Safe(temp) ==
    temp(3) > 400 => temp(5) < 400;

-- detecting whether an alarm should be raised

  RaiseAlarm(temp: TempRead) alarm : bool
  post not Safe(temp) <=> alarm;

  MixQuant: TempRead -> bool
  MixQuant(temp) ==
    exists min in set {1,...,5} &
       forall i in set {1,...,5} &
          i <> min =>
          temp(i) > temp(min)