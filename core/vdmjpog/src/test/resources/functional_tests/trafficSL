-- TCErrors: WARNING:5008:74,30 WARNING:5008:74,23 WARNING:5008:78,26 WARNING:5008:78,29 WARNING:5008:84,28 WARNING:5008:84,21 WARNING:5008:91,30 WARNING:5008:91,23 WARNING:5008:96,12 WARNING:5000:39,3 WARNING:5000:46,3 WARNING:5000:73,3 WARNING:5000:83,3 WARNING:5000:90,3 PROOFOBLIGATION: fDI0IGxpZ2h0cyxmb3JhbGwgbTEsIG0yIGluIHNldCB7e3AxIHwtPiA8UmVkPn0sIHtwMiB8LT4gPFJlZD59LCB7cDMgfC0+IDxHcmVlbj59LCB7cDQgfC0+IDxHcmVlbj59fSAmCiAgZm9yYWxsIGQzIGluIHNldCBkb20gbTEsIGQ0IGluIHNldCBkb20gbTIgJgogICAgZDMgPSBkNCA9PiBtMShkMykgPSBtMihkNCkKLG1hcCBzZXF1ZW5jZSBjb21wYXRpYmxlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDMwIGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDEsIHAzKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDMxIGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDEsIHA0KSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDMyIGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDIsIHAzKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDMzIGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDIsIHA0KSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM0IGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDMsIHAxKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM1IGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDQsIHAxKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM2IGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDMsIHAyKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM3IGNvbmZsaWN0cyxpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QocDQsIHAyKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDQwIGtlcm5lbCxpbnZfS2VybmVsKG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cykpCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDY0IEtlcm5lbCwoZm9yYWxsIG1rX0tlcm5lbChscywgY3MpOktlcm5lbCAmCiAgKGZvcmFsbCBjIGluIHNldCBjcyAmCiAgICBpbnZfQ29uZmxpY3QobWtfQ29uZmxpY3QoKGMucGF0aDIpLCAoYy5wYXRoMSkpKSkpCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDY3IEtlcm5lbCwoZm9yYWxsIG1rX0tlcm5lbChscywgY3MpOktlcm5lbCAmCiAgKGZvcmFsbCBjIGluIHNldCBjcyAmCiAgICAoKG1rX0NvbmZsaWN0KChjLnBhdGgyKSwgKGMucGF0aDEpKSBpbiBzZXQgY3MpID0+CiAgICAgICgoKGMucGF0aDEpIGluIHNldCAoZG9tIGxzKSkgPT4KICAgICAgICAoKChjLnBhdGgyKSBpbiBzZXQgKGRvbSBscykpID0+CiAgICAgICAgICAoYy5wYXRoMSkgaW4gc2V0IGRvbSBscykpKSkpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDY3IEtlcm5lbCwoZm9yYWxsIG1rX0tlcm5lbChscywgY3MpOktlcm5lbCAmCiAgKGZvcmFsbCBjIGluIHNldCBjcyAmCiAgICAoKG1rX0NvbmZsaWN0KChjLnBhdGgyKSwgKGMucGF0aDEpKSBpbiBzZXQgY3MpID0+CiAgICAgICgoKGMucGF0aDEpIGluIHNldCAoZG9tIGxzKSkgPT4KICAgICAgICAoKChjLnBhdGgyKSBpbiBzZXQgKGRvbSBscykpID0+CiAgICAgICAgICAobm90IChscygoYy5wYXRoMSkpID0gPFJlZD4pID0+CiAgICAgICAgICAgIChjLnBhdGgyKSBpbiBzZXQgZG9tIGxzKSkpKSkpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDc3IFRvR3JlZW4sKGZvcmFsbCBwOlBhdGgsIG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cyk6S2VybmVsICYKICAoKHAgaW4gc2V0IChkb20gbGlnaHRzKSkgPT4KICAgIHAgaW4gc2V0IGRvbSBsaWdodHMpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDc5IFRvR3JlZW4sKGZvcmFsbCBwOlBhdGgsIG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cyk6S2VybmVsICYKICAoKHAgaW4gc2V0IChkb20gbGlnaHRzKSkgPT4KICAgICgobGlnaHRzKHApID0gPFJlZD4pID0+CiAgICAgIChmb3JhbGwgbWtfQ29uZmxpY3QocDEsIHAyKSBpbiBzZXQgY29uZmxpY3RzICYKICAgICAgICBwMiBpbiBzZXQgZG9tIGxpZ2h0cykpKSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDc1IFRvR3JlZW4sKGZvcmFsbCBwOlBhdGgsIG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cyk6S2VybmVsICYgKChwIGluIHNldCAoZG9tIGxpZ2h0cykpIGFuZCAoKGxpZ2h0cyhwKSA9IDxSZWQ+KSBhbmQgKGZvcmFsbCBta19Db25mbGljdChwMSwgcDIpIGluIHNldCBjb25mbGljdHMgJiAoKHAgPSBwMSkgPT4gKGxpZ2h0cyhwMikgPSA8UmVkPikpKSkpID0+CiAgaW52X0tlcm5lbChta19LZXJuZWwoQ2hnTGlnaHQobGlnaHRzLCBwLCA8R3JlZW4+KSwgY29uZmxpY3RzKSkpCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDg2IFRvUmVkLChmb3JhbGwgcDpQYXRoLCBta19LZXJuZWwobGlnaHRzLCBjb25mbGljdHMpOktlcm5lbCAmCiAgKChwIGluIHNldCAoZG9tIGxpZ2h0cykpID0+CiAgICBwIGluIHNldCBkb20gbGlnaHRzKSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDg1IFRvUmVkLChmb3JhbGwgcDpQYXRoLCBta19LZXJuZWwobGlnaHRzLCBjb25mbGljdHMpOktlcm5lbCAmICgocCBpbiBzZXQgKGRvbSBsaWdodHMpKSBhbmQgKGxpZ2h0cyhwKSA9IDxBbWJlcj4pKSA9PgogIGludl9LZXJuZWwobWtfS2VybmVsKENoZ0xpZ2h0KGxpZ2h0cywgcCwgPFJlZD4pLCBjb25mbGljdHMpKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDkzIFRvQW1iZXIsKGZvcmFsbCBwOlBhdGgsIG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cyk6S2VybmVsICYKICAoKHAgaW4gc2V0IChkb20gbGlnaHRzKSkgPT4KICAgIHAgaW4gc2V0IGRvbSBsaWdodHMpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDkyIFRvQW1iZXIsKGZvcmFsbCBwOlBhdGgsIG1rX0tlcm5lbChsaWdodHMsIGNvbmZsaWN0cyk6S2VybmVsICYgKChwIGluIHNldCAoZG9tIGxpZ2h0cykpIGFuZCAobGlnaHRzKHApID0gPEdyZWVuPikpID0+CiAgaW52X0tlcm5lbChta19LZXJuZWwoQ2hnTGlnaHQobGlnaHRzLCBwLCA8QW1iZXI+KSwgY29uZmxpY3RzKSkpCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8


--traffic.vdmsl

-- Traffic light control kernel
-- For Chapter 5 (Basic Elements)
-- First Version: Without timing constraints

values

-- The following value definitions are used to construct a
-- representation of the junction shown in Figure 5.2

  p1 : Path = mk_token("A1North");

  p2 : Path = mk_token("A1South");

  p3 : Path = mk_token("A66East");

  p4 : Path = mk_token("A66West");

  lights : map Path to Light
         = {p1 |-> <Red>,
            p2 |-> <Red>,
            p3 |-> <Green>,
            p4 |-> <Green>};

  conflicts : set of Conflict
            = {mk_Conflict(p1,p3),
               mk_Conflict(p1,p4),
               mk_Conflict(p2,p3),
               mk_Conflict(p2,p4),
               mk_Conflict(p3,p1),
               mk_Conflict(p4,p1),
               mk_Conflict(p3,p2),
               mk_Conflict(p4,p2)};

  kernel : Kernel 
         = mk_Kernel(lights,conflicts)

types

  Light = <Red> | <Amber> | <Green>;

  Time = real
  inv t == t >= 0;

  Path = token;
  
  Conflict :: path1: Path
              path2: Path
  inv mk_Conflict(path1,path2) == path1 <> path2;

-- the kernel data structure has two components representing 
-- 1) a mapping with the current status of the lights for each 
-- direction and 2) an unordered collection of conflicts between 
-- paths.

  Kernel :: lights    : map Path to Light
            conflicts : set of Conflict
  inv mk_Kernel(ls,cs) ==
        forall c in set cs & 
              mk_Conflict(c.path2,c.path1) in set cs and
              c.path1 in set dom ls and 
	      c.path2 in set dom ls and 
              (ls(c.path1) = <Red> or ls(c.path2) = <Red>)

functions

-- changing the light to green for a given path

  ToGreen: Path * Kernel -> Kernel
  ToGreen(p,mk_Kernel(lights,conflicts)) ==
    mk_Kernel(ChgLight(lights,p,<Green>),conflicts)
  pre p in set dom lights and
      lights(p) = <Red> and
      forall mk_Conflict(p1,p2) in set conflicts &
             (p = p1 => lights(p2) = <Red>);

-- changing the light to red for a given path

  ToRed: Path * Kernel -> Kernel
  ToRed(p,mk_Kernel(lights,conflicts)) ==
    mk_Kernel(ChgLight(lights,p,<Red>),conflicts)
  pre p in set dom lights and lights(p) = <Amber>;

-- changing the light to amber for a given path

  ToAmber: Path * Kernel -> Kernel
  ToAmber(p,mk_Kernel(lights,conflicts)) ==
    mk_Kernel(ChgLight(lights,p,<Amber>),conflicts)
  pre p in set dom lights and lights(p) = <Green>;

  ChgLight: (map Path to Light) * Path * Light -> (map Path to Light)
  ChgLight(lights,p,colour) ==
    lights ++ {p |-> colour}