-- TCErrors: WARNING:5008:10,5 WARNING:5008:27,10 WARNING:5008:32,11 WARNING:5008:42,9 WARNING:5008:46,12 WARNING:5008:51,6 WARNING:5012:50,1 WARNING:5008:60,7 WARNING:5008:65,11 WARNING:5008:70,13 WARNING:5008:76,15 WARNING:5000:21,1 WARNING:5000:59,1 WARNING:5000:64,1 WARNING:5000:69,1 WARNING:5000:75,1 PROOFOBLIGATION: fDEyIEJPTSwoZm9yYWxsIGJvbTptYXAgKFBuKSB0byAoc2V0IG9mIChQbikpICYKICAoKGZvcmFsbCBwcyBpbiBzZXQgKHJuZyBib20pICYgKHBzIHN1YnNldCAoZG9tIGJvbSkpKSA9PgogICAgKGZvcmFsbCBwIGluIHNldCAoZG9tIGJvbSkgJgogICAgICBwcmVfUGFydHMocCwgYm9tKSkpKQosZnVuY3Rpb24gYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDE4IGJvbSxmb3JhbGwgbTEsIG0yIGluIHNldCB7ezEgfC0+IHsyLCA0fX0sIHsyIHwtPiB7MywgNCwgNX19LCB7MyB8LT4gezUsIDZ9fSwgezQgfC0+IHs2fX0sIHs1IHwtPiB7NH19LCB7NiB8LT4ge319fSAmCiAgZm9yYWxsIGQzIGluIHNldCBkb20gbTEsIGQ0IGluIHNldCBkb20gbTIgJgogICAgZDMgPSBkNCA9PiBtMShkMykgPSBtMihkNCkKLG1hcCBzZXF1ZW5jZSBjb21wYXRpYmxlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDIxIGN5Y2xlLGZvcmFsbCBtMSwgbTIgaW4gc2V0IHt7MSB8LT4gezIsIDR9fSwgezIgfC0+IHszLCA0LCA1fX0sIHszIHwtPiB7NSwgNn19LCB7NCB8LT4gezZ9fSwgezUgfC0+IHs0fX0sIHs2IHwtPiB7MX19fSAmCiAgZm9yYWxsIGQzIGluIHNldCBkb20gbTEsIGQ0IGluIHNldCBkb20gbTIgJgogICAgZDMgPSBkNCA9PiBtMShkMykgPSBtMihkNCkKLG1hcCBzZXF1ZW5jZSBjb21wYXRpYmxlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDI4IFBhcnRzLChmb3JhbGwgcDpQbiwgYm9tOm1hcCAoUG4pIHRvIChzZXQgb2YgKFBuKSkgJiAocCBpbiBzZXQgKGRvbSBib20pKSA9PgogIHByZV9UcmFuc0Nsb3MoYm9tLCBib20ocCkpKQosZnVuY3Rpb24gYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDI4IFBhcnRzLChmb3JhbGwgcDpQbiwgYm9tOm1hcCAoUG4pIHRvIChzZXQgb2YgKFBuKSkgJiAocCBpbiBzZXQgKGRvbSBib20pKSA9PgogIHAgaW4gc2V0IGRvbSBib20pCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDMzIFRyYW5zQ2xvcywoZm9yYWxsIGJvbTptYXAgKFBuKSB0byAoc2V0IG9mIChQbikpLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChmb3JhbGwgcCBpbiBzZXQgcHMgJgogICAgcCBpbiBzZXQgZG9tIGJvbSkpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM1IFRyYW5zQ2xvcywgbmV3cHMsKGZvcmFsbCBib206bWFwIChQbikgdG8gKHNldCBvZiAoUG4pKSwgcHM6c2V0IG9mIChQbikgJiAocHMgc3Vic2V0IChkb20gYm9tKSkgPT4KICAobm90IChmb3JhbGwgcCBpbiBzZXQgcHMgJiAoYm9tKHApIHN1YnNldCBwcykpID0+CiAgICAoZm9yYWxsIHAgaW4gc2V0IHBzICYKICAgICAgcCBpbiBzZXQgZG9tIGJvbSkpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDM3IFRyYW5zQ2xvcywoZm9yYWxsIGJvbTptYXAgKFBuKSB0byAoc2V0IG9mIChQbikpLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChub3QgKGZvcmFsbCBwIGluIHNldCBwcyAmIChib20ocCkgc3Vic2V0IHBzKSkgPT4KICAgIChsZXQgbmV3cHM6c2V0IG9mIChQbikgPSAoZHVuaW9uIHtib20ocCkgfCBbcCBpbiBzZXQgcHNdfSkgaW4KICAgICAgcHJlX1RyYW5zQ2xvcyhib20sIChwcyB1bmlvbiBuZXdwcykpKSkpCixmdW5jdGlvbiBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDMxIFRyYW5zQ2xvcywoZm9yYWxsIGJvbTptYXAgKFBuKSB0byAoc2V0IG9mIChQbikpLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChub3QgKGZvcmFsbCBwIGluIHNldCBwcyAmIChib20ocCkgc3Vic2V0IHBzKSkgPT4KICAgIChsZXQgbmV3cHM6c2V0IG9mIChQbikgPSAoZHVuaW9uIHtib20ocCkgfCBbcCBpbiBzZXQgcHNdfSkgaW4KICAgICAgSW5jckFjYyhib20sIHBzKSA+IEluY3JBY2MoYm9tLCAocHMgdW5pb24gbmV3cHMpKSkpKQoscmVjdXJzaXZlIGZ1bmN0aW9uLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDQxIEluY3JBY2MsKGZvcmFsbCBib206bWFwIChQbikgdG8gKHNldCBvZiAoUG4pKSwgcG5zOnNldCBvZiAoUG4pICYKICAoKGNhcmQgKGRvbSBib20pKSAtIChjYXJkIHBucykpID49IDApCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDQ3IEV4cGxvZGUsKGZvcmFsbCBwOlBuLCBib206Qk9NICYgKHAgaW4gc2V0IChkb20gYm9tKSkgPT4KICBwIGluIHNldCBkb20gYm9tKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDQ3IEV4cGxvZGUsKGZvcmFsbCBwOlBuLCBib206Qk9NICYgKHAgaW4gc2V0IChkb20gYm9tKSkgPT4KICBwcmVfRXhwcyhib20sIGJvbShwKSkpCixmdW5jdGlvbiBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDQ3IEV4cGxvZGUsKGZvcmFsbCBwOlBuLCBib206Qk9NICYgKHAgaW4gc2V0IChkb20gYm9tKSkgPT4KICBwIGluIHNldCBkb20gYm9tKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDU0IEV4cHMsKGZvcmFsbCBib206Qk9NLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChub3QgKHBzID0ge30pID0+CiAgICBleGlzdHMgcDEgaW4gc2V0IHBzKSkKLGxldCBiZSBzdCBleGlzdGVuY2UsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDU2IEV4cHMsKGZvcmFsbCBib206Qk9NLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChub3QgKHBzID0ge30pID0+CiAgICAoZm9yYWxsIHAxIGluIHNldCBwcyAmCiAgICAgIHByZV9FeHBsb2RlKHAxLCBib20pKSkpCixmdW5jdGlvbiBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDU2IEV4cHMsKGZvcmFsbCBib206Qk9NLCBwczpzZXQgb2YgKFBuKSAmIChwcyBzdWJzZXQgKGRvbSBib20pKSA9PgogIChub3QgKHBzID0ge30pID0+CiAgICAoZm9yYWxsIHAxIGluIHNldCBwcyAmCiAgICAgIHByZV9FeHBzKGJvbSwgKHBzIFwge3AxfSkpKSkpCixmdW5jdGlvbiBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDYxIEVudGVyLChmb3JhbGwgYm9tOkJPTSwgcDpQbiwgcHM6c2V0IG9mIChQbikgJiAoKHAgbm90IGluIHNldCAoZG9tIGJvbSkpIGFuZCAocHMgc3Vic2V0IChkb20gYm9tKSkpID0+CiAgZm9yYWxsIGxkb20xIGluIHNldCBkb20gYm9tLCByZG9tMiBpbiBzZXQgZG9tIHtwIHwtPiBwc30gJgogIGxkb20xID0gcmRvbTIgPT4gYm9tKGxkb20xKSA9IHtwIHwtPiBwc30ocmRvbTIpKQosbWFwIGNvbXBhdGlibGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDU5IEVudGVyLChmb3JhbGwgYm9tOkJPTSwgcDpQbiwgcHM6c2V0IG9mIChQbikgJiAoKHAgbm90IGluIHNldCAoZG9tIGJvbSkpIGFuZCAocHMgc3Vic2V0IChkb20gYm9tKSkpID0+CiAgaW52X0JPTSgoYm9tIG11bmlvbiB7cCB8LT4gcHN9KSkgYW5kIChpc18oKGJvbSBtdW5pb24ge3AgfC0+IHBzfSksIG1hcCAoUG4pIHRvIChzZXQgb2YgKFBuKSkpKSkKLHN1YnR5cGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDczIEFkZCwoZm9yYWxsIHAxOlBuLCBwMjpQbiwgYm9tOkJPTSAmCiAgKChwMSBpbiBzZXQgKGRvbSBib20pKSA9PgogICAgKChwMiBpbiBzZXQgKGRvbSBib20pKSA9PgogICAgICBwMSBpbiBzZXQgZG9tIGJvbSkpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDczIEFkZCwoZm9yYWxsIHAxOlBuLCBwMjpQbiwgYm9tOkJPTSAmCiAgKChwMSBpbiBzZXQgKGRvbSBib20pKSA9PgogICAgKChwMiBpbiBzZXQgKGRvbSBib20pKSA9PgogICAgICAoKHAyIG5vdCBpbiBzZXQgYm9tKHAxKSkgPT4KICAgICAgICBwcmVfRXhwbG9kZShwMiwgYm9tKSkpKSkKLGZ1bmN0aW9uIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDcxIEFkZCwoZm9yYWxsIHAxOlBuLCBwMjpQbiwgYm9tOkJPTSAmICgocDEgaW4gc2V0IChkb20gYm9tKSkgYW5kICgocDIgaW4gc2V0IChkb20gYm9tKSkgYW5kICgocDIgbm90IGluIHNldCBib20ocDEpKSBhbmQgKHAxIG5vdCBpbiBzZXQgRXhwbG9kZShwMiwgYm9tKSkpKSkgPT4KICBwMSBpbiBzZXQgZG9tIGJvbSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDY5IEFkZCwoZm9yYWxsIHAxOlBuLCBwMjpQbiwgYm9tOkJPTSAmICgocDEgaW4gc2V0IChkb20gYm9tKSkgYW5kICgocDIgaW4gc2V0IChkb20gYm9tKSkgYW5kICgocDIgbm90IGluIHNldCBib20ocDEpKSBhbmQgKHAxIG5vdCBpbiBzZXQgRXhwbG9kZShwMiwgYm9tKSkpKSkgPT4KICBpbnZfQk9NKChib20gKysge3AxIHwtPiAoYm9tKHAxKSB1bmlvbiB7cDJ9KX0pKSBhbmQgKGlzXygoYm9tICsrIHtwMSB8LT4gKGJvbShwMSkgdW5pb24ge3AyfSl9KSwgbWFwIChQbikgdG8gKHNldCBvZiAoUG4pKSkpKQosc3VidHlwZSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDc5IEVyYXNlLChmb3JhbGwgcDE6UG4sIHAyOlBuLCBib206Qk9NICYKICAoKHAxIGluIHNldCAoZG9tIGJvbSkpID0+CiAgICAoKHAyIGluIHNldCAoZG9tIGJvbSkpID0+CiAgICAgIHAxIGluIHNldCBkb20gYm9tKSkpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDc3IEVyYXNlLChmb3JhbGwgcDE6UG4sIHAyOlBuLCBib206Qk9NICYgKChwMSBpbiBzZXQgKGRvbSBib20pKSBhbmQgKChwMiBpbiBzZXQgKGRvbSBib20pKSBhbmQgKHAyIGluIHNldCBib20ocDEpKSkpID0+CiAgcDEgaW4gc2V0IGRvbSBib20pCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDc1IEVyYXNlLChmb3JhbGwgcDE6UG4sIHAyOlBuLCBib206Qk9NICYgKChwMSBpbiBzZXQgKGRvbSBib20pKSBhbmQgKChwMiBpbiBzZXQgKGRvbSBib20pKSBhbmQgKHAyIGluIHNldCBib20ocDEpKSkpID0+CiAgaW52X0JPTSgoYm9tICsrIHtwMSB8LT4gKGJvbShwMSkgXCB7cDJ9KX0pKSBhbmQgKGlzXygoYm9tICsrIHtwMSB8LT4gKGJvbShwMSkgXCB7cDJ9KX0pLCBtYXAgKFBuKSB0byAoc2V0IG9mIChQbikpKSkpCixzdWJ0eXBlLG51bGwsVW5wcm92ZWR8


--bom.vdmsl

\begin{vdm_al}
types

BOM = map Pn to set of Pn
inv bom == 
  (forall ps in set rng bom & ps subset dom bom) and
  (forall p in set dom bom & p not in set Parts(p, bom));
    
Pn = nat

values

bom = {1 |-> {2,4}, 2 |-> {3,4,5}, 3 |-> {5,6}, 4 |-> {6}, 
       5 |-> {4}, 6 |-> {}};
    
cycle = {1 |-> {2,4}, 2 |-> {3,4,5}, 3 |-> {5,6}, 4 |-> {6}, 
         5 |-> {4}, 6 |-> {1}};

functions

Parts: Pn * map Pn to set of Pn -> set of Pn
Parts(p, bom) ==
  TransClos(bom, bom(p))
pre p in set dom bom;

TransClos: (map Pn to set of Pn) * set of Pn -> set of Pn
TransClos(bom, ps) ==
  if forall p in set ps & bom(p) subset ps
  then ps
  else let newps = dunion { bom(p) | p in set ps} 
       in
         TransClos(bom, ps union newps)            
pre ps subset dom bom
measure IncrAcc;

IncrAcc: (map Pn to set of Pn) * set of Pn -> nat
IncrAcc(bom,pns) ==
  card dom bom - card pns;
  
Explode: Pn * BOM -> set of Pn
Explode(p, bom) ==
  bom(p) union Exps(bom, bom(p))
pre p in set dom bom;

Exps: BOM * set of Pn -> set of Pn
Exps(bom, ps) ==
  if ps = {}
  then {}
  else let p1 in set ps 
       in 
         Explode(p1, bom) union Exps(bom, ps \ {p1})
pre ps subset dom bom;

Enter: BOM * Pn * set of Pn -> BOM
Enter(bom, p, ps) ==
  bom munion { p |-> ps }
pre (p not in set dom bom) and (ps subset dom bom);

Delete: Pn * BOM -> BOM
Delete(p, bom) ==
  {p} <-: bom
pre (p in set dom bom) and (inv_BOM({p} <-: bom));

Add: Pn * Pn * BOM -> BOM
Add(p1, p2, bom) == 
  bom ++ {p1 |-> bom(p1) union {p2} }
pre (p1 in set dom bom) and (p2 in set dom bom) and 
    (p2 not in set bom(p1)) and (p1 not in set Explode(p2,bom));

Erase: Pn * Pn * BOM -> BOM
Erase(p1, p2, bom) ==
  bom ++ { p1 |-> bom(p1) \ {p2} }
pre (p1 in set dom bom) and (p2 in set dom bom) and
    (p2 in set bom(p1))
\end{vdm_al}