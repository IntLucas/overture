//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Sat 19-Apr-2008 by the VDM++ to JAVA Code Generator
// (v8.1 - Fri 14-Mar-2008 10:25:17)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.astgenerator;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES
import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports


@SuppressWarnings("all")
public class AstTypeName extends AstType {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=name KEEP=NO
  private String name = null;
// ***** VDMTOOLS END Name=name


// ***** VDMTOOLS START Name=AstTypeName KEEP=NO
  public AstTypeName () throws CGException {}
// ***** VDMTOOLS END Name=AstTypeName


// ***** VDMTOOLS START Name=AstTypeName KEEP=NO
  public AstTypeName (final String pname) throws CGException {
    name = UTIL.ConvertToString(UTIL.clone(pname));
  }
// ***** VDMTOOLS END Name=AstTypeName


// ***** VDMTOOLS START Name=getName KEEP=NO
  public String getName () throws CGException {
    return stripUnderscore(name);
  }
// ***** VDMTOOLS END Name=getName


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final AstVisitor pv) throws CGException {
    pv.visit((AstTypeName) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=isBoolType KEEP=NO
  public Boolean isBoolType () throws CGException {
    return new Boolean(UTIL.equals(name, new String("bool")));
  }
// ***** VDMTOOLS END Name=isBoolType


// ***** VDMTOOLS START Name=isCharType KEEP=NO
  public Boolean isCharType () throws CGException {
    return new Boolean(UTIL.equals(name, new String("char")));
  }
// ***** VDMTOOLS END Name=isCharType


// ***** VDMTOOLS START Name=isNatType KEEP=NO
  public Boolean isNatType () throws CGException {
    return new Boolean(UTIL.equals(name, new String("nat")));
  }
// ***** VDMTOOLS END Name=isNatType


// ***** VDMTOOLS START Name=isRealType KEEP=NO
  public Boolean isRealType () throws CGException {
    return new Boolean(UTIL.equals(name, new String("real")));
  }
// ***** VDMTOOLS END Name=isRealType


// ***** VDMTOOLS START Name=isTypeName KEEP=NO
  public Boolean isTypeName () throws CGException {
    return new Boolean(!isBasicType().booleanValue());
  }
// ***** VDMTOOLS END Name=isTypeName

}
;
