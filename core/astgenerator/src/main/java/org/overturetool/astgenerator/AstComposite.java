//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Sat 19-Apr-2008 by the VDM++ to JAVA Code Generator
// (v8.1 - Fri 14-Mar-2008 10:25:17)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.astgenerator;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES
import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports


@SuppressWarnings("all")
public class AstComposite extends AstCore {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=name KEEP=NO
  private String name = null;
// ***** VDMTOOLS END Name=name

// ***** VDMTOOLS START Name=fields KEEP=NO
  private Vector fields = null;
// ***** VDMTOOLS END Name=fields

// ***** VDMTOOLS START Name=adts KEEP=NO
  private Boolean adts = null;
// ***** VDMTOOLS END Name=adts


// ***** VDMTOOLS START Name=AstComposite KEEP=NO
  public AstComposite () throws CGException {}
// ***** VDMTOOLS END Name=AstComposite


// ***** VDMTOOLS START Name=AstComposite KEEP=NO
  public AstComposite (final String pname, final Vector pfields) throws CGException {

    name = UTIL.ConvertToString(UTIL.clone(pname));
    fields = (Vector) UTIL.ConvertToList(UTIL.clone(pfields));
    adts = (Boolean) UTIL.clone(new Boolean(false));
  }
// ***** VDMTOOLS END Name=AstComposite


// ***** VDMTOOLS START Name=getName KEEP=NO
  public String getName () throws CGException {
    return stripUnderscore(name);
  }
// ***** VDMTOOLS END Name=getName


// ***** VDMTOOLS START Name=getFields KEEP=NO
  public Vector getFields () throws CGException {
    return fields;
  }
// ***** VDMTOOLS END Name=getFields


// ***** VDMTOOLS START Name=setAdts KEEP=NO
  public void setAdts (final Boolean padts) throws CGException {
    adts = (Boolean) UTIL.clone(padts);
  }
// ***** VDMTOOLS END Name=setAdts


// ***** VDMTOOLS START Name=hasAdts KEEP=NO
  public Boolean hasAdts () throws CGException {
    return adts;
  }
// ***** VDMTOOLS END Name=hasAdts


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final AstVisitor pv) throws CGException {
    pv.visit((AstComposite) this);
  }
// ***** VDMTOOLS END Name=accept

}
;
