//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Sat 19-Apr-2008 by the VDM++ to JAVA Code Generator
// (v8.1 - Fri 14-Mar-2008 10:25:17)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.astgenerator;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES
import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports


@SuppressWarnings("all")
public class AstShorthand extends AstCore {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=lhs KEEP=NO
  private String lhs = null;
// ***** VDMTOOLS END Name=lhs

// ***** VDMTOOLS START Name=rhs KEEP=NO
  private AstType rhs = null;
// ***** VDMTOOLS END Name=rhs

// ***** VDMTOOLS START Name=isqt KEEP=NO
  private Boolean isqt = null;
// ***** VDMTOOLS END Name=isqt

// ***** VDMTOOLS START Name=istn KEEP=NO
  private Boolean istn = null;
// ***** VDMTOOLS END Name=istn


// ***** VDMTOOLS START Name=AstShorthand KEEP=NO
  public AstShorthand () throws CGException {}
// ***** VDMTOOLS END Name=AstShorthand


// ***** VDMTOOLS START Name=AstShorthand KEEP=NO
  public AstShorthand (final String plhs, final AstType prhs) throws CGException {

    lhs = UTIL.ConvertToString(UTIL.clone(plhs));
    rhs = (AstType) UTIL.clone(prhs);
    isqt = (Boolean) UTIL.clone(new Boolean(false));
    istn = (Boolean) UTIL.clone(new Boolean(false));
  }
// ***** VDMTOOLS END Name=AstShorthand


// ***** VDMTOOLS START Name=getName KEEP=NO
  public String getName () throws CGException {
    return stripUnderscore(lhs);
  }
// ***** VDMTOOLS END Name=getName


// ***** VDMTOOLS START Name=getType KEEP=NO
  public AstType getType () throws CGException {
    return (AstType) rhs;
  }
// ***** VDMTOOLS END Name=getType


// ***** VDMTOOLS START Name=setType KEEP=NO
  public void setType (final AstType ptp) throws CGException {
    rhs = (AstType) UTIL.clone(ptp);
  }
// ***** VDMTOOLS END Name=setType


// ***** VDMTOOLS START Name=setQuotedTypeUnion KEEP=NO
  public void setQuotedTypeUnion () throws CGException {
    isqt = (Boolean) UTIL.clone(new Boolean(true));
  }
// ***** VDMTOOLS END Name=setQuotedTypeUnion


// ***** VDMTOOLS START Name=isQuotedTypeUnion KEEP=NO
  public Boolean isQuotedTypeUnion () throws CGException {
    return isqt;
  }
// ***** VDMTOOLS END Name=isQuotedTypeUnion


// ***** VDMTOOLS START Name=setTypeNameUnion KEEP=NO
  public void setTypeNameUnion () throws CGException {
    istn = (Boolean) UTIL.clone(new Boolean(true));
  }
// ***** VDMTOOLS END Name=setTypeNameUnion


// ***** VDMTOOLS START Name=isTypeNameUnion KEEP=NO
  public Boolean isTypeNameUnion () throws CGException {
    return istn;
  }
// ***** VDMTOOLS END Name=isTypeNameUnion


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final AstVisitor pv) throws CGException {
    pv.visit((AstShorthand) this);
  }
// ***** VDMTOOLS END Name=accept

}
;
