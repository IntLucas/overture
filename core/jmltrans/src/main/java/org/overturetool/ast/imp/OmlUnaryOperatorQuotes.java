//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 11-Jun-2008 by the VDM++ to JAVA Code Generator
// (v8.0.1b - Mon 28-Jan-2008 10:17:36)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
@SuppressWarnings(all) 
// ***** VDMTOOLS END Name=imports



public class OmlUnaryOperatorQuotes implements IOmlUnaryOperatorQuotes {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp




















// ***** VDMTOOLS START Name=qmap KEEP=NO
  private static HashMap qmap = new HashMap();
// ***** VDMTOOLS END Name=qmap


// ***** VDMTOOLS START Name=static KEEP=NO
  static {
    try {

      OmlUnaryOperatorQuotes.qmap = new HashMap();
      OmlUnaryOperatorQuotes.qmap.put(IQABS, new String("abs"));
      OmlUnaryOperatorQuotes.qmap.put(IQINVERSE, new String("inverse"));
      OmlUnaryOperatorQuotes.qmap.put(IQHD, new String("hd"));
      OmlUnaryOperatorQuotes.qmap.put(IQELEMS, new String("elems"));
      OmlUnaryOperatorQuotes.qmap.put(IQINDS, new String("inds"));
      OmlUnaryOperatorQuotes.qmap.put(IQTL, new String("tl"));
      OmlUnaryOperatorQuotes.qmap.put(IQCARD, new String("card"));
      OmlUnaryOperatorQuotes.qmap.put(IQDUNION, new String("dunion"));
      OmlUnaryOperatorQuotes.qmap.put(IQPOWER, new String("power"));
      OmlUnaryOperatorQuotes.qmap.put(IQLEN, new String("len"));
      OmlUnaryOperatorQuotes.qmap.put(IQPLUS, new String("+"));
      OmlUnaryOperatorQuotes.qmap.put(IQDOM, new String("dom"));
      OmlUnaryOperatorQuotes.qmap.put(IQDMERGE, new String("merge"));
      OmlUnaryOperatorQuotes.qmap.put(IQDINTER, new String("dinter"));
      OmlUnaryOperatorQuotes.qmap.put(IQNOT, new String("not"));
      OmlUnaryOperatorQuotes.qmap.put(IQMINUS, new String("-"));
      OmlUnaryOperatorQuotes.qmap.put(IQRNG, new String("rng"));
      OmlUnaryOperatorQuotes.qmap.put(IQFLOOR, new String("floor"));
      OmlUnaryOperatorQuotes.qmap.put(IQDCONC, new String("conc"));
    }
    catch (Throwable e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=static


// ***** VDMTOOLS START Name=OmlUnaryOperatorQuotes KEEP=NO
  public OmlUnaryOperatorQuotes () throws CGException {}
// ***** VDMTOOLS END Name=OmlUnaryOperatorQuotes


// ***** VDMTOOLS START Name=getQuoteName KEEP=NO
  static public String getQuoteName (final Long pid) throws CGException {
    return UTIL.ConvertToString(qmap.get(pid));
  }
// ***** VDMTOOLS END Name=getQuoteName


// ***** VDMTOOLS START Name=validQuote KEEP=NO
  static public Boolean validQuote (final Long pid) throws CGException {

    Boolean rexpr_2 = null;
    rexpr_2 = new Boolean(qmap.containsKey(pid));
    return rexpr_2;
  }
// ***** VDMTOOLS END Name=validQuote

}
;
