class A
types
	public R :: a:nat b:nat
	
functions
	public f: seq of char -> char
	f(-^[a]^-^[a]^-) == a;
	
	public g: seq of R -> nat
	g([mk_R(-,a), mk_R(a,-)]) == a;
	
	public sf: seq of set of char -> char
	sf([- union {a}]^[- union {a}]) == a;
	
	public e1: seq of char -> seq of char
	e1(a ^ []) == a;

	public e2: seq of char -> seq of seq of char
	e2(a ^ b) == [a, b];

	public e3: set of nat -> set of nat
	e3(a union {}) == a;
	
	public e4: set of nat -> seq of set of nat
	e4(a union b) == [a, b];
	
end A