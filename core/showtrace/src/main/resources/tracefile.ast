%prefix Oml;
%directory "d:\projects\ShowTraceParser";
%package org.overturetool.tracefile.ast;
%top TraceFile;

--
-- GLOBAL DEFINITIONS
--

TraceFile ::
  Trace : seq of TraceEvent;

TraceEvent =
  ThreadSwapIn |
  ThreadSwapOut |
  DelayedThreadSwapIn |
  OpRequest |
  OpActivate |
  OpCompleted |
  ThreadCreate |
  ThreadKill |
  MessageRequest |
  MessageActivate |
  MessageCompleted |
  ReplyRequest |
  InstVarChange |
  CPUdecl |
  BUSdecl |
  DeployObj; 

--
-- THREADS
--
  
ThreadSwapIn ::
  -- id of the thread
  id : nat
  -- id of the object
  objref : [nat]
  -- name of the class
  clnm : [seq of char]
  -- id of the CPU
  cpunm : nat
  -- swap-in overhead (time units)
  overhead : nat
  -- observation time
  obstime  : nat;

DelayedThreadSwapIn ::
  -- id of the thread
  id : nat
  -- id of the object
  objref: [nat]
  -- name of the class
  clnm : [seq of char]
  -- id of the CPU
  cpunm : nat
  -- delay (time units)
  delay : nat
  -- swap-in overhead (time units)
  overhead : nat
  -- observation obstime
  obstime : nat;

ThreadSwapOut ::
  -- id of the thread
  id : nat
  -- id of the object
  objref: [nat]
  -- name of the class
  clnm : [seq of char]
  -- id of the CPU
  cpunm : nat
  -- swap-out overhead (time units)
  overhead : nat
  -- observation time
  obstime : nat;

ThreadCreate ::
  -- id of the new thread (unique, start at 1)
  id : nat
  -- true if periodic thread is elaborated
  period : bool
  -- id of the object
  objref : [nat]
  -- name of the class
  clnm : [seq of char]
  -- id of the CPU
  cpunm : nat
  -- observation time
  obstime : nat;

ThreadKill ::
  -- id of the thread (shall not be reused)
  id : nat
  -- id of the CPU
  cpunm : nat
  -- observation time
  obstime : nat;

--
-- OPERATIONS
--

OpRequest ::
  -- id of the caller thread - where the call was requested
  id : nat
  -- (mangled) name of the operation being called
  opname : seq of char
  -- id of the object being called (nil if static call)
  objref : [nat]
  -- name of the class being called
  clnm : seq of char
  -- id of the CPU at which the caller thread is running
  cpunm : nat
  -- true if the operation is asynchronoushronous
  asynchronous : bool
  -- the arguments passed to the operation (if any)
  args : [seq of char]
  -- observation time
  obstime : nat;

OpActivate ::
  -- id of the callee thread - where the call is executed
  id : nat
  -- (mangled) name of the operation being called
  opname : seq of char
  -- id of the object being called (nil if static call)
  objref : [nat]
  -- name of the class being called
  clnm : seq of char
  -- id of the CPU at which the callee thread is running
  cpunm : nat
  -- true if the operation is asynchronoushronous
  asynchronous : bool
  -- observation time
  obstime : nat;

OpCompleted ::
  -- id of the callee thread - where the call is completed
  id : nat
  -- (mangled) name of the operation being called
  opname : seq of char
  -- id of the object being called (nil if static call)
  objref : [nat]
  -- name of the class being called
  clnm : seq of char
  -- id of the CPU at which the callee thread is running
  cpunm : nat
  -- true if the operation is asynchronoushronous
  asynchronous : bool
  -- return values of the operation (if any)
  res : [seq of char]
  -- observation time
  obstime : nat;

--
-- MESSAGES
--

MessageRequest ::
  -- id of the BUS used to communicate this message
  busid : nat
  -- id of the source CPU
  fromcpu : nat
  -- id of the destination CPU
  tocpu : nat
  -- id of the message (unique, start at 0)
  msgid : nat
  -- id of the caller thread on the source CPU
  callthr : nat
  -- (mangled) name of the operation being called on the destination CPU
  opname : seq of char
  -- id of the object being called on the destination CPU (nil if static call)
  objref : [nat]
  -- size of the message including protocol overhead
  size : nat
  -- observation time
  obstime : nat;

ReplyRequest ::	
  -- id of the BUS used to communicate this message
  busid : nat
  -- id of the source CPU
  fromcpu : nat
  -- id of the destination CPU
  tocpu : nat
  -- id of the message (unique, start at 0)
  msgid : nat
  -- id of the message this is a response to
  origmsgid : nat
  -- id of the thread that initiated the call (on the destination CPU)
  callthr : nat
  -- id of the thread that performed the call (on the source CPU)
  calleethr : nat
  -- size of the message including protocol overhead
  size : nat
  -- observation time
  obstime : nat;

MessageActivate ::
  -- id of the message
  msgid : nat
  -- observation time
  obstime : nat;

MessageCompleted ::
  -- id of the message
  msgid : nat
  -- observation time
  obstime : nat;

--
-- INSTANCE VARIABLES
--

InstVarChange ::
  -- name of the instance variable
  instnm : seq of char
  -- value of the instance variable
  val : seq of char
  -- object reference this instance variable belongs to
  objref : nat
  -- observation time
  obstime : nat;
  
--
-- ARCHITECTURE
--

-- implicit special case (always available):
-- CPUdecl -> id: 0 expl: false name: "vCPU0"
CPUdecl ::
  -- id of the CPU (unique, starts at 1)
  id : nat
  -- false if this is a virtual CPU
  expl : bool
  -- the name of the system class
  sys : seq of char
  -- mnemomic name of the CPU
  name : seq of char;

-- implicit special case (always available):
-- BUSdecl -> id: 0 name: "vBUS" topo: { <all cpuids> } 
BUSdecl ::
  -- id of the CPU (unique, starts at 1)
  id : nat
  -- mnemomic name of the CPU
  name : seq of char
  -- set of CPU identifiers connected to this bus
  topo : set of nat;

DeployObj ::
  -- id of the object
  objref : nat
  -- id of the CPU on which this object is deployed
  cpunm : nat
  -- the name of the class this object belongs to
  clnm : seq of char
  -- observation time
  obstime : nat
