Integrity property #1 :
In function DoSort InsertSorted, file: testinput/dosort.vpp l. 35 c. 16: non-empty sequence
--------------------------------------------------------------------------------------------
(forall i : int, l : seq of int &
not (true = (l = [])) =>
 true = (i <= hd (l)) =>
 l <> [])

Integrity property #2 :
In function DoSort InsertSorted, file: testinput/dosort.vpp l. 36 c. 26: non-empty sequence
--------------------------------------------------------------------------------------------
(forall i : int, l : seq of int &
not (true = (l = [])) =>
 not (true = (i <= hd (l))) =>
 l <> [])

Integrity property #3 :
In function DoSort InsertSorted, file: testinput/dosort.vpp l. 36 c. 49: non-empty sequence
--------------------------------------------------------------------------------------------
(forall i : int, l : seq of int &
not (true = (l = [])) =>
 not (true = (i <= hd (l))) =>
 l <> [])

Integrity property #1 :
In function DoSort DoSorting, file: testinput/dosort.vpp l. 28 c. 34: non-empty sequence
-----------------------------------------------------------------------------------------
(forall l : seq of int &
not (l = []) =>
 l <> [])

Integrity property #2 :
In function DoSort DoSorting, file: testinput/dosort.vpp l. 29 c. 26: non-empty sequence
-----------------------------------------------------------------------------------------
(forall l : seq of int &
not (l = []) =>
 (let sorted = DoSorting(tl (l))
in
    l <> []))
