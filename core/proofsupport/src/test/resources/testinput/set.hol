Define `inv_Element (inv_param:num)  = T`;
BasicProvers.export_rewrites(["inv_Element_def"]);
BasicProvers.export_rewrites(["inv_Element_def"]);
Define `inv_Set (inv_param:(num set))  = T`;
BasicProvers.export_rewrites(["inv_Set_def"]);
BasicProvers.export_rewrites(["inv_Set_def"]);
Define `inSet (inSet_parameter_1:(num set)) (inSet_parameter_2:num)  = (let s = inSet_parameter_1 and e = inSet_parameter_2 in (e  IN s ))`;
BasicProvers.export_rewrites(["inSet_def"]);
Define `subSet (subSet_parameter_1:(num set)) (subSet_parameter_2:(num set))  = (let s1 = subSet_parameter_1 and s2 = subSet_parameter_2 in ((s1  INTER s2 )  = s1 ))`;
BasicProvers.export_rewrites(["subSet_def"]);