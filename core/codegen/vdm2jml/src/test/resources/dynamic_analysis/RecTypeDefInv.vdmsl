module Entry

exports all
definitions

types

Rec ::
  x : int
  y : int
inv mk_Rec(x,y) == x > 0 and y > 0;

operations

Run : () ==> ?
Run () ==
(
  recInvOk();
  recInvBreak();
  return 0;
);

recInvOk : () ==> ()
recInvOk () ==
let - = mk_Rec(1,2)
in
  skip;

recInvBreak : () ==> ()
recInvBreak () ==
let - = mk_Rec(1,-2)
in
  skip;

end Entry
