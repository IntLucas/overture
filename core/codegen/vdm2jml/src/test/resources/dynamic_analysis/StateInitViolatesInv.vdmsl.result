/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:6: JML static initialization may not be correct: invariant is false
public class Entry {
       ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:10: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:6: 
    //@ public static invariant St != null ==> inv_St(St);
                      ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Main.java:7: JML invariant is false on entering method Entry.Run() from Main.main(java.lang.String[])
			Entry.Run();
			         ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:10: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Main.java:7: 
    //@ public static invariant St != null ==> inv_St(St);
                      ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:11: JML invariant is false on leaving method Entry.Run()
    public static Object Run() {
                         ^
/home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:10: Associated declaration: /home/peter/dev/ovtrepo/core/codegen/vdm2jml/target/jml/code/StateInitViolatesInv/Entry.java:11: 
    //@ public static invariant St != null ==> inv_St(St);
                      ^