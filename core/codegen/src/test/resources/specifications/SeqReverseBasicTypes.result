import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    private static final VDMSeq as = SeqUtil.seq();
    private static final VDMSeq bs = SeqUtil.seq(1L, 2L);
    private static final VDMSeq cs = SeqUtil.seq(1.2, 3.3);
    private static final VDMSeq ds = SeqUtil.seq(true, false);
    private static final VDMSeq es = SeqUtil.seq('a', 'b');
    private static final VDMSeq fs = SeqUtil.seq(SeqUtil.seq('a'),
            SeqUtil.seq('b'));

    public A() {
    }

    public void op() {
        VDMSeq as_ = SeqUtil.reverse(Utils.clone(as));

        VDMSeq bs_ = SeqUtil.reverse(Utils.clone(bs));

        VDMSeq cs_ = SeqUtil.reverse(Utils.clone(cs));

        VDMSeq ds_ = SeqUtil.reverse(Utils.clone(ds));

        VDMSeq es_ = SeqUtil.reverse(Utils.clone(es));

        VDMSeq fs_ = SeqUtil.reverse(Utils.clone(fs));

        //Skip;
    }

    public String toString() {
        return "A{" + "as = " + Utils.toString(as) + ", bs = " +
        Utils.toString(bs) + ", cs = " + Utils.toString(cs) + ", ds = " +
        Utils.toString(ds) + ", es = " + Utils.toString(es) + ", fs = " +
        Utils.toString(fs) + "}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
