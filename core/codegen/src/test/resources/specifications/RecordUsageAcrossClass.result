import utils.*;


public class A {
    private static final B.RecB x = new B.RecB(1L);
    private static final RecA y = new RecA(new B.RecB(2L));

    public static class RecA implements Record {
        public B.RecB b;

        public RecA(B.RecB _b) {
            b = (_b != null) ? _b.clone() : null;
        }

        public boolean equals(Object obj) {
            if (!(obj instanceof RecA)) {
                return false;
            }

            RecA other = ((RecA) obj);

            return b.equals(other.b);
        }

        public int hashCode() {
            return Utils.hashCode(b);
        }

        public RecA clone() {
            return new RecA(b);
        }
    }
}

import utils.*;


public class B {
    public static class RecB implements Record {
        public long b;

        public RecB(long _b) {
            b = _b;
        }

        public boolean equals(Object obj) {
            if (!(obj instanceof RecB)) {
                return false;
            }

            RecB other = ((RecB) obj);

            return b == other.b;
        }

        public int hashCode() {
            return Utils.hashCode(b);
        }

        public RecB clone() {
            return new RecB(b);
        }
    }
}