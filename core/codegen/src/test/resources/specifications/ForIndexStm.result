import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    public A() {
    }

    public void op() {
        long toVar_1 = 10L;
        long byVar_1 = 5L;

        for (Long i = 1L; (byVar_1 < 0) ? (i >= toVar_1) : (i <= toVar_1);
                i += byVar_1) {
            //Skip;
        }

        long toVar_2 = -1L;
        long byVar_2 = -2L;

        for (Long j = 10L; (byVar_2 < 0) ? (j >= toVar_2) : (j <= toVar_2);
                j += byVar_2) {
            //Skip;
        }

        long toVar_3 = 1L;
        long byVar_3 = 1L;

        for (Long i = 1L; (byVar_3 < 0) ? (i >= toVar_3) : (i <= toVar_3);
                i += byVar_3) {
            //Skip;
        }

        long toVar_4 = 0L;
        long byVar_4 = 1L;

        for (Long i = 1L; (byVar_4 < 0) ? (i >= toVar_4) : (i <= toVar_4);
                i += byVar_4) {
            //Skip;
        }
    }

    public String toString() {
        return "A{}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
