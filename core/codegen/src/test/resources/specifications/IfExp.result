import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    public static final Number x = 1L + (Utils.equals(2L, 3L) ? 4L : (5L + 6L));
    public static final Number y = Utils.equals(2L, 3L) ? 4L
                                                        : (Utils.equals(5L, 6L)
        ? 7L : (Utils.equals(8L, 9L) ? 10L : 11L));

    public A() {
    }

    public String toString() {
        return "A{" + "x = " + Utils.toString(x) + ", y = " +
        Utils.toString(y) + "}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
