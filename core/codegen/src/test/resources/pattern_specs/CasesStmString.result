import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static VDMSeq casesString(final VDMSeq e) {
        VDMSeq stringPattern_1 = Utils.clone(e);
        Boolean success_1 = Utils.equals(stringPattern_1, SeqUtil.seq('a', 'a'));

        if (!(success_1)) {
            VDMSeq stringPattern_2 = Utils.clone(e);
            success_1 = Utils.equals(stringPattern_2, SeqUtil.seq('b', 'b'));

            if (success_1) {
                return SeqUtil.seq('s', 'e', 'c', 'o', 'n', 'd');
            } else {
                return SeqUtil.seq('t', 'h', 'i', 'r', 'd');
            }
        } else {
            return SeqUtil.seq('f', 'i', 'r', 's', 't');
        }
    }

    public static Object Run() {
        return SeqUtil.seq(casesString(SeqUtil.seq('a', 'a')),
            casesString(SeqUtil.seq('b', 'b')),
            casesString(SeqUtil.seq('c', 'c')));
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
