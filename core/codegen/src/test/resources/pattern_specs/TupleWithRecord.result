import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    public A() {
    }

    public static Number recPatternFun() {
        Tuple tuplePattern_1 = Tuple.mk_(1L,
                new Rec(Tuple.mk_(2L, new Rec(Tuple.mk_(3L, null)))));
        Boolean success_1 = tuplePattern_1.size().longValue() == 2L;
        Number a = null;
        Number b = null;
        Number c = null;

        if (success_1) {
            a = ((Number) tuplePattern_1.get(0));

            Rec recordPattern_1 = ((Rec) tuplePattern_1.get(1)).clone();

            Tuple tuplePattern_2 = recordPattern_1.t.clone();
            success_1 = tuplePattern_2.size().longValue() == 2L;

            if (success_1) {
                b = ((Number) tuplePattern_2.get(0));

                Rec recordPattern_2 = ((Rec) tuplePattern_2.get(1)).clone();

                Tuple tuplePattern_3 = recordPattern_2.t.clone();
                success_1 = tuplePattern_3.size().longValue() == 2L;

                if (success_1) {
                    c = ((Number) tuplePattern_3.get(0));

                    Object nullPattern_1 = null;
                    success_1 = nullPattern_1 == null;
                }
            }
        }

        if (!(success_1)) {
            throw new RuntimeException("Tuple pattern match failed");
        }

        return a.longValue() + b.longValue() + c.longValue();
    }

    public static class Rec implements Record {
        public Tuple t;

        public Rec(final Tuple _t) {
            t = (_t != null) ? _t.clone() : null;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof Rec)) {
                return false;
            }

            Rec other = ((Rec) obj);

            return t.equals(other.t);
        }

        public int hashCode() {
            return Utils.hashCode(t);
        }

        public Rec clone() {
            return new Rec(t);
        }

        public String toString() {
            return Utils.recordToString(this, t);
        }
    }
}

##########
import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Object Run() {
        return A.recPatternFun();
    }
}

##########
