import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    private static final String a = "abc";

    public Entry() {
    }

    public static Object Run() {
        return a + s() + f();
    }

    public static String s() {
        return "def";
    }

    public static String f() {
        return new String(new char[] { "ghi".charAt(Utils.index(1L)) }) +
        new String(new char[] { a.charAt(Utils.index(1L)) }) +
        new String(new char[] { s().charAt(Utils.index(1L)) });
    }

    public String toString() {
        return "Entry{" + "a = " + Utils.toString(a) + "}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
