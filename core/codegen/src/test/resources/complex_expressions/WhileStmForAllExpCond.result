import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Object Run() {
        VDMSet s = SetUtil.set(2L, 4L, 6L);
        Boolean whileCond1 = true;

        while (whileCond1) {
            Boolean forAllExpResult_1 = true;
            VDMSet set_1 = Utils.clone(s);

            for (Iterator iterator_1 = set_1.iterator();
                    iterator_1.hasNext() && forAllExpResult_1;) {
                Number x = ((Number) iterator_1.next());
                forAllExpResult_1 = Utils.equals((x.longValue() -
                        (2L * Math.round(Math.floor(x.longValue() / 2L)))), 0L);
            }

            whileCond1 = forAllExpResult_1;

            if (!(whileCond1)) {
                break;
            }

            s = SetUtil.union(Utils.clone(s), SetUtil.set(3L));
        }

        return Utils.clone(s);
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
