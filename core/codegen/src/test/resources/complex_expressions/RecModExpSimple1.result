import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Rec Run() {
        Rec r = new Rec(5L, true);
        Rec recModifierExp_1 = Utils.clone(r);

        recModifierExp_1.x = 6L;
        recModifierExp_1.b = false;
        r = Utils.clone(recModifierExp_1);

        return Utils.clone(r);
    }

    public String toString() {
        return "Entry{}";
    }

    public static class Rec implements Record {
        public Number x;
        public Boolean b;

        public Rec(final Number _x, final Boolean _b) {
            x = _x;
            b = _b;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof Rec)) {
                return false;
            }

            Rec other = ((Rec) obj);

            return (Utils.equals(x.longValue(), other.x.longValue())) &&
            (Utils.equals(b, other.b));
        }

        public int hashCode() {
            return Utils.hashCode(x, b);
        }

        public Rec clone() {
            return new Rec(x, b);
        }

        public String toString() {
            return Utils.recordToString(this, x, b);
        }
    }
}

##########

package quotes;

public interface Quotes {
    public static Number start = 1L;
    public static Number append = 2L;
}

##########
