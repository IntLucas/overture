import org.overture.codegen.runtime.*;

import java.util.*;


public class A {
    public A() {
    }

    public static Number Sum(final VDMSeq rs) {
        if (rs.isEmpty()) {
            return 0L;
        } else {
            return ((Number) rs.get(0)).doubleValue() +
            Sum(SeqUtil.tail(Utils.clone(rs))).doubleValue();
        }
    }

    public static Number add(final VDMSeq natSeq, final VDMSeq realSeq) {
        return ((Number) natSeq.get(0)).longValue() +
        ((Number) realSeq.get(0)).doubleValue();
    }

    public String toString() {
        return "A{}";
    }
}

##########
import org.overture.codegen.runtime.*;

import java.util.*;


public class Entry {
    public Entry() {
    }

    public static Object Run() {
        return A.Sum(SeqUtil.seq(1L, 2L, 3L)).doubleValue() +
        A.add(SeqUtil.seq(5L), SeqUtil.seq(1.1)).doubleValue();
    }

    public String toString() {
        return "Entry{}";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class start {
    private static int hc = 0;
    private static start instance = null;

    public start() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static start getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new start();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof start;
    }

    public String toString() {
        return "<start>";
    }
}

##########

package quotes;

import org.overture.codegen.runtime.*;

import java.util.*;


public class append {
    private static int hc = 0;
    private static append instance = null;

    public append() {
        if (Utils.equals(hc, 0)) {
            hc = super.hashCode();
        }
    }

    public static append getInstance() {
        if (Utils.equals(instance, null)) {
            instance = new append();
        }

        return instance;
    }

    public int hashCode() {
        return hc;
    }

    public boolean equals(final Object obj) {
        return obj instanceof append;
    }

    public String toString() {
        return "<append>";
    }
}

##########
