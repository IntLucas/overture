["String \u003d String\n\tinv s \u003d\u003d (s \u003c\u003e [])","Message \u003d Message\n\tinv m \u003d\u003d ((len m) \u003c\u003d 100)","Classification \u003d Classification","Category \u003d Category","Ports \u003d Ports","private Occurs: (String * String -\u003e bool)\n\tOccurs(substr, str) \u003d\u003d\n(exists i, j in set (inds str) \u0026 (substr \u003d (str(i, ... ,j))))","private Classify: (Message * Category -\u003e Classification)\n\tClassify(m, cat) \u003d\u003d\n(if (exists hi in set cat \u0026 Occurs(hi, m))\nthen \u003cHI\u003e\nelse \u003cLO\u003e)","private Gateway: (seq of (Message) * Category -\u003e Ports)\n\tGateway(ms, cat) \u003d\u003d\n(if (ms \u003d [])\nthen mk_Ports([], [])\nelse let rest_p:Ports \u003d Gateway((tl ms), cat) in ProcessMessage((hd ms), cat, rest_p))","private MesLen: (seq of (Message) * Category -\u003e nat)\n\tMesLen(list, -) \u003d\u003d\n(len list)","private ProcessMessage: (Message * Category * Ports -\u003e Ports)\n\tProcessMessage(m, cat, ps) \u003d\u003d\n(if (Classify(m, cat) \u003d \u003cHI\u003e)\nthen mk_Ports(([m] ^ (ps.high)), (ps.low))\nelse mk_Ports((ps.high), ([m] ^ (ps.low))))","private Gateway2: (seq of (Message) * Category -\u003e Ports)\n\tGateway2(ms, cat) \u003d\u003d\nmk_Ports([ms(i) | i in set (inds ms) \u0026 (Classify(ms(i), cat) \u003d \u003cHI\u003e)], [ms(i) | i in set (inds ms) \u0026 (Classify(ms(i), cat) \u003d \u003cLO\u003e)])","private AnyHighClass: (seq of (Message) * Category -\u003e bool)\n\tAnyHighClass(ms, cat) \u003d\u003d\n(exists m in set (elems ms) \u0026 (Classify(m, cat) \u003d \u003cHI\u003e))","private Censor: (seq of (Message) * Category -\u003e seq of (Message))\n\tCensor(ms, cat) \u003d\u003d\n[ms(i) | i in set (inds ms) \u0026 (Classify(ms(i), cat) \u003d \u003cLO\u003e)]","private FlattenMessages: (seq of (Message) -\u003e Message)\n\tFlattenMessages(ms) \u003d\u003d\n(conc ms)\n\tpre ((len (conc ms)) \u003c\u003d 100)"]