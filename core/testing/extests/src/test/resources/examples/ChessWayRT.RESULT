["class Navigation\npublic async  DatabaseLookup() (() \u003d\u003d\u003e ())\n\tDatabaseLookup()() \u003d\u003d\n(\n\ncycles (5000000.0) skip;\nRadNavSys`mmi.UpdateScreen(2)\n)\npublic async  DecodeTMC() (() \u003d\u003d\u003e ())\n\tDecodeTMC()() \u003d\u003d\n(\n\ncycles (500000.0) skip;\nRadNavSys`mmi.UpdateScreen(3)\n)\nend Navigation\n","system RadNavSys\npublic static  mmi:MMI :\u003d new MMI()\npublic static  radio:Radio :\u003d new Radio()\npublic static  navigation:Navigation :\u003d new Navigation()\nprivate  CPU1:CPU :\u003d new CPU(\u003cFP\u003e, 2.2E7)\nprivate  CPU2:CPU :\u003d new CPU(\u003cFP\u003e, 1.1E7)\nprivate  CPU3:CPU :\u003d new CPU(\u003cFP\u003e, 1.13E8)\nprivate  BUS1:BUS :\u003d new BUS(\u003cCSMACD\u003e, 72000.0, {CPU1, CPU2, CPU3})\npublic  RadNavSys() (() \u003d\u003d\u003e RadNavSys)\n\tRadNavSys()() \u003d\u003d\n(\n\nCPU1.deploy(mmi, \"MMIT\");\nCPU1.setPriority(\"MMI`HandleKeyPress\", 100);\nCPU1.setPriority(\"MMI`UpdateScreen\", 90);\nCPU2.deploy(radio, \"RadioT\");\nCPU2.setPriority(\"Radio`AdjustVolumeUp\", 100);\nCPU2.setPriority(\"Radio`AdjustVolumeDown\", 100);\nCPU2.setPriority(\"Radio`HandleTMC\", 90);\nCPU3.deploy(navigation, \"NavT\");\nCPU3.setPriority(\"Navigation`DatabaseLookup\", 100);\nCPU3.setPriority(\"Navigation`DecodeTMC\", 90)\n)\nend RadNavSys\n","class Radio\npublic static  MAX:nat \u003d 10\npublic  volume:nat :\u003d 0\npublic async  AdjustVolumeUp() (() \u003d\u003d\u003e ())\n\tAdjustVolumeUp()() \u003d\u003d\n(\n\ncycles (1000000.0) skip;\nif (volume \u003c MAX)\nthen\n(\n\nvolume :\u003d (volume + 1);\nRadNavSys`mmi.UpdateScreen(1)\n)\n)\npublic async  AdjustVolumeDown() (() \u003d\u003d\u003e ())\n\tAdjustVolumeDown()() \u003d\u003d\n(\n\ncycles (1000000.0) skip;\nif (volume \u003e 0)\nthen\n(\n\nvolume :\u003d (volume - 1);\nRadNavSys`mmi.UpdateScreen(1)\n)\n)\npublic async  HandleTMC() (() \u003d\u003d\u003e ())\n\tHandleTMC()() \u003d\u003d\n(\n\ncycles (1000000.0) skip;\nRadNavSys`navigation.DecodeTMC()\n)\nend Radio\n","class Testing\npublic  Test() (() \u003d\u003d\u003e ())\n\tTest()() \u003d\u003d\n(\n\nnew new World().RunScenario1();\nstart (self);\nblock()\n)\nprivate  block() (() \u003d\u003d\u003e ())\n\tblock()() \u003d\u003d\nskip\nprivate  op() (() \u003d\u003d\u003e ())\n\top()() \u003d\u003d\nskip\nprivate  per block \u003d\u003e (time \u003e 5000000)\nprotected  thread periodic(1.0E9, 0, 0, 0)(op())\nend Testing\n","class World\npublic static  perfdata \u003d perfdata\npublic  RunScenario1() (() \u003d\u003d\u003e ())\n\tRunScenario1()() \u003d\u003d\n(\n\nRadNavSys`mmi.HandleKeyPress(1);\nRadNavSys`mmi.HandleKeyPress(1);\nRadNavSys`mmi.HandleKeyPress(1)\n)\nend World\n","class MMI\npublic async  HandleKeyPress(nat) (nat \u003d\u003d\u003e ())\n\tHandleKeyPress(nat)(pn) \u003d\u003d\n(\n\ncycles (100000.0) skip;\ncases pn :\n  1 -\u003e RadNavSys`radio.AdjustVolumeUp()  2 -\u003e RadNavSys`radio.AdjustVolumeDown()  3 -\u003e RadNavSys`navigation.DatabaseLookup() end\n)\npublic async  UpdateScreen(nat) (nat \u003d\u003d\u003e ())\n\tUpdateScreen(nat)(pn) \u003d\u003d\n(\n\ncycles (500000.0) skip;\ncases pn :\n  1 -\u003e IO`println(\"Screen Update: Volume Knob\")  2 -\u003e IO`println(\"Screen Update: InsertAddress\")  3 -\u003e IO`println(\"Screen Update: TransmitTMC\") end\n)\nend MMI\n","class IO\npublic static  filedirective \u003d filedirective\npublic static  public static writeval[(p)]: (@p -\u003e bool)\n\twriteval(val) \u003d\u003d\nis not yet specified\npublic static  public static fwriteval[(p)]: (seq1 of (char) * @p * filedirective -\u003e bool)\n\tfwriteval(filename, val, fdir) \u003d\u003d\nis not yet specified\npublic static  public static freadval[(p)]: (seq1 of (char) -\u003e (bool * [@p]))\n\tfreadval(filename) \u003d\u003d\nis not yet specified\n\tpost let mk_(b, t):(bool * [@p]) \u003d RESULT in ((not b) \u003d\u003e (t \u003d nil))\npublic  echo(seq of (char)) (seq of (char) \u003d\u003d\u003e bool)\n\techo(seq of (char))(text) \u003d\u003d\nfecho(\"\", text, nil)\npublic  fecho(seq of (char), seq of (char), [filedirective]) (seq of (char) * seq of (char) * [filedirective] \u003d\u003d\u003e bool)\n\tfecho(seq of (char), seq of (char), [filedirective])(filename, text, fdir) \u003d\u003d\nis not yet specified\n\tpre ((filename \u003d \"\") \u003c\u003d\u003e (fdir \u003d nil))\npublic  ferror() (() \u003d\u003d\u003e seq of (char))\n\tferror()() \u003d\u003d\nis not yet specified\npublic static  print(?) (? \u003d\u003d\u003e ())\n\tprint(?)(arg) \u003d\u003d\nis not yet specified\npublic static  println(?) (? \u003d\u003d\u003e ())\n\tprintln(?)(arg) \u003d\u003d\nis not yet specified\npublic static  printf(seq of (char), seq of (?)) (seq of (char) * seq of (?) \u003d\u003d\u003e ())\n\tprintf(seq of (char), seq of (?))(format, args) \u003d\u003d\nis not yet specified\nend IO\n"]