["class alarm\nprivate static  Plant \u003d Plant\n\tinv mk_Plant(schedule, alarms) \u003d\u003d (forall a in set alarms \u0026 (forall peri in set (dom schedule) \u0026 QualificationOK(schedule(peri), (a.quali))))\nprivate static  Schedule \u003d Schedule\n\tinv sch \u003d\u003d (forall exs in set (rng sch) \u0026 ((exs \u003c\u003e {}) and (forall ex1, ex2 in set exs \u0026 ((ex1 \u003c\u003e ex2) \u003d\u003e ((ex1.expertid) \u003c\u003e (ex2.expertid))))))\npublic static  Period \u003d Period\nprivate static  Expert \u003d Expert\n\tinv ex \u003d\u003d ((ex.quali) \u003c\u003e {})\nprivate static  ExpertId \u003d ExpertId\nprivate static  Qualification \u003d Qualification\nprivate static  Alarm \u003d Alarm\nprivate  private NumberOfExperts: (Period * Plant -\u003e nat)\n\tNumberOfExperts(peri, plant) \u003d\u003d\n(card (plant.schedule)(peri))\n\tpre (peri in set (dom (plant.schedule)))\nprivate  private ExpertIsOnDuty: (Expert * Plant -\u003e set of (Period))\n\tExpertIsOnDuty(ex, mk_Plant(sch, -)) \u003d\u003d\n{peri | peri in set (dom sch) \u0026 (ex in set sch(peri))}\nprivate  private  ExpertToPage((a:Alarm), (peri:Period), (plant:Plant))r:Expert\n\tpre ((peri in set (dom (plant.schedule))) and (a in set (plant.alarms)))\n\tpost ((r in set (plant.schedule)(peri)) and ((a.quali) in set (r.quali)))\nprivate static  private static QualificationOK: (set of (Expert) * Qualification -\u003e bool)\n\tQualificationOK(exs, reqquali) \u003d\u003d\n(exists ex in set exs \u0026 (reqquali in set (ex.quali)))\npublic  RunTest() (() \u003d\u003d\u003e set of (Period))\n\tRunTest()() \u003d\u003d\nlet a1:Alarm \u003d mk_Alarm(\"Mechanical fault\", \u003cMech\u003e), a2:Alarm \u003d mk_Alarm(\"Tank overflow\", \u003cChem\u003e), ex1:Expert \u003d mk_Expert(mk_token(1), {\u003cMech\u003e, \u003cBio\u003e}), ex2:Expert \u003d mk_Expert(mk_token(2), {\u003cElec\u003e}), ex3:Expert \u003d mk_Expert(mk_token(3), {\u003cChem\u003e, \u003cBio\u003e, \u003cMech\u003e}), ex4:Expert \u003d mk_Expert(mk_token(4), {\u003cElec\u003e, \u003cChem\u003e}), p1:Period \u003d mk_token(\"Monday day\"), p2:Period \u003d mk_token(\"Monday night\"), plant:Plant \u003d mk_Plant({p1 |-\u003e {ex1, ex4}, p2 |-\u003e {ex2, ex3}}, {a1, a2}) in return (ExpertIsOnDuty(ex1, plant))\nend alarm\n"]