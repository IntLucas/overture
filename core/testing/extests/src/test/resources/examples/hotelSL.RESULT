["Point \u003d Point","LineSegment \u003d LineSegment\n\tinv mk_LineSegment(end1, end2) \u003d\u003d (end1 \u003c\u003e end2)","Circle \u003d Circle","Ellipse \u003d Ellipse","Polygon \u003d Polygon\n\tinv mk_Polygon(points) \u003d\u003d ((len points) \u003e 2)","Polyline \u003d Polyline\n\tinv mk_Polyline(points) \u003d\u003d ((len points) \u003e 1)","Box \u003d Box\n\tinv mk_Box(corner1, corner2) \u003d\u003d (((corner1.xcoord) \u003c\u003e (corner2.xcoord)) and ((corner1.ycoord) \u003c\u003e (corner2.ycoord)))","ArcBox \u003d ArcBox","Text \u003d Text\n\tinv mk_Text(frame, startpoint, string) \u003d\u003d (((abs (((frame.corner1).ycoord) - ((frame.corner2).ycoord))) \u003e\u003d 20) and (point_within_box(startpoint, frame) and (((((frame.corner1).ycoord) \u003c ((frame.corner2).ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003c\u003d ((frame.corner2).ycoord))) or ((((frame.corner1).ycoord) \u003e ((frame.corner2).ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003c\u003d ((frame.corner1).ycoord))))))","Compound \u003d Compound\n\tinv mk_Compound(frame, components) \u003d\u003d (forall obj in set (elems components) \u0026 object_within_box(obj, frame))","Object \u003d Object","Message \u003d Message","state GraphEditorof\n[DRAWING_AREA : Box, OBJECTS : seq of (Object)]\n\tinv mk_GraphEditor(drawing_area, objects) \u003d\u003d ((((drawing_area.corner1).xcoord) \u003d 0) and ((((drawing_area.corner1).ycoord) \u003d 0) and ((((drawing_area.corner2).xcoord) \u003d 500) and ((((drawing_area.corner2).ycoord) \u003d 350) and (forall object in set (elems objects) \u0026 object_within_box(object, drawing_area))))))\n\tinit mk_GraphEditor(drawing_area, objects) \u003d\u003d ((((drawing_area.corner1).xcoord) \u003d 0) and ((((drawing_area.corner1).ycoord) \u003d 0) and ((((drawing_area.corner2).xcoord) \u003d 500) and ((((drawing_area.corner2).ycoord) \u003d 350) and (objects \u003d [])))))","private point_on_line: (Point * LineSegment +\u003e bool)\n\tpoint_on_line(point, line) \u003d\u003d\n(((((point.xcoord) - ((line.end2).xcoord)) * (((line.end1).xcoord) - ((line.end2).xcoord))) \u003e 0) and ((((point.xcoord) - ((line.end2).xcoord)) \u003c (((line.end1).xcoord) - ((line.end2).xcoord))) and ((((point.xcoord) - ((line.end2).xcoord)) * (((line.end1).ycoord) - ((line.end2).ycoord))) \u003d ((((line.end1).xcoord) - ((line.end2).xcoord)) * ((point.ycoord) - ((line.end2).ycoord))))))","private point_on_circle: (Point * Circle +\u003e bool)\n\tpoint_on_circle(point, circle) \u003d\u003d\n((((((circle.center).xcoord) - (point.xcoord)) ** 2) + ((((circle.center).ycoord) - (point.ycoord)) ** 2)) \u003d ((circle.radius) ** 2))","private point_on_ellipse: (Point * Ellipse +\u003e bool)\n\tpoint_on_ellipse(point, ellipse) \u003d\u003d\n(((((ellipse.yradius) ** 2) * ((((ellipse.center).xcoord) - (point.xcoord)) ** 2)) + (((ellipse.xradius) ** 2) * ((((ellipse.center).ycoord) - (point.ycoord)) ** 2))) \u003d (((ellipse.xradius) ** 2) * ((ellipse.yradius) ** 2)))","private point_on_polygon: (Point * Polygon +\u003e bool)\n\tpoint_on_polygon(point, polygon) \u003d\u003d\n(exists index in set (inds (polygon.vertices)) \u0026 point_on_line(point, mk_LineSegment((polygon.vertices)(index), (polygon.vertices)(((index mod (len (polygon.vertices))) + 1)))))","private point_on_polyline: (Point * Polyline +\u003e bool)\n\tpoint_on_polyline(point, polyline) \u003d\u003d\n(exists index in set {i | i:nat1 \u0026 ((i in set (inds (polyline.vertices))) and (i \u003c\u003e (len (polyline.vertices))))} \u0026 point_on_line(point, mk_LineSegment((polyline.vertices)(index), (polyline.vertices)((index + 1)))))","private point_on_box: (Point * Box +\u003e bool)\n\tpoint_on_box(point, box) \u003d\u003d\n((((((point.xcoord) \u003e\u003d ((box.corner1).xcoord)) and ((point.xcoord) \u003c\u003d ((box.corner2).xcoord))) or (((point.xcoord) \u003e\u003d ((box.corner2).xcoord)) and ((point.xcoord) \u003c\u003d ((box.corner1).xcoord)))) and (((point.ycoord) \u003d ((box.corner1).ycoord)) or ((point.ycoord) \u003d ((box.corner2).ycoord)))) or (((((point.ycoord) \u003e\u003d ((box.corner1).ycoord)) and ((point.ycoord) \u003c\u003d ((box.corner2).ycoord))) or (((point.ycoord) \u003e\u003d ((box.corner2).ycoord)) and ((point.ycoord) \u003c\u003d ((box.corner1).ycoord)))) and (((point.xcoord) \u003d ((box.corner1).xcoord)) or ((point.xcoord) \u003d ((box.corner2).xcoord)))))","private point_on_arcbox: (Point * ArcBox +\u003e bool)\n\tpoint_on_arcbox(point, arcbox) \u003d\u003d\npoint_on_box(point, (arcbox.box))","private point_on_text: (Point * Text +\u003e bool)\n\tpoint_on_text(point, text) \u003d\u003d\npoint_within_box(point, (text.frame))","private point_on_compound: (Point * Compound +\u003e bool)\n\tpoint_on_compound(point, compound) \u003d\u003d\npoint_on_box(point, (compound.frame))","private point_on_object: (Point * Object +\u003e bool)\n\tpoint_on_object(point, object) \u003d\u003d\n((is_(object, Circle) and point_on_circle(point, object)) or ((is_(object, Ellipse) and point_on_ellipse(point, object)) or ((is_(object, Polygon) and point_on_polygon(point, object)) or ((is_(object, Polyline) and point_on_polyline(point, object)) or ((is_(object, Box) and point_on_box(point, object)) or ((is_(object, ArcBox) and point_on_box(point, (object.box))) or ((is_(object, Text) and point_within_box(point, (object.frame))) or (is_(object, Compound) and point_on_box(point, (object.frame))))))))))","private point_within_box: (Point * Box +\u003e bool)\n\tpoint_within_box(point, box) \u003d\u003d\n(((((point.xcoord) \u003e ((box.corner1).xcoord)) and ((point.xcoord) \u003c ((box.corner2).xcoord))) or (((point.xcoord) \u003e ((box.corner2).xcoord)) and ((point.xcoord) \u003c ((box.corner1).xcoord)))) and ((((point.ycoord) \u003e ((box.corner1).ycoord)) and ((point.ycoord) \u003c ((box.corner2).ycoord))) or (((point.ycoord) \u003e ((box.corner2).ycoord)) and ((point.ycoord) \u003c ((box.corner1).ycoord)))))","private circle_within_box: (Circle * Box +\u003e bool)\n\tcircle_within_box(circle, box) \u003d\u003d\n(point_within_box(mk_Point((((circle.center).xcoord) + (circle.radius)), ((circle.center).ycoord)), box) and (point_within_box(mk_Point((((circle.center).xcoord) - (circle.radius)), ((circle.center).ycoord)), box) and (point_within_box(mk_Point(((circle.center).xcoord), (((circle.center).ycoord) + (circle.radius))), box) and point_within_box(mk_Point(((circle.center).xcoord), (((circle.center).ycoord) - (circle.radius))), box))))","private ellipse_within_box: (Ellipse * Box +\u003e bool)\n\tellipse_within_box(ellipse, box) \u003d\u003d\n(point_within_box(mk_Point((((ellipse.center).xcoord) + (ellipse.xradius)), ((ellipse.center).ycoord)), box) and (point_within_box(mk_Point((((ellipse.center).xcoord) - (ellipse.xradius)), ((ellipse.center).ycoord)), box) and (point_within_box(mk_Point(((ellipse.center).xcoord), (((ellipse.center).ycoord) + (ellipse.yradius))), box) and point_within_box(mk_Point(((ellipse.center).xcoord), (((ellipse.center).ycoord) - (ellipse.yradius))), box))))","private polygon_within_box: (Polygon * Box +\u003e bool)\n\tpolygon_within_box(polygon, box) \u003d\u003d\n(forall vertex in set (elems (polygon.vertices)) \u0026 point_within_box(vertex, box))","private polyline_within_box: (Polyline * Box +\u003e bool)\n\tpolyline_within_box(polyline, box) \u003d\u003d\n(forall vertex in set (elems (polyline.vertices)) \u0026 point_within_box(vertex, box))","private box_within_box: (Box * Box +\u003e bool)\n\tbox_within_box(box1, box2) \u003d\u003d\n(point_within_box((box1.corner1), box2) and point_within_box((box1.corner2), box2))","private object_within_box: (Object * Box +\u003e bool)\n\tobject_within_box(object, box) \u003d\u003d\n((is_(object, Circle) and circle_within_box(object, box)) or ((is_(object, Ellipse) and ellipse_within_box(object, box)) or ((is_(object, Polygon) and polygon_within_box(object, box)) or ((is_(object, Polyline) and polyline_within_box(object, box)) or ((is_(object, Box) and box_within_box(object, box)) or ((is_(object, ArcBox) and box_within_box((object.box), box)) or ((is_(object, Text) and box_within_box((object.frame), box)) or (is_(object, Compound) and box_within_box((object.frame), box)))))))))","private  copy_point((point:Point), (vector:LineSegment))newpoint:Point\n\tpost (((newpoint.xcoord) \u003d (((point.xcoord) + ((vector.end2).xcoord)) - ((vector.end1).xcoord))) and ((newpoint.ycoord) \u003d (((point.ycoord) + ((vector.end2).ycoord)) - ((vector.end1).ycoord))))","private  copy_points((points:seq1 of (Point)), (vector:LineSegment))newpoints:seq1 of (Point)\n\tpost (((len points) \u003d (len newpoints)) and (forall i in set (inds points) \u0026 (newpoints(i) \u003d copy_point(points(i), vector))))","private  make_copy_object((obj:Object), (vector:LineSegment))newobj:Object\n\tpost ((is_(obj, Circle) and (newobj \u003d mk_Circle(copy_point((obj.center), vector), (obj.radius)))) or ((is_(obj, Ellipse) and (newobj \u003d mk_Ellipse(copy_point((obj.center), vector), (obj.xradius), (obj.yradius)))) or ((is_(obj, Polygon) and (newobj \u003d mk_Polygon(copy_points((obj.vertices), vector)))) or ((is_(obj, Polyline) and (newobj \u003d mk_Polyline(copy_points((obj.vertices), vector)))) or ((is_(obj, Box) and (newobj \u003d mk_Box(copy_point((obj.corner1), vector), copy_point((obj.corner2), vector)))) or ((is_(obj, ArcBox) and (newobj \u003d mk_ArcBox(mk_Box(copy_point(((obj.box).corner1), vector), copy_point(((obj.box).corner2), vector)), (obj.cornerradius)))) or ((is_(obj, Text) and (newobj \u003d mk_Text(mk_Box(copy_point(((obj.frame).corner1), vector), copy_point(((obj.frame).corner2), vector)), copy_point((obj.startpoint), vector), (obj.string)))) or (is_(obj, Compound) and (newobj \u003d mk_Compound(mk_Box(copy_point(((obj.frame).corner1), vector), copy_point(((obj.frame).corner2), vector)), make_copy_objects((obj.components), vector)))))))))))","private  make_copy_objects((objs:seq1 of (Object)), (vector:LineSegment))newobjs:seq1 of (Object)\n\tpost (((len newobjs) \u003d (len objs)) and (newobjs \u003d [make_copy_object(objs(i), vector) | i in set (inds objs)]))","create_circle([center]Point, [radius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre circle_within_box(mk_Circle(center, radius), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_Circle(center, radius)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not circle_within_box(mk_Circle(center, radius), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_ellipse([center]Point, [xradius]nat1, [yradius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ellipse_within_box(mk_Ellipse(center, xradius, yradius), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_Ellipse(center, xradius, yradius)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not ellipse_within_box(mk_Ellipse(center, xradius, yradius), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_polygon([vertices]seq1 of (Point)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre polygon_within_box(mk_Polygon(vertices), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_Polygon(vertices)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not polygon_within_box(mk_Polygon(vertices), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_polyline([vertices]seq1 of (Point)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre polyline_within_box(mk_Polyline(vertices), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_Polyline(vertices)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not polyline_within_box(mk_Polyline(vertices), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_box([corner1]Point, [corner2]Point) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre box_within_box(mk_Box(corner1, corner2), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_Box(corner1, corner2)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_arcbox([corner1]Point, [corner2]Point, [cornerradius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre box_within_box(mk_Box(corner1, corner2), DRAWING_AREA)\n\tpost ((OBJECTS \u003d ([mk_ArcBox(mk_Box(corner1, corner2), cornerradius)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","create_text([corner1]Point, [corner2]Point, [startpoint]Point, [string]seq of (char)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (box_within_box(mk_Box(corner1, corner2), DRAWING_AREA) and (((abs ((corner1.ycoord) - (corner2.ycoord))) \u003e\u003d 20) and (point_within_box(startpoint, mk_Box(corner1, corner2)) and ((((corner1.ycoord) \u003c (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003c\u003d (corner2.ycoord))) or (((corner1.ycoord) \u003e (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003c\u003d (corner1.ycoord)))))))\n\tpost ((OBJECTS \u003d ([mk_Text(mk_Box(corner1, corner2), startpoint, string)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e)), FRAME_SIZE((abs ((corner1.ycoord) - (corner2.ycoord))) \u003c 20)((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_FRAME_SIZE\u003e)), START_POINT(not point_within_box(startpoint, mk_Box(corner1, corner2)))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_START_POINT\u003e)), TEXT_NOT_FIT((((corner1.ycoord) \u003c (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003e (corner2.ycoord))) or (((corner1.ycoord) \u003e (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) \u003e (corner1.ycoord))))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cTEXT_NOT_FIT\u003e))]","create_compound_object([corner1]Point, [corner2]Point) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (box_within_box(mk_Box(corner1, corner2), DRAWING_AREA) and (exists object in set (elems OBJECTS) \u0026 object_within_box(object, mk_Box(corner1, corner2))))\n\tpost let components:seq1 of (Object) \u003d [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 object_within_box(OBJECTS~(i), mk_Box(corner1, corner2))] in ((OBJECTS \u003d ([mk_Compound(mk_Box(corner1, corner2), components)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (not object_within_box(OBJECTS~(i), mk_Box(corner1, corner2)))])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e)), NO_COMPONENT(not (exists object in set (elems OBJECTS) \u0026 object_within_box(object, mk_Box(corner1, corner2))))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNO_COMPONENT\u003e))]","select_object([click]Point) object:[Object]\n\text [rd[DRAWING_AREA]Box, rd[OBJECTS]seq of (Object)]\n\tpre point_within_box(click, DRAWING_AREA)\n\tpost ((object in set (elems OBJECTS)) and (point_on_object(click, object) and (forall i in set {index | index:nat1, j:nat1 \u0026 ((index in set (inds OBJECTS)) and ((index \u003c j) and (OBJECTS(j) \u003d object)))} \u0026 (not point_on_object(click, OBJECTS(i))))))\n\terrs [NO_SELECT(not (exists obj in set (elems OBJECTS) \u0026 point_on_object(click, obj)))(object \u003d nil)]","decompose_compound_object([object]Object) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (is_(object, Compound) and (object in set (elems OBJECTS)))\n\tpost ((OBJECTS \u003d ((object.components) ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e object)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_COMPOUND(not is_(object, Compound))(msg \u003d \u003cNOT_COMPOUND\u003e)]","delete_object([object]Object)\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (object in set (elems OBJECTS))\n\tpost (OBJECTS \u003d [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e object)])","move_object([object]Object, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (object in set (elems OBJECTS))\n\tpost ((is_(object, Compound) and (msg \u003d move_compound_object(object, vector))) or ((not is_(object, Compound)) and (msg \u003d move_simple_object(object, vector))))","move_simple_object([object]Object, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((object in set (elems OBJECTS)) and ((not is_(object, Compound)) and object_within_box(make_copy_object(object, vector), DRAWING_AREA)))\n\tpost ((OBJECTS \u003d ([make_copy_object(object, vector)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e object)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not object_within_box(make_copy_object(object, vector), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","move_compound_object([compound]Compound, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((compound in set (elems OBJECTS)) and object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))\n\tpost ((OBJECTS \u003d ([make_copy_object(compound, vector)] ^ [OBJECTS(i) | i in set (inds OBJECTS) \u0026 (OBJECTS(i) \u003c\u003e compound)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","copy_object([object]Object, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre (object in set (elems OBJECTS))\n\tpost ((is_(object, Compound) and (msg \u003d copy_compound_object(object, vector))) or ((not is_(object, Compound)) and (msg \u003d copy_simple_object(object, vector))))","copy_simple_object([object]Object, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((object in set (elems OBJECTS)) and ((not is_(object, Compound)) and object_within_box(make_copy_object(object, vector), DRAWING_AREA)))\n\tpost ((OBJECTS \u003d ([make_copy_object(object, vector)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not object_within_box(make_copy_object(object, vector), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","copy_compound_object([compound]Compound, [vector]LineSegment) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((compound in set (elems OBJECTS)) and (is_(compound, Compound) and object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA)))\n\tpost ((OBJECTS \u003d ([make_copy_object(compound, vector)] ^ OBJECTS~)) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_circle([circle]Circle, [new_radius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((circle in set (elems OBJECTS)) and circle_within_box(mk_Circle((circle.center), new_radius), DRAWING_AREA))\n\tpost ((OBJECTS \u003d ([mk_Circle((circle.center), new_radius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e circle)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not circle_within_box(mk_Circle((circle.center), new_radius), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_ellipse([ellipse]Ellipse, [new_xradius]nat1, [new_yradius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((ellipse in set (elems OBJECTS)) and ellipse_within_box(mk_Ellipse((ellipse.center), new_xradius, new_yradius), DRAWING_AREA))\n\tpost ((OBJECTS \u003d ([mk_Ellipse((ellipse.center), new_xradius, new_yradius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e ellipse)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not ellipse_within_box(mk_Ellipse((ellipse.center), new_xradius, new_yradius), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_polygon([polygon]Polygon, [new_vertices]seq1 of (Point)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((polygon in set (elems OBJECTS)) and (((len new_vertices) \u003d (len (polygon.vertices))) and polygon_within_box(mk_Polygon(new_vertices), DRAWING_AREA)))\n\tpost ((OBJECTS \u003d ([mk_Polygon(new_vertices)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e polygon)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NUM_VERTICES((len new_vertices) \u003c\u003e (len (polygon.vertices)))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_NUM_VERTICES\u003e)), NOT_FIT(not polygon_within_box(mk_Polygon(new_vertices), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_polyline([polyline]Polyline, [new_vertices]seq1 of (Point)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((polyline in set (elems OBJECTS)) and (((len new_vertices) \u003d (len (polyline.vertices))) and polyline_within_box(mk_Polyline(new_vertices), DRAWING_AREA)))\n\tpost ((OBJECTS \u003d ([mk_Polyline(new_vertices)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e polyline)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NUM_VERTICES((len new_vertices) \u003c\u003e (len (polyline.vertices)))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_NUM_VERTICES\u003e)), NOT_FIT(not polyline_within_box(mk_Polyline(new_vertices), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_box([box]Box, [new_corner1]Point, [new_corner2]Point) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((box in set (elems OBJECTS)) and box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))\n\tpost ((OBJECTS \u003d ([mk_Box(new_corner1, new_corner2)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e box)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","resize_arcbox([arcbox]ArcBox, [new_corner1]Point, [new_corner2]Point, [new_corner_radius]nat1) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((arcbox in set (elems OBJECTS)) and box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))\n\tpost ((OBJECTS \u003d ([mk_ArcBox(mk_Box(new_corner1, new_corner2), new_corner_radius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e arcbox)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e))]","edit_text([text]Text, [new_corner1]Point, [new_corner2]Point, [new_start_point]Point, [new_string]seq of (char)) msg:Message\n\text [rd[DRAWING_AREA]Box, wr[OBJECTS]seq of (Object)]\n\tpre ((text in set (elems OBJECTS)) and (box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA) and (((abs ((new_corner1.ycoord) - (new_corner2.ycoord))) \u003e\u003d 20) and (point_within_box(new_start_point, mk_Box(new_corner1, new_corner2)) and ((((new_corner1.ycoord) \u003c (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) \u003c\u003d (new_corner2.ycoord))) or (((new_corner1.ycoord) \u003e (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) \u003c\u003d (new_corner1.ycoord))))))))\n\tpost ((OBJECTS \u003d ([mk_Text(mk_Box(new_corner1, new_corner2), new_start_point, new_string)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) \u0026 (OBJECTS~(i) \u003c\u003e text)])) and (msg \u003d \u003cSUCCESS\u003e))\n\terrs [NOT_FIT(not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cNOT_FIT\u003e)), FRAME_SIZE((abs ((new_corner1.ycoord) - (new_corner2.ycoord))) \u003c 20)((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_FRAME_SIZE\u003e)), START_POINT(not point_within_box(new_start_point, mk_Box(new_corner1, new_corner2)))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cERROR_START_POINT\u003e)), TEXT_NOT_FIT((((new_corner1.ycoord) \u003c (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) \u003c\u003d (new_corner2.ycoord))) or (((new_corner1.ycoord) \u003e (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) \u003c\u003d (new_corner1.ycoord))))((OBJECTS \u003d OBJECTS~) and (msg \u003d \u003cTEXT_NOT_FIT\u003e))]"]