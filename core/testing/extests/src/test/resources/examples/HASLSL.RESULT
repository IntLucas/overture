["ValvePos \u003d ValvePos","SwitchPos \u003d SwitchPos","StartAttempt \u003d StartAttempt\n\tinv s \u003d\u003d (s \u003c\u003d DVMAXNUMBERATTEMPTS)","StartState \u003d StartState","DVMINN2GNDFOC:real \u003d 26","DVMINTGTGNDFOC:real \u003d 100","DVATORABOVEIDLE:real \u003d 55","DVMAXNUMBERATTEMPTS:int \u003d 2","DVHOTSTART:real \u003d 305","DVMAXLIGHTWAITTIME:int \u003d 180","STATEMAP:map (nat1) to ((\u003cAttemptAborted\u003e | \u003cCoolAndFlushCycle\u003e | \u003cEngineStarted\u003e | \u003cFuelSwitchAtCut\u003e | \u003cSequenceAborted\u003e | \u003cStartCommanded\u003e | \u003cWaitForFuelOnConditions\u003e | \u003cWaitForIdle\u003e | \u003cWaitForLightUp\u003e | \u003cWaitForStarterOnConditions\u003e)) \u003d {1 |-\u003e \u003cFuelSwitchAtCut\u003e, 2 |-\u003e \u003cStartCommanded\u003e, 3 |-\u003e \u003cWaitForStarterOnConditions\u003e, 4 |-\u003e \u003cWaitForFuelOnConditions\u003e, 5 |-\u003e \u003cWaitForLightUp\u003e, 6 |-\u003e \u003cWaitForIdle\u003e, 7 |-\u003e \u003cEngineStarted\u003e, 8 |-\u003e \u003cCoolAndFlushCycle\u003e, 9 |-\u003e \u003cAttemptAborted\u003e, 10 |-\u003e \u003cSequenceAborted\u003e}","state StartingSystemof\n[sstate : StartState, startswitch : SwitchPos, fuelswitch : SwitchPos, n2 : real, aog : bool, starteron : bool, sov : ValvePos, lit : bool, ignon : bool, startcomplete : bool, startaborted : bool, attempt : StartAttempt, lightuptimer : int, coolflushcmd : bool, stalldet : bool, ign_flt : bool, sov_flt : bool, starter_flt : bool, n2_flt : bool, tgt_flt : bool]\n\tinit ss \u003d\u003d (ss \u003d mk_StartingSystem(\u003cFuelSwitchAtCut\u003e, \u003coff\u003e, \u003coff\u003e, 0, true, false, \u003cclosed\u003e, false, false, false, false, 0, 0, false, false, false, false, false, false, false))","private LightUpDetect: (real -\u003e bool)\n\tLightUpDetect(tempTGT) \u003d\u003d\n(tempTGT \u003e DVMINTGTGNDFOC)","private FOCDetect: (SwitchPos * SwitchPos * real * bool -\u003e bool)\n\tFOCDetect(fuelswitch, startswitch, n2, aog) \u003d\u003d\n((fuelswitch \u003d \u003con\u003e) and ((startswitch \u003d \u003con\u003e) and ((n2 \u003e DVMINN2GNDFOC) and aog)))","private ReturnState: (int -\u003e StartState)\n\tReturnState(i) \u003d\u003d\nSTATEMAP(i)","private LightupTimeOutDetect: (int -\u003e bool)\n\tLightupTimeOutDetect(lightuptimer) \u003d\u003d\n(lightuptimer \u003e DVMAXLIGHTWAITTIME)","private GroundFailureDetected: (bool * bool * bool * bool * bool * real -\u003e bool)\n\tGroundFailureDetected(ign_flt, starter_flt, sov_flt, n2_flt, tgt_flt, n2) \u003d\u003d\n(ign_flt or (starter_flt or (sov_flt or (n2_flt or (tgt_flt or (n2 \u003e DVMINN2GNDFOC))))))","StarterOn()\n\text [rd[sstate]StartState, rd[startswitch]SwitchPos, rd[aog]bool, wr[starteron]bool, rd[fuelswitch]SwitchPos]\n\tpre ((fuelswitch \u003d \u003con\u003e) and ((startswitch \u003d \u003con\u003e) and aog))\n\tpost starteron","StarterOff()\n\text [rd[startswitch]SwitchPos, rd[lit]bool, wr[starteron]bool]\n\tpre ((startswitch \u003d \u003coff\u003e) or lit)\n\tpost (not starteron)","OpenSOV()\n\text [rd[startswitch]SwitchPos, rd[fuelswitch]SwitchPos, rd[n2]real, rd[aog]bool, wr[sov]ValvePos]\n\tpre ((startswitch \u003d \u003con\u003e) and FOCDetect(fuelswitch, startswitch, n2, aog))\n\tpost (sov \u003d \u003copen\u003e)","IgnOn([tempTGT]real)\n\text [rd[sov]ValvePos, wr[ignon]bool]\n\tpre ((sov \u003d \u003copen\u003e) and (not LightUpDetect(tempTGT)))\n\tpost ignon","IgnOff([tempTGT]real)\n\text [rd[sov]ValvePos, wr[ignon]bool]\n\tpre ((sov \u003d \u003copen\u003e) and LightUpDetect(tempTGT))\n\tpost (not ignon)","StartComplete([tempTGT]real)\n\text [rd[n2]real, wr[startcomplete]bool]\n\tpre (LightUpDetect(tempTGT) and (n2 \u003e DVATORABOVEIDLE))\n\tpost startcomplete","SequenceAbort()\n\text [rd[fuelswitch]SwitchPos, wr[attempt]StartAttempt, wr[startaborted]bool, rd[starter_flt]bool, rd[ign_flt]?, rd[sov_flt]?, rd[n2_flt]?, rd[tgt_flt]?, rd[n2]?]\n\tpre (GroundFailureDetected(ign_flt, starter_flt, sov_flt, n2_flt, tgt_flt, n2) or ((fuelswitch \u003d \u003coff\u003e) or (attempt \u003e\u003d DVMAXNUMBERATTEMPTS)))\n\tpost (startaborted and (attempt \u003d 0))","CoolFlush([tempTGT]real)\n\text [rd[lightuptimer]int, rd[coolflushcmd]bool, rd[stalldet]bool, wr[attempt]StartAttempt]\n\tpre ((LightupTimeOutDetect(lightuptimer) and coolflushcmd) or ((tempTGT \u003e DVHOTSTART) or stalldet))\n\tpost (attempt \u003d (attempt~ + 1))"]