["BOM \u003d BOM\n\tinv bom \u003d\u003d ((forall ps in set (rng bom) \u0026 (ps subset (dom bom))) and (forall p in set (dom bom) \u0026 (p not in set Parts(p, bom))))","Pn \u003d Pn","bom:map (nat1) to ((set of (nat1) | {})) \u003d {1 |-\u003e {2, 4}, 2 |-\u003e {3, 4, 5}, 3 |-\u003e {5, 6}, 4 |-\u003e {6}, 5 |-\u003e {4}, 6 |-\u003e {}}","cycle:map (nat1) to (set of (nat1)) \u003d {1 |-\u003e {2, 4}, 2 |-\u003e {3, 4, 5}, 3 |-\u003e {5, 6}, 4 |-\u003e {6}, 5 |-\u003e {4}, 6 |-\u003e {1}}","private Parts: (Pn * map (Pn) to (set of (Pn)) -\u003e set of (Pn))\n\tParts(p, bom) \u003d\u003d\nTransClos(bom, bom(p))\n\tpre (p in set (dom bom))","private TransClos: (map (Pn) to (set of (Pn)) * set of (Pn) -\u003e set of (Pn))\n\tTransClos(bom, ps) \u003d\u003d\n(if (forall p in set ps \u0026 (bom(p) subset ps))\nthen ps\nelse let newps:set of (Pn) \u003d (dunion {bom(p) | p in set ps}) in TransClos(bom, (ps union newps)))\n\tpre (ps subset (dom bom))","private IncrAcc: (map (Pn) to (set of (Pn)) * set of (Pn) -\u003e nat)\n\tIncrAcc(bom, pns) \u003d\u003d\n((card (dom bom)) - (card pns))","private Explode: (Pn * BOM -\u003e set of (Pn))\n\tExplode(p, bom) \u003d\u003d\n(bom(p) union Exps(bom, bom(p)))\n\tpre (p in set (dom bom))","private Exps: (BOM * set of (Pn) -\u003e set of (Pn))\n\tExps(bom, ps) \u003d\u003d\n(if (ps \u003d {})\nthen {}\nelse let p1 in set ps in (Explode(p1, bom) union Exps(bom, (ps \\ {p1}))))\n\tpre (ps subset (dom bom))","private Enter: (BOM * Pn * set of (Pn) -\u003e BOM)\n\tEnter(bom, p, ps) \u003d\u003d\n(bom munion {p |-\u003e ps})\n\tpre ((p not in set (dom bom)) and (ps subset (dom bom)))","private Delete: (Pn * BOM -\u003e BOM)\n\tDelete(p, bom) \u003d\u003d\n({p} \u003c-: bom)\n\tpre ((p in set (dom bom)) and inv_BOM(({p} \u003c-: bom)))","private Add: (Pn * Pn * BOM -\u003e BOM)\n\tAdd(p1, p2, bom) \u003d\u003d\n(bom ++ {p1 |-\u003e (bom(p1) union {p2})})\n\tpre ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom)))))","private Erase: (Pn * Pn * BOM -\u003e BOM)\n\tErase(p1, p2, bom) \u003d\u003d\n(bom ++ {p1 |-\u003e (bom(p1) \\ {p2})})\n\tpre ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1))))"]