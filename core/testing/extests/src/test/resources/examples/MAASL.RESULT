["array \u003d array","a1:array \u003d [1, 2, 9, 4, 7, 3]","a2:array \u003d [4, 3, 2, 1]","a3:seq1 of (nat1) \u003d [1, 2, 3, 4]","a4:seq1 of (nat1) \u003d [2]","a5:seq1 of (nat1) \u003d [2, 2, 2, 2]","private MaxOfSet: (set of (int) -\u003e int)\n\tMaxOfSet(s) \u003d\u003d\nlet e in set s in (if ((card s) \u003d 1)\nthen e\nelse let mr:int \u003d MaxOfSet((s \\ {e})) in (if (e \u003e mr)\nthen e\nelse mr))\n\tpre (s \u003c\u003e {})\n\tpost ((RESULT in set s) and (forall e in set s \u0026 (e \u003c\u003d RESULT)))","private CardInt: (set of (int) -\u003e nat)\n\tCardInt(s) \u003d\u003d\n(card s)","private lupsltok: (array * nat1 -\u003e nat)\n\tlupsltok(a, k) \u003d\u003d\nlet compatible:set of (nat) \u003d {lupsltok(a, j) | j in set {1, ... ,(k - 1)} \u0026 (a(j) \u003c\u003d a(k))} in (if (compatible \u003d {})\nthen 1\nelse (MaxOfSet(compatible) + 1))","private lupsl: (array -\u003e nat)\n\tlupsl(a) \u003d\u003d\nMaxOfSet({lupsltok(a, j) | j in set (inds a)})","private ascending: (array * set of (int) -\u003e bool)\n\tascending(a, s) \u003d\u003d\n(forall i, j in set s \u0026 ((i \u003c j) \u003d\u003e (a(i) \u003c\u003d a(j))))\n\tpre (s subset (inds a))","private lupslSpec: (array -\u003e int)\n\tlupslSpec(a) \u003d\u003d\nMaxOfSet({(card s) | s in set (power (inds a)) \u0026 ascending(a, s)})","lupslOp1Laski (array \u003d\u003d\u003e nat)\n\tlupslOp1Laski(a) \u003d\u003d\n(\nlupsls:set of (nat) :\u003d {}\n\nfor all k in set (inds a) do\nlupsls :\u003d (lupsls union {lupsltok(a, k)});\nreturn (MaxOfSet(lupsls))\n)\n\tpost (lupslSpec(a) \u003d RESULT)","state lupsof\n[lupslarr : array]\n\tinit s \u003d\u003d (s \u003d mk_lups([1]))","lupsmOp1Gries (array \u003d\u003d\u003e nat)\n\tlupsmOp1Gries(a) \u003d\u003d\n(\n\nlupslarr :\u003d [a(1)];\nfor k \u003d 2 to (len a)\nlupsm4kop1Gries(a, k);\nreturn ((len lupslarr))\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsm4kop1Gries (array * nat1 \u003d\u003d\u003e ())\n\tlupsm4kop1Gries(a, k) \u003d\u003d\n(\ni:int :\u003d (undefined)\n\nif (lupslarr((len lupslarr)) \u003c\u003d a(k))\nthen\nlupslarr :\u003d (lupslarr ^ [a(k)])else\n(\n\ni :\u003d (iota x in set {1, ... ,(len lupslarr)} \u0026 ((lupslarr(x) \u003e a(k)) and (forall j in set {1, ... ,(x - 1)} \u0026 (lupslarr(j) \u003c\u003d a(k)))));\nlupslarr(i) :\u003d a(k)\n)\n)\n\tpre (k in set (inds a))","lupslOp2Laski (array \u003d\u003d\u003e nat)\n\tlupslOp2Laski(a) \u003d\u003d\n(\nlupslmax:nat :\u003d 0\n\nfor k \u003d 1 to (len a)\nlet lak:nat \u003d lupsltok(a, k) in if (lak \u003e lupslmax)\nthen\nlupslmax :\u003d lak;\nreturn (lupslmax)\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsmOp2Gries (array \u003d\u003d\u003e nat)\n\tlupsmOp2Gries(a) \u003d\u003d\n(\n\nlupslarr :\u003d [a(1)];\nfor k \u003d 2 to (len a)\nlupsm4kop2Gries(a, k);\nreturn ((len lupslarr))\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsm4kop2Gries (array * nat1 \u003d\u003d\u003e ())\n\tlupsm4kop2Gries(a, k) \u003d\u003d\n(\ni:int :\u003d (undefined)\n\nif (lupslarr((len lupslarr)) \u003c\u003d a(k))\nthen\nlupslarr :\u003d (lupslarr ^ [a(k)])else\n(\n\ni :\u003d 1;\nwhile (lupslarr(i) \u003c\u003d a(k)) do i :\u003d (i + 1);\nlupslarr(i) :\u003d a(k)\n)\n)\n\tpre (k in set (inds a))","lupslOp3Laski (array \u003d\u003d\u003e nat)\n\tlupslOp3Laski(a) \u003d\u003d\n(\nlupslmax:nat :\u003d 0\n\nfor k \u003d 1 to (len a)\nlet lak:nat \u003d lupsltokop1Laski(a, k) in if (lak \u003e lupslmax)\nthen\nlupslmax :\u003d lak;\nreturn (lupslmax)\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsltokop1Laski (array * nat1 \u003d\u003d\u003e nat)\n\tlupsltokop1Laski(a, k) \u003d\u003d\n(\ncompatible:set of (int) :\u003d {}\nerg:int :\u003d (undefined)\n\nfor j \u003d 1 to (k - 1)\nif (a(j) \u003c\u003d a(k))\nthen\ncompatible :\u003d (compatible union {lupslarr(j)});\nif (compatible \u003d {})\nthen\nerg :\u003d 1else\nerg :\u003d (MaxOfSet(compatible) + 1);\nlupslarr :\u003d (lupslarr ^ [erg]);\nreturn (erg)\n)\n\tpre (k in set (inds a))","lupsmOp3Gries (array \u003d\u003d\u003e nat)\n\tlupsmOp3Gries(a) \u003d\u003d\n(\n\nlupslarr :\u003d [a(1)];\nfor k \u003d 2 to (len a)\nlupsm4kop3Gries(a, k);\nreturn ((len lupslarr))\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsm4kop3Gries (array * nat1 \u003d\u003d\u003e ())\n\tlupsm4kop3Gries(a, k) \u003d\u003d\n(\nli:int :\u003d (undefined)\nre:int :\u003d (undefined)\nm:int :\u003d (undefined)\n\nif (lupslarr((len lupslarr)) \u003c\u003d a(k))\nthen\nlupslarr :\u003d (lupslarr ^ [a(k)])elseif (a(k) \u003c lupslarr(1))\nthen\nlupslarr(1) :\u003d a(k)else\n(\n\nli :\u003d 1;\nre :\u003d (len lupslarr);\nwhile (li \u003c\u003e (re - 1)) do (\n\nm :\u003d ((li + re) div 2);\nif (lupslarr(m) \u003c\u003d a(k))\nthen\nli :\u003d melse\nre :\u003d m\n);\nlupslarr(re) :\u003d a(k)\n)\n)\n\tpre (k in set (inds a))","lupslOp4Laski (array \u003d\u003d\u003e nat)\n\tlupslOp4Laski(a) \u003d\u003d\n(\nlupslmax:nat :\u003d 0\n\nfor k \u003d 1 to (len a)\nlet lak:nat \u003d lupsltokop2Laski(a, k) in if (lak \u003e lupslmax)\nthen\nlupslmax :\u003d lak;\nreturn (lupslmax)\n)\n\tpost (lupslSpec(a) \u003d RESULT)","lupsltokop2Laski (array * nat1 \u003d\u003d\u003e nat)\n\tlupsltokop2Laski(a, k) \u003d\u003d\n(\nerg:int :\u003d 0\n\nfor j \u003d 1 to (k - 1)\nif (a(j) \u003c\u003d a(k))\nthen\nif (erg \u003c lupslarr(j))\nthen\nerg :\u003d lupslarr(j);\nerg :\u003d (erg + 1);\nlupslarr :\u003d (lupslarr ^ [erg]);\nreturn (erg)\n)\n\tpre (k in set (inds a))"]