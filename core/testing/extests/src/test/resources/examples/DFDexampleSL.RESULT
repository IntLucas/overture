["Country \u003d Country","Relation \u003d Relation","Colour \u003d Colour","Colouring \u003d Colouring","private isRelation: (Relation -\u003e bool)\n\tisRelation(r) \u003d\u003d\n(forall mk_(c1, c2) in set r \u0026 (c1 \u003c\u003e c2))","private areNb: (Country * Country * Relation -\u003e bool)\n\tareNb(cn1, cn2, r) \u003d\u003d\n((mk_(cn1, cn2) in set r) or (mk_(cn2, cn1) in set r))","private CountriesRel: (Relation -\u003e set of (Country))\n\tCountriesRel(r) \u003d\u003d\n(dunion {{c1, c2} | mk_(c1, c2) in set r})","private sameColour: (Country * Country * Colouring -\u003e bool)\n\tsameColour(cn1, cn2, cols) \u003d\u003d\n(exists col in set cols \u0026 ((cn1 in set col) and (cn2 in set col)))","private CountriesCol: (Colouring -\u003e set of (Country))\n\tCountriesCol(cols) \u003d\u003d\n(dunion cols)","private isColouring: (Colouring -\u003e bool)\n\tisColouring(cols) \u003d\u003d\n(forall col1, col2 in set cols \u0026 ((col1 \u003c\u003e col2) \u003d\u003e ((col1 inter col2) \u003d {})))","private isColouringOf: (Colouring * set of (Country) -\u003e bool)\n\tisColouringOf(cols, cns) \u003d\u003d\n(CountriesCol(cols) \u003d cns)","private nbDistinctColours: (Colouring * Relation -\u003e bool)\n\tnbDistinctColours(cols, r) \u003d\u003d\n(forall cn1, cn2 in set CountriesRel(r) \u0026 (areNb(cn1, cn2, r) \u003d\u003e (not sameColour(cn1, cn2, cols))))","private  colMap((r:Relation))cols:Colouring\n\tpre isRelation(r)\n\tpost (isColouring(cols) and (isColouringOf(cols, CountriesRel(r)) and nbDistinctColours(cols, r)))","private canBeExtBy: (Colour * Country * Relation -\u003e bool)\n\tcanBeExtBy(col, c, r) \u003d\u003d\n(forall c1 in set col \u0026 (not areNb(c1, c, r)))","private extndCol: (Colouring * Country * Relation -\u003e Colouring)\n\textndCol(cols, c, r) \u003d\u003d\n(if (cols \u003d {})\nthen {{c}}\nelse let col in set cols in (if canBeExtBy(col, c, r)\nthen (({({c} union col)} union cols) \\ {col})\nelse ({col} union extndCol((cols \\ {col}), c, r))))","private CardColouring: (Colouring * Country * Relation -\u003e nat)\n\tCardColouring(cols, -, -) \u003d\u003d\n(card cols)","private colCntrs: (set of (Country) * Relation -\u003e Colouring)\n\tcolCntrs(cs, r) \u003d\u003d\n(if (cs \u003d {})\nthen {}\nelse let c in set cs in extndCol(colCntrs((cs \\ {c}), r), c, r))","private CardCountry: (set of (Country) * Relation -\u003e nat)\n\tCardCountry(cs, -) \u003d\u003d\n(card cs)","private colMapExpl: (Relation -\u003e Colouring)\n\tcolMapExpl(r) \u003d\u003d\ncolCntrs(CountriesRel(r), r)\n\tpre isRelation(r)"]