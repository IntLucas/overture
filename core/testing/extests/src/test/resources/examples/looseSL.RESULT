["Id \u003d Id","String \u003d String","Edition \u003d Edition\n\tinv e \u003d\u003d (e in set ({1, ... ,50} union {\u003cnil\u003e}))","Month \u003d Month\n\tinv e \u003d\u003d (e in set ({1, ... ,12} union {\u003cnil\u003e}))","Number \u003d Number","Pages \u003d Pages","Series \u003d Series","Volume \u003d Volume","Year \u003d Year\n\tinv e \u003d\u003d (e in set ({1800, ... ,1998} union {\u003cnil\u003e}))","Article \u003d Article","Book \u003d Book","Inproceeding \u003d Inproceeding","Manual \u003d Manual","Techreport \u003d Techreport","Record \u003d Record","Recordtype \u003d Recordtype","Value \u003d Value","Valuetype \u003d Valuetype","state mgdof\n[dB : set of (Record)]\n\tinit dB \u003d\u003d (dB \u003d mk_mgd({}))","private field: (Recordtype +\u003e set of (Valuetype))\n\tfield(rt) \u003d\u003d\n(required(rt) union optional(rt))\n\tpost (RESULT \u003d (required(rt) union optional(rt)))","private get: (set of (Record) * Id +\u003e Record)\n\tget(dB, i) \u003d\u003d\nlet record in set dB in (if ((record.id) \u003d i)\nthen record\nelse get((dB \\ {record}), i))\n\tpre (i in set usedIds(dB))\n\tpost (((RESULT.id) \u003d i) and (RESULT in set dB))","private CardDb: (set of (Record) * Id +\u003e nat)\n\tCardDb(dB, -) \u003d\u003d\n(card dB)","private getvalue: (Valuetype * set of (Record) * Id +\u003e Value)\n\tgetvalue(valuetype, dB, i) \u003d\u003d\n(cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end)\n\tpre ((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e}))\n\tpost (((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title))) or (((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author))) or (((valuetype \u003d \u003cjournal\u003e) and (RESULT \u003d (get(dB, i).journal))) or (((valuetype \u003d \u003cyear\u003e) and (RESULT \u003d (get(dB, i).year))) or (((valuetype \u003d \u003cbooktitle\u003e) and (RESULT \u003d (get(dB, i).booktitle))) or (((valuetype \u003d \u003cinstitution\u003e) and (RESULT \u003d (get(dB, i).institution))) or ((valuetype \u003d \u003cpublisher\u003e) and (RESULT \u003d (get(dB, i).publisher)))))))))","private iscomplete: (set of (Record) * Id +\u003e bool)\n\tiscomplete(dB, i) \u003d\u003d\n(required(recordtype(dB, i)) \u003d {f | f in set required(recordtype(dB, i)) \u0026 (not isempty(getvalue(f, dB, i)))})\n\tpre (i in set usedIds(dB))\n\tpost ((forall x in set required(recordtype(dB, i)) \u0026 (not isempty(getvalue(x, dB, i)))) \u003c\u003d\u003e RESULT)","private isedition: (Value +\u003e bool)\n\tisedition(v) \u003d\u003d\n((v in set {1, ... ,50}) or (v \u003d \u003cnil\u003e))","private isempty: (Value +\u003e bool)\n\tisempty(value) \u003d\u003d\n(if (value \u003d \u003cnil\u003e)\nthen true\nelse false)\n\tpost ((value \u003d \u003cnil\u003e) \u003c\u003d\u003e RESULT)","private isidentical: (set of (Record) +\u003e bool)\n\tisidentical(dB) \u003d\u003d\n(if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1}))))\n\tpost ((exists i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) and (iscomplete(dB, i) and (iscomplete(dB, j) and ((recordtype(dB, i) \u003d recordtype(dB, j)) and (forall x in set required(recordtype(dB, i)) \u0026 (getvalue(x, dB, i) \u003d getvalue(x, dB, j)))))))) \u003c\u003d\u003e RESULT)","private isidentical2: (set of (Record) * set of (Record) * set of (Record) * Record +\u003e bool)\n\tisidentical2(dB1, dB2, olddB, record1) \u003d\u003d\n(if (dB2 \u003d {})\nthen isidentical((dB1 \\ {record1}))\nelse let record2 in set dB2 in (if iscomplete(olddB, (record2.id))\nthen isidentical3(dB1, dB2, olddB, record1, record2, required(recordtype(olddB, (record1.id))))\nelse isidentical2(dB1, (dB2 \\ {record2}), olddB, record1)))","private isidentical3: (set of (Record) * set of (Record) * set of (Record) * Record * Record * set of (Valuetype) +\u003e bool)\n\tisidentical3(dB1, dB2, olddB, record1, record2, requiredfields) \u003d\u003d\n(if (requiredfields \u003d {})\nthen true\nelse let field in set requiredfields in (if (getvalue(field, olddB, (record1.id)) \u003c\u003e getvalue(field, olddB, (record2.id)))\nthen isidentical2(dB1, (dB2 \\ {record2}), olddB, record1)\nelse isidentical3(dB1, dB2, olddB, record1, record2, (requiredfields \\ {field}))))","private ismonth: (Value +\u003e bool)\n\tismonth(v) \u003d\u003d\nis_(v, nat)","private isnumber: (Value +\u003e bool)\n\tisnumber(v) \u003d\u003d\n(is_(v, nat) or (v \u003d \u003cnil\u003e))","private ispages: (Value +\u003e bool)\n\tispages(v) \u003d\u003d\n(is_(v, nat) or (v \u003d \u003cnil\u003e))","private isstring: (Value +\u003e bool)\n\tisstring(v) \u003d\u003d\n(if (not is_(v, real))\nthen (if (v \u003d [])\nthen true\nelseif is_((hd v), char)\nthen isstring((tl v))\nelse false)\nelse false)","private issubstring: (String * String +\u003e bool)\n\tissubstring(string1, string2) \u003d\u003d\n(if (string1 \u003d [])\nthen true\nelseif ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))\nthen false\nelseif ((hd string1) \u003d (hd string2))\nthen issubstring2((tl string1), (tl string2), string1)\nelse issubstring(string1, (tl string2)))\n\tpost (((not (string2 \u003d \u003cnil\u003e)) and (exists i, j in set (inds string2) \u0026 (substring(string2, i, j) \u003d string1))) \u003c\u003d\u003e RESULT)","private issubstring2: (String * String * String +\u003e bool)\n\tissubstring2(string1, string2, oldstring1) \u003d\u003d\n(if (string1 \u003d [])\nthen true\nelseif (string2 \u003d [])\nthen false\nelseif ((hd string1) \u003d (hd string2))\nthen issubstring2((tl string1), (tl string2), oldstring1)\nelse issubstring(oldstring1, string2))","private isvalueoffield: (Value * Valuetype +\u003e bool)\n\tisvalueoffield(v, f) \u003d\u003d\n(cases f :\n\u003caddress\u003e -\u003e isstring(v),\n\u003cauthor\u003e -\u003e isstring(v),\n\u003cbooktitle\u003e -\u003e isstring(v),\n\u003cedition\u003e -\u003e isedition(v),\n\u003ceditor\u003e -\u003e isstring(v),\n\u003cinstitution\u003e -\u003e isstring(v),\n\u003cjournal\u003e -\u003e isstring(v),\n\u003cmonth\u003e -\u003e ismonth(v),\n\u003cnote\u003e -\u003e isstring(v),\n\u003cnumber\u003e -\u003e isnumber(v),\n\u003corganization\u003e -\u003e isstring(v),\n\u003cpages\u003e -\u003e ispages(v),\n\u003cpublisher\u003e -\u003e isstring(v),\n\u003ctitle\u003e -\u003e isstring(v),\n\u003ctype\u003e -\u003e isstring(v),\n\u003cvolume\u003e -\u003e isvolume(v),\n\u003cyear\u003e -\u003e isyear(v)\n end)\n\tpost ((((f \u003d \u003caddress\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cauthor\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cbooktitle\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cedition\u003e) and (exists x:Edition \u0026 (x \u003d v))) or (((f \u003d \u003ceditor\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cinstitution\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cjournal\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cmonth\u003e) and (exists x:Month \u0026 (x \u003d v))) or (((f \u003d \u003cnote\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cnumber\u003e) and (exists x:Number \u0026 (x \u003d v))) or (((f \u003d \u003corganization\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cpages\u003e) and (exists x:Pages \u0026 (x \u003d v))) or (((f \u003d \u003cpublisher\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003ctitle\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003ctype\u003e) and (exists x:String \u0026 (x \u003d v))) or (((f \u003d \u003cvolume\u003e) and (exists x:Volume \u0026 (x \u003d v))) or ((f \u003d \u003cyear\u003e) and (exists x:Year \u0026 (x \u003d v))))))))))))))))))) \u003c\u003d\u003e RESULT)","private isvolume: (Value +\u003e bool)\n\tisvolume(v) \u003d\u003d\n(is_(v, nat) or (v \u003d \u003cnil\u003e))","private isyear: (Value +\u003e bool)\n\tisyear(v) \u003d\u003d\n((v in set {1800, ... ,1998}) or (v \u003d \u003cnil\u003e))","private optional: (Recordtype +\u003e set of (Valuetype))\n\toptional(rt) \u003d\u003d\n(cases rt :\n\u003carticle\u003e -\u003e {\u003cvolume\u003e, \u003cnumber\u003e, \u003cmonth\u003e, \u003cnote\u003e},\n\u003cbook\u003e -\u003e {\u003cvolume\u003e, \u003cseries\u003e, \u003caddress\u003e, \u003cedition\u003e, \u003cmonth\u003e, \u003cnote\u003e, \u003cpublisher\u003e},\n\u003cinproceeding\u003e -\u003e {\u003ceditor\u003e, \u003cpages\u003e, \u003corganization\u003e, \u003cpublisher\u003e, \u003caddress\u003e, \u003cpages\u003e, \u003corganization\u003e},\n\u003cmanual\u003e -\u003e {\u003cedition\u003e, \u003cnote\u003e, \u003corganization\u003e, \u003cmonth\u003e, \u003caddress\u003e, \u003cauthor\u003e, \u003corganization\u003e, \u003cyear\u003e},\n\u003ctechreport\u003e -\u003e {\u003cnumber\u003e, \u003cnote\u003e, \u003ctype\u003e, \u003cmonth\u003e, \u003caddress\u003e}\n end)\n\tpost (((rt \u003d \u003carticle\u003e) and (RESULT \u003d {\u003cvolume\u003e, \u003cnumber\u003e, \u003cmonth\u003e, \u003cnote\u003e})) or (((rt \u003d \u003cbook\u003e) and (RESULT \u003d {\u003cvolume\u003e, \u003cseries\u003e, \u003caddress\u003e, \u003cedition\u003e, \u003cmonth\u003e, \u003cnote\u003e, \u003cpublisher\u003e})) or (((rt \u003d \u003cinproceeding\u003e) and (RESULT \u003d {\u003ceditor\u003e, \u003cpages\u003e, \u003corganization\u003e, \u003cpublisher\u003e, \u003caddress\u003e, \u003cpages\u003e, \u003corganization\u003e})) or (((rt \u003d \u003cmanual\u003e) and (RESULT \u003d {\u003cedition\u003e, \u003cnote\u003e, \u003corganization\u003e, \u003cmonth\u003e, \u003caddress\u003e, \u003cauthor\u003e, \u003corganization\u003e, \u003cyear\u003e})) or ((rt \u003d \u003ctechreport\u003e) and (RESULT \u003d {\u003cnumber\u003e, \u003cnote\u003e, \u003ctype\u003e, \u003cmonth\u003e, \u003caddress\u003e}))))))","private recordtype: (set of (Record) * Id +\u003e Recordtype)\n\trecordtype(dB, i) \u003d\u003d\n(if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e)\n\tpre (i in set usedIds(dB))\n\tpost ((is_(get(dB, i), Article) and (RESULT \u003d \u003carticle\u003e)) or ((is_(get(dB, i), Book) and (RESULT \u003d \u003cbook\u003e)) or ((is_(get(dB, i), Inproceeding) and (RESULT \u003d \u003cinproceeding\u003e)) or ((is_(get(dB, i), Manual) and (RESULT \u003d \u003cmanual\u003e)) or (is_(get(dB, i), Techreport) and (RESULT \u003d \u003ctechreport\u003e))))))","private required: (Recordtype +\u003e set of (Valuetype))\n\trequired(rt) \u003d\u003d\n(cases rt :\n\u003carticle\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e},\n\u003cbook\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cpublisher\u003e, \u003cyear\u003e},\n\u003cinproceeding\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cbooktitle\u003e, \u003cyear\u003e},\n\u003cmanual\u003e -\u003e {\u003ctitle\u003e},\n\u003ctechreport\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cinstitution\u003e, \u003cyear\u003e}\n end)\n\tpost (((rt \u003d \u003carticle\u003e) and (RESULT \u003d {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e})) or (((rt \u003d \u003cbook\u003e) and (RESULT \u003d {\u003ctitle\u003e, \u003cauthor\u003e, \u003cpublisher\u003e, \u003cyear\u003e})) or (((rt \u003d \u003cinproceeding\u003e) and (RESULT \u003d {\u003ctitle\u003e, \u003cauthor\u003e, \u003cbooktitle\u003e, \u003cyear\u003e})) or (((rt \u003d \u003cmanual\u003e) and (RESULT \u003d {\u003ctitle\u003e})) or ((rt \u003d \u003ctechreport\u003e) and (RESULT \u003d {\u003ctitle\u003e, \u003cauthor\u003e, \u003cinstitution\u003e, \u003cyear\u003e}))))))","private  substring((s:String), (i:nat1), (j:nat1))r:String\n\tpre ((i \u003c j) and (j \u003c\u003d (len s)))\n\tpost (exists s1, s2:String \u0026 (((len s1) \u003d (i - 1)) and (((len s2) \u003d ((len s) - j)) and (s \u003d ((s1 ^ r) ^ s2)))))","private usedIds: (set of (Record) +\u003e set of (Id))\n\tusedIds(dB) \u003d\u003d\nidset(dB, {})\n\tpost (forall x in set dB \u0026 (((x.id) in set RESULT) and (forall i in set RESULT \u0026 (exists x in set dB \u0026 ((x.id) \u003d i)))))","private idset: (set of (Record) * set of (Id) +\u003e set of (Id))\n\tidset(dB, ids) \u003d\u003d\n(if (dB \u003d {})\nthen ids\nelse let record in set dB in idset((dB \\ {record}), (ids union {(record.id)})))","private CardRecords: (set of (Record) * set of (Id) +\u003e nat)\n\tCardRecords(s, -) \u003d\u003d\n(card s)","CREATE (Recordtype \u003d\u003d\u003e Id)\n\tCREATE(e) \u003d\u003d\n(\ni:nat1 :\u003d 1\n\n(\n\nwhile (i in set usedIds(dB)) do i :\u003d (i + 1)\n);\ncases e :\n  \u003carticle\u003e -\u003e dB :\u003d (dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})  \u003cbook\u003e -\u003e dB :\u003d (dB union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})  \u003cinproceeding\u003e -\u003e dB :\u003d (dB union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})  \u003cmanual\u003e -\u003e dB :\u003d (dB union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})  \u003ctechreport\u003e -\u003e dB :\u003d (dB union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) end;\nreturn (i)\n)\n\tpost (((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and (dB \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) or (((e \u003d \u003cbook\u003e) and (dB \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or (((e \u003d \u003cinproceeding\u003e) and (dB \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or (((e \u003d \u003cmanual\u003e) and (dB \u003d (dB~ union {mk_Manual(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or ((e \u003d \u003ctechreport\u003e) and (dB \u003d (dB~ union {mk_Techreport(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))))))","UPDATE([i]Id, [f]Valuetype, [v]Value)\n\text [wr[dB]set of (Record)]\n\tpre ((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB))))))\n\tpost ((getvalue(f, dB, i) \u003d v) and (((dB \\ {get(dB, i)}) \u003d (dB~ \\ {get(dB~, i)})) and (forall x in set (field(recordtype(dB, i)) \\ {f}) \u0026 (getvalue(x, dB, i) \u003d getvalue(x, dB~, i)))))","COMPLETE (Id \u003d\u003d\u003e bool)\n\tCOMPLETE(i) \u003d\u003d\nreturn (iscomplete(dB, i))\n\tpre (i in set usedIds(dB))\n\tpost (iscomplete(dB, i) \u003c\u003d\u003e RESULT)","DELETE([i]Id)\n\text [wr[dB]set of (Record)]\n\tpre (i in set usedIds(dB))\n\tpost (dB~ \u003d (dB union {get(dB~, i)}))","SEARCH (String \u003d\u003d\u003e set of (Id))\n\tSEARCH(a) \u003d\u003d\n(\nids:set of (Id) :\u003d {}\n\nfor all record in set dB do\nif issubstring(a, (record.author))\nthen\nids :\u003d (ids union {(record.id)})else\nids :\u003d ids;\nreturn (ids)\n)\n\tpost (forall i in set RESULT \u0026 (issubstring(a, (get(dB, i).author)) and (not (exists record in set dB \u0026 (((record.id) not in set RESULT) and issubstring(a, (get(dB, i).author)))))))","GET (Id \u003d\u003d\u003e Record)\n\tGET(i) \u003d\u003d\nreturn (get(dB, i))\n\tpre (i in set usedIds(dB))\n\tpost (RESULT \u003d get(dB, i))"]