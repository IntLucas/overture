["class Stack\nprivate  stack:seq of (int) :\u003d []\npublic  Reset() (() \u003d\u003d\u003e ())\n\tReset()() \u003d\u003d\nstack :\u003d []\npublic  Pop() (() \u003d\u003d\u003e int)\n\tPop()() \u003d\u003d\nlet res \u003d (hd stack) in (\n\nstack :\u003d (tl stack);\nreturn (res)\n)\n\tpre (stack \u003c\u003e [])\n\tpost (stack~ \u003d ([RESULT] ^ stack))\npublic  Push(int) (int \u003d\u003d\u003e ())\n\tPush(int)(elem) \u003d\u003d\nstack :\u003d (stack ^ [elem])\npublic  Top() (() \u003d\u003d\u003e int)\n\tTop()() \u003d\u003d\nreturn ((hd stack))\nend Stack\n","class UseStack\nprivate  stack:Stack :\u003d new Stack()\npublic  [TracesStack][[stack.Reset(){1,1}], [x in set {2, 8}ALetBeStBindingTraceDefinitionstack.Push(x){1,4}def x in set {2, 8}], [([[stack.Push(9){1,1}, stack.Pop(){1,1}]]){1,1}]]\nend UseStack\n"]