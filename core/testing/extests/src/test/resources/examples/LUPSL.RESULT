["Digit \u003d Digit\n\tinv d \u003d\u003d (d \u003c 10)","private static luhn: (seq1 of (Digit) -\u003e Digit)\n\tluhn(data) \u003d\u003d\n((total(data) * 9) mod 10)","private static luhns: (seq1 of (char) -\u003e Digit)\n\tluhns(number) \u003d\u003d\nluhn(strToSeq(number))","private static luhnn: (nat -\u003e Digit)\n\tluhnn(number) \u003d\u003d\nluhn(natToSeq(number))","private static total: (seq of (Digit) -\u003e nat)\n\ttotal(data) \u003d\u003d\n(if (data \u003d [])\nthen 0\nelse let multipler:int \u003d (((len data) mod 2) + 1), product:int \u003d ((hd data) * multipler) in (total((tl data)) + (if (product \u003c 10)\nthen product\nelse ((product mod 10) + 1))))","private static slen: (seq of (Digit) -\u003e nat)\n\tslen(data) \u003d\u003d\n(len data)","private static strToSeq: (seq1 of (char) -\u003e seq1 of (Digit))\n\tstrToSeq(s) \u003d\u003d\n[(cases s(i) :\nchar value [0] -\u003e 0,\nchar value [1] -\u003e 1,\nchar value [2] -\u003e 2,\nchar value [3] -\u003e 3,\nchar value [4] -\u003e 4,\nchar value [5] -\u003e 5,\nchar value [6] -\u003e 6,\nchar value [7] -\u003e 7,\nchar value [8] -\u003e 8,\nchar value [9] -\u003e 9\n end) | i in set (inds s)]","private static natToSeq: (nat -\u003e seq of (Digit))\n\tnatToSeq(n) \u003d\u003d\n(if (n \u003c 10)\nthen [n]\nelse (natToSeq((n div 10)) ^ [(n rem 10)]))","private static id: (nat -\u003e nat)\n\tid(n) \u003d\u003d\nn","[First1000][[a, b, c, d in set {0, ... ,9}ALetBeStBindingTraceDefinition([[luhn([a]){1,1}], [luhn([a, b]){1,1}], [luhn([a, b, c]){1,1}], [luhn([a, b, c, d]){1,1}]]){1,1}def a, b, c, d in set {0, ... ,9}]]","[AllOneDigitErrors][[[input:seq1 of (nat1) \u003d [7, 9, 9, 2, 7, 3, 9, 8, 7, 1]]pos in set (inds input)ALetBeStBindingTraceDefinitionreplacement in set ({0, ... ,9} \\ {input(pos)})ALetBeStBindingTraceDefinition[corrupt:seq1 of (int) \u003d (((input(1, ... ,(pos - 1))) ^ [replacement]) ^ (input((pos + 1), ... ,(len input))))]checkFail(corrupt, 3){1,1}def replacement in set ({0, ... ,9} \\ {input(pos)})def pos in set (inds input)]]","[AllAdjacentTranspositions][[[input:seq1 of (nat1) \u003d [7, 9, 9, 2, 7, 3, 9, 8, 7, 1]]pos in set (inds (tl input))((input((pos + 1)) \u003c\u003e input(pos)) and ({input((pos + 1)), input(pos)} \u003c\u003e {0, 9}))[replacement:seq1 of (nat1) \u003d [input((pos + 1)), input(pos)]][corrupt:seq1 of (nat1) \u003d (((input(1, ... ,(pos - 1))) ^ replacement) ^ (input((pos + 2), ... ,(len input))))]checkFail(corrupt, 3){1,1}def pos in set (inds (tl input))]]","[AllTwinErrors][[[input:seq1 of (nat) \u003d [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 0, 0]]pos in set (inds (tl input))(input(pos) \u003d input((pos + 1)))rep in set ({0, ... ,9} \\ {input(pos)})ALetBeStBindingTraceDefinition[corrupt:seq1 of (int) \u003d (((input(1, ... ,(pos - 1))) ^ [rep, rep]) ^ (input((pos + 2), ... ,(len input))))]checkFail(corrupt, 0){1,1}def rep in set ({0, ... ,9} \\ {input(pos)})def pos in set (inds (tl input))]]","[ZeroPadding][[[input:seq1 of (nat1) \u003d [7, 9, 9, 2, 7, 3, 9, 8, 7, 1]]number in set {1, ... ,10}ALetBeStBindingTraceDefinition[padding:seq of (int) \u003d [(p - p) | p in set {1, ... ,number}]]checkOK((padding ^ input), 3){1,1}def number in set {1, ... ,10}]]","checkFail (seq1 of (Digit) * Digit \u003d\u003d\u003e bool)\n\tcheckFail(data, expected) \u003d\u003d\nreturn ((luhn(data) \u003c\u003e expected))\n\tpost (RESULT \u003d true)","checkOK (seq1 of (Digit) * Digit \u003d\u003d\u003e bool)\n\tcheckOK(data, expected) \u003d\u003d\nreturn ((luhn(data) \u003d expected))\n\tpost (RESULT \u003d true)"]