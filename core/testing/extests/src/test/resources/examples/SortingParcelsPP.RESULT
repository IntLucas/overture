["class Agent\nprivate static  thing_l:seq1 of ((\u003cMatch\u003e | \u003cPaper\u003e | \u003cTobacco\u003e)) \u003d [\u003cTobacco\u003e, \u003cPaper\u003e, \u003cMatch\u003e]\nprivate  timer:nat :\u003d 0\nprivate  table:Table :\u003d (undefined)\npublic  Agent(Table) (Table \u003d\u003d\u003e Agent)\n\tAgent(Table)(tab) \u003d\u003d\ntable :\u003d tab\npublic  GetTime() (() \u003d\u003d\u003e nat)\n\tGetTime()() \u003d\u003d\nreturn (timer)\npublic  AddTobacco() (() \u003d\u003d\u003e bool)\n\tAddTobacco()() \u003d\u003d\n(\n\nif (table.AddElement)(thing_l(1))\nthen\n(\n\nWorld`graphics.tobaccoAdded();\nreturn (true)\n);\nreturn (false)\n)\npublic  AddPaper() (() \u003d\u003d\u003e bool)\n\tAddPaper()() \u003d\u003d\n(\n\nif (table.AddElement)(thing_l(2))\nthen\n(\n\nWorld`graphics.paperAdded();\nreturn (true)\n);\nreturn (false)\n)\npublic  AddMatch() (() \u003d\u003d\u003e bool)\n\tAddMatch()() \u003d\u003d\n(\n\nif (table.AddElement)(thing_l(3))\nthen\n(\n\nWorld`graphics.matchAdded();\nreturn (true)\n);\nreturn (false)\n)\nend Agent\n","class Smoker\nprivate  smokerName:seq of (char) :\u003d (undefined)\nprivate  elements:set of (Element) :\u003d (undefined)\nprivate  orig_element:Element :\u003d (undefined)\nprivate  cigarettes:nat :\u003d 0\nprivate  table:Table :\u003d (undefined)\npublic  Smoker(seq of (char), Element, Table) (seq of (char) * Element * Table \u003d\u003d\u003e Smoker)\n\tSmoker(seq of (char), Element, Table)(name, element, tab) \u003d\u003d\n(\n\nsmokerName :\u003d name;\nelements :\u003d {element};\norig_element :\u003d element;\ntable :\u003d tab\n)\nprivate  Roll() (() \u003d\u003d\u003e ())\n\tRoll()() \u003d\u003d\n(\n\nWorld`graphics.nowSmoking(gui_Graphics`ElementToNat(orig_element));\nIO`print((smokerName ^ \" rolling \"));\nelements :\u003d {};\ncigarettes :\u003d (cigarettes + 1)\n)\n\tpre ((card elements) \u003d 3)\nprivate  Smoke() (() \u003d\u003d\u003e ())\n\tSmoke()() \u003d\u003d\n(\n\nIO`print(\"and smoking \n\");\ncigarettes :\u003d (cigarettes - 1);\nelements :\u003d {orig_element}\n)\nprotected  thread while true do (\n\nelements :\u003d (elements union (table.TakeElements)(elements));\nRoll();\nSmoke()\n)\nprivate  per Smoke \u003d\u003e (cigarettes \u003e 0)\nend Smoker\n","class Table\npublic static  Element \u003d Element\nprivate  elements:set of (Element) :\u003d {}\nprivate  inv((card elements) \u003c\u003d 3)\npublic  AddElement(Element) (Element \u003d\u003d\u003e bool)\n\tAddElement(Element)(es) \u003d\u003d\nif (es not in set elements)\nthen\n(\n\nelements :\u003d (elements union {es});\nreturn (true)\n)else\nreturn (false)\nprivate  ExtraElement() (() \u003d\u003d\u003e set of (Element))\n\tExtraElement()() \u003d\u003d\nlet es:set of (Element) \u003d elements in (\n\nelements :\u003d {};\nWorld`graphics.tableCleared();\nIO`print(\"table clear\");\nreturn (es)\n)\npublic  TakeElements(set of (Element)) (set of (Element) \u003d\u003d\u003e set of (Element))\n\tTakeElements(set of (Element))(es) \u003d\u003d\n(\n\nlet e in set es in cases e :\n  \u003cTobacco\u003e -\u003e MissingPM()  \u003cPaper\u003e -\u003e MissingTM()  \u003cMatch\u003e -\u003e MissingTP() end;\nExtraElement()\n)\n\tpre ((card es) \u003d 1)\nprivate  MissingPM() (() \u003d\u003d\u003e ())\n\tMissingPM()() \u003d\u003d\nskip\nprivate  MissingTM() (() \u003d\u003d\u003e ())\n\tMissingTM()() \u003d\u003d\nskip\nprivate  MissingTP() (() \u003d\u003d\u003e ())\n\tMissingTP()() \u003d\u003d\nskip\nprivate  per MissingPM \u003d\u003e (elements \u003d {\u003cPaper\u003e, \u003cMatch\u003e})\nprivate  per MissingTM \u003d\u003e (elements \u003d {\u003cTobacco\u003e, \u003cMatch\u003e})\nprivate  per MissingTP \u003d\u003e (elements \u003d {\u003cTobacco\u003e, \u003cPaper\u003e})\nend Table\n","class World\npublic static  graphics:gui_Graphics :\u003d new gui_Graphics()\nprivate  table:Table :\u003d new Table()\npublic  agent:Agent :\u003d new Agent(table)\nprivate  smokers:set of (Smoker) :\u003d {new Smoker(\"Smoker 1\", \u003cTobacco\u003e, table), new Smoker(\"Smoker 2\", \u003cPaper\u003e, table), new Smoker(\"Smoker 3\", \u003cMatch\u003e, table)}\nprivate  limit:nat :\u003d (undefined)\nprivate  finished:bool :\u003d false\npublic  World(nat) (nat \u003d\u003d\u003e World)\n\tWorld(nat)(simtime) \u003d\u003d\n(\n\nIO`print(\"World Ctor\");\nlimit :\u003d simtime\n)\npublic  Yield() (() \u003d\u003d\u003e ())\n\tYield()() \u003d\u003d\nskip\nprivate  Finished() (() \u003d\u003d\u003e nat)\n\tFinished()() \u003d\u003d\nagent.GetTime()\npublic  Run() (() \u003d\u003d\u003e ())\n\tRun()() \u003d\u003d\n(\n\nstart (smokers);\ngraphics.init()\n)\nprotected  thread (\n\nwhile ((agent.GetTime)() \u003c\u003d limit) do skip;\nfinished :\u003d true\n)\nprivate  per Finished \u003d\u003e finished\nend World\n","class gui_Graphics\npublic  init() (() \u003d\u003d\u003e ())\n\tinit()() \u003d\u003d\nis not yet specified\npublic  tobaccoAdded() (() \u003d\u003d\u003e ())\n\ttobaccoAdded()() \u003d\u003d\nis not yet specified\npublic  paperAdded() (() \u003d\u003d\u003e ())\n\tpaperAdded()() \u003d\u003d\nis not yet specified\npublic  matchAdded() (() \u003d\u003d\u003e ())\n\tmatchAdded()() \u003d\u003d\nis not yet specified\npublic  tableCleared() (() \u003d\u003d\u003e ())\n\ttableCleared()() \u003d\u003d\nis not yet specified\npublic  nowSmoking(nat) (nat \u003d\u003d\u003e ())\n\tnowSmoking(nat)(smokerNumber) \u003d\u003d\nis not yet specified\npublic static  public static ElementToNat: (Element -\u003e nat)\n\tElementToNat(elm) \u003d\u003d\n(cases elm :\n\u003cTobacco\u003e -\u003e 1,\n\u003cPaper\u003e -\u003e 2,\n\u003cMatch\u003e -\u003e 3\n end)\nend gui_Graphics\n","class IO\npublic static  filedirective \u003d filedirective\npublic static  public static writeval[(p)]: (@p -\u003e bool)\n\twriteval(val) \u003d\u003d\nis not yet specified\npublic static  public static fwriteval[(p)]: (seq1 of (char) * @p * filedirective -\u003e bool)\n\tfwriteval(filename, val, fdir) \u003d\u003d\nis not yet specified\npublic static  public static freadval[(p)]: (seq1 of (char) -\u003e (bool * [@p]))\n\tfreadval(filename) \u003d\u003d\nis not yet specified\n\tpost let mk_(b, t):(bool * [@p]) \u003d RESULT in ((not b) \u003d\u003e (t \u003d nil))\npublic  echo(seq of (char)) (seq of (char) \u003d\u003d\u003e bool)\n\techo(seq of (char))(text) \u003d\u003d\nfecho(\"\", text, nil)\npublic  fecho(seq of (char), seq of (char), [filedirective]) (seq of (char) * seq of (char) * [filedirective] \u003d\u003d\u003e bool)\n\tfecho(seq of (char), seq of (char), [filedirective])(filename, text, fdir) \u003d\u003d\nis not yet specified\n\tpre ((filename \u003d \"\") \u003c\u003d\u003e (fdir \u003d nil))\npublic  ferror() (() \u003d\u003d\u003e seq of (char))\n\tferror()() \u003d\u003d\nis not yet specified\npublic static  print(?) (? \u003d\u003d\u003e ())\n\tprint(?)(arg) \u003d\u003d\nis not yet specified\npublic static  println(?) (? \u003d\u003d\u003e ())\n\tprintln(?)(arg) \u003d\u003d\nis not yet specified\npublic static  printf(seq of (char), seq of (?)) (seq of (char) * seq of (?) \u003d\u003d\u003e ())\n\tprintf(seq of (char), seq of (?))(format, args) \u003d\u003d\nis not yet specified\nend IO\n","class MATH\npublic static  public static sin: (real +\u003e real)\n\tsin(v) \u003d\u003d\nis not yet specified\n\tpost ((abs RESULT) \u003c\u003d 1)\npublic static  public static cos: (real +\u003e real)\n\tcos(v) \u003d\u003d\nis not yet specified\n\tpost ((abs RESULT) \u003c\u003d 1)\npublic static  public static tan: (real -\u003e real)\n\ttan(a) \u003d\u003d\nis not yet specified\n\tpre (cos(a) \u003c\u003e 0)\npublic static  public static cot: (real -\u003e real)\n\tcot(a) \u003d\u003d\nis not yet specified\n\tpre (sin(a) \u003c\u003e 0)\npublic static  public static asin: (real -\u003e real)\n\tasin(a) \u003d\u003d\nis not yet specified\n\tpre ((abs a) \u003c\u003d 1)\npublic static  public static acos: (real -\u003e real)\n\tacos(a) \u003d\u003d\nis not yet specified\n\tpre ((abs a) \u003c\u003d 1)\npublic static  public static atan: (real +\u003e real)\n\tatan(v) \u003d\u003d\nis not yet specified\npublic static  public static acot: (real +\u003e real)\n\tacot(a) \u003d\u003d\natan((1 / a))\n\tpre (a \u003c\u003e 0)\npublic static  public static sqrt: (real -\u003e real)\n\tsqrt(a) \u003d\u003d\nis not yet specified\n\tpre (a \u003e\u003d 0)\npublic static  public static pi_f: (() +\u003e real)\n\tpi_f() \u003d\u003d\nis not yet specified\npublic static  srand(int) (int \u003d\u003d\u003e ())\n\tsrand(int)(a) \u003d\u003d\nlet -:int \u003d MATH`srand2(a) in skip\n\tpre (a \u003e\u003d -1)\npublic static  rand(int) (int \u003d\u003d\u003e int)\n\trand(int)(a) \u003d\u003d\nis not yet specified\npublic static  srand2(int) (int \u003d\u003d\u003e int)\n\tsrand2(int)(a) \u003d\u003d\nis not yet specified\n\tpre (a \u003e\u003d -1)\npublic static  public static exp: (real +\u003e real)\n\texp(a) \u003d\u003d\nis not yet specified\npublic static  public static ln: (real -\u003e real)\n\tln(a) \u003d\u003d\nis not yet specified\n\tpre (a \u003e 0)\npublic static  public static log: (real -\u003e real)\n\tlog(a) \u003d\u003d\nis not yet specified\n\tpre (a \u003e 0)\npublic static  public static fac: (nat -\u003e nat1)\n\tfac(a) \u003d\u003d\nis not yet specified\n\tpre (a \u003c 21)\npublic static  pi:real \u003d 3.141592653589793\nend MATH\n","class VDMUtil\npublic static  public static set2seq[(T)]: (set of (@T) +\u003e seq of (@T))\n\tset2seq(x) \u003d\u003d\nis not yet specified\npublic static  public static get_file_pos: (() +\u003e [(seq of (char) * nat * nat * seq of (char) * seq of (char))])\n\tget_file_pos() \u003d\u003d\nis not yet specified\npublic static  public static val2seq_of_char[(T)]: (@T +\u003e seq of (char))\n\tval2seq_of_char(x) \u003d\u003d\nis not yet specified\npublic static  public static seq_of_char2val[(p)]: (seq1 of (char) -\u003e (bool * [@p]))\n\tseq_of_char2val(s) \u003d\u003d\nis not yet specified\n\tpost let mk_(b, t):(bool * [@p]) \u003d RESULT in ((not b) \u003d\u003e (t \u003d nil))\npublic static  public static classname[(T)]: (@T -\u003e [seq1 of (char)])\n\tclassname(s) \u003d\u003d\nis not yet specified\nend VDMUtil\n"]