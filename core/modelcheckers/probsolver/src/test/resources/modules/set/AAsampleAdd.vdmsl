types
  String = seq of char;
  Registry = set of Person;

state Person of
    ssn : nat
    name : seq of char
end

--state Registry of
--  persons : set of Person
--  init persons == persons = {mk_Person(1, "Jane Doe")};
--end

operations
Add(ps: Registry, n:String)
post m in set ps and m.name = n
;
--operations
--  Add(name:String)
--    ext wr persons : set of Person
 --   post mk_Person(ssn, name) in set persons --and not exists p in set persons & p.ssn = k
--    ;

test:() ==> String
test() == let x="John Doe", ps = {mk_Person(1, "Jane Doe")} in (
  return Add(ps, x);
);
