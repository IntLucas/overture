//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2009-02-15 by the VDM++ to JAVA Code Generator
// (v8.2b - Tue 03-Feb-2009 11:50:55)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.traces;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
@SuppressWarnings("unchecked")
// ***** VDMTOOLS END Name=imports



public class VDMJToolBox extends ToolBox {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=child KEEP=NO
  protected external_VDMJToolBox child = new external_VDMJToolBox(this);
// ***** VDMTOOLS END Name=child


// ***** VDMTOOLS START Name=vdm_init_VDMJToolBox KEEP=NO
  private void vdm_init_VDMJToolBox () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_VDMJToolBox


// ***** VDMTOOLS START Name=VDMJToolBox KEEP=NO
  public VDMJToolBox () throws CGException {
    vdm_init_VDMJToolBox();
  }
// ***** VDMTOOLS END Name=VDMJToolBox


// ***** VDMTOOLS START Name=VDMJToolBox#1|HashSet KEEP=NO
  public VDMJToolBox (final HashSet sp) throws CGException {

    vdm_init_VDMJToolBox();
    specsFiles = (HashSet) UTIL.clone(sp);
  }
// ***** VDMTOOLS END Name=VDMJToolBox#1|HashSet


// ***** VDMTOOLS START Name=InitToolbox KEEP=NO
  public void InitToolbox () throws CGException {
    child.impl_InitToolbox();
  }
// ***** VDMTOOLS END Name=InitToolbox


// ***** VDMTOOLS START Name=runTestCase#2|String|Vector KEEP=NO
  protected Vector runTestCase (final String className, final Vector expressions) throws CGException {
    return child.impl_runTestCase(className, expressions);
  }
// ***** VDMTOOLS END Name=runTestCase#2|String|Vector


// ***** VDMTOOLS START Name=IsPreError#1 KEEP=YES
  public Boolean IsPreError (final ToolBox.InterpreterResult res) throws CGException {

   return (!res.successfull && res.output.startsWith("Error 4071"));
     
  }
// ***** VDMTOOLS END Name=IsPreError#1


// ***** VDMTOOLS START Name=runtrace#2|String|Vector KEEP=NO
  public Vector runtrace (final String classname, final Vector statements) throws CGException {
    return child.impl_runtrace(classname, statements);
  }
// ***** VDMTOOLS END Name=runtrace#2|String|Vector

}
;
