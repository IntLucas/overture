{"UseStack|Test2Dir2|4" |-> ["let z  =4  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|Test2Dir2|3" |-> ["let z  =5  in s.Push(z)"], "UseStack|Test2Dir2|2" |-> ["let z  =4  in s.Push(z)"], "UseStack|Test2Dir2|1" |-> [], "UseStack|Test2Dir2|8" |-> ["let z  =4  in s.Push(z)", "let z  =4  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|Test2Dir2|7" |-> ["let z  =5  in s.Push(z)", "let z  =5  in s.Push(z)"], "UseStack|Test2Dir2|6" |-> ["let z  =4  in s.Push(z)", "let z  =5  in s.Push(z)"], "UseStack|Test2Dir|1" |-> ["s2.Reset()"], "UseStack|Test2Dir2|5" |-> ["let z  =5  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|Test2Dir|2" |-> ["s2.Reset()", "let a  =1 , b  =2  in s.Push(a)", "let a  =1 , b  =2  in s2.Push(b)"], "UseStack|PushBeforePop|1" |-> ["s.Reset()", "let x  =1  in s.Push(x)", "s.Pop()"], "UseStack|Test2Dir2|9" |-> ["let z  =5  in s.Push(z)", "let z  =4  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|PushBeforePop|4" |-> ["s.Reset()", "let x  =2  in s.Push(x)", "s.Pop()", "s.Pop()"], "UseStack|PushBeforePop|3" |-> ["s.Reset()", "let x  =1  in s.Push(x)", "s.Pop()", "s.Pop()"], "UseStack|PushBeforePop|2" |-> ["s.Reset()", "let x  =2  in s.Push(x)", "s.Pop()"], "UseStack|Test2Dir2|13" |-> ["let z  =5  in s.Push(z)", "let z  =4  in s.Push(z)", "let z  =5  in s.Push(z)"], "UseStack|Test2Dir2|12" |-> ["let z  =4  in s.Push(z)", "let z  =4  in s.Push(z)", "let z  =5  in s.Push(z)"], "UseStack|Test2Dir2|11" |-> ["let z  =5  in s.Push(z)", "let z  =5  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|Test2Dir2|10" |-> ["let z  =4  in s.Push(z)", "let z  =5  in s.Push(z)", "let z  =4  in s.Push(z)"], "UseStack|Test2Dir2|15" |-> ["let z  =5  in s.Push(z)", "let z  =5  in s.Push(z)", "let z  =5  in s.Push(z)"], "UseStack|Test2Dir2|14" |-> ["let z  =4  in s.Push(z)", "let z  =5  in s.Push(z)", "let z  =5  in s.Push(z)"]}