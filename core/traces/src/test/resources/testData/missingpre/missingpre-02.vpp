class Stack

  instance variables
    stack : seq of set of int := [];

  operations

    public
    Reset : () ==> ()
    Reset () ==
      stack := [];

    public
    Pop : () ==> set of int
    Pop() ==
      def res = hd stack in
        (stack := tl stack;
         return res)
--    pre stack <> []
    post stack~ = [RESULT]^stack;

    public Push: set of int ==> ()
    Push(elem) ==
      if elem = {}
      then error
      else stack := stack ^[elem];

    public
    Top : () ==> set of int
    Top() ==
      return (hd stack);

 
end Stack
class UseStack

instance variables

  s : Stack := new Stack();

traces

  PushBeforePop : let x = {197,...,73}
                  in
                    s.Push(x); s.Pop(){1,3}; s.Top()
 
end UseStack