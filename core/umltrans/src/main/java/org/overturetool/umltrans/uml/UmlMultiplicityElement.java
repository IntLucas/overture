//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2009-08-09 by the VDM++ to JAVA Code Generator
// (v8.2.1b - Wed 15-Jul-2009 14:09:22)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans.uml;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class UmlMultiplicityElement extends IUmlMultiplicityElement {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIsOrdered KEEP=NO
  private Boolean ivIsOrdered = null;
// ***** VDMTOOLS END Name=ivIsOrdered

// ***** VDMTOOLS START Name=ivIsUnique KEEP=NO
  private Boolean ivIsUnique = null;
// ***** VDMTOOLS END Name=ivIsUnique

// ***** VDMTOOLS START Name=ivLower KEEP=NO
  private Long ivLower = null;
// ***** VDMTOOLS END Name=ivLower

// ***** VDMTOOLS START Name=ivUpper KEEP=NO
  private Long ivUpper = null;
// ***** VDMTOOLS END Name=ivUpper


// ***** VDMTOOLS START Name=vdm_init_UmlMultiplicityElement KEEP=NO
  private void vdm_init_UmlMultiplicityElement () throws CGException {
    try {

      ivIsOrdered = null;
      ivIsUnique = null;
      ivLower = null;
      ivUpper = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_UmlMultiplicityElement


// ***** VDMTOOLS START Name=UmlMultiplicityElement KEEP=NO
  public UmlMultiplicityElement () throws CGException {
    vdm_init_UmlMultiplicityElement();
  }
// ***** VDMTOOLS END Name=UmlMultiplicityElement


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("MultiplicityElement");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IUmlVisitor KEEP=NO
  public void accept (final IUmlVisitor pVisitor) throws CGException {
    pVisitor.visitMultiplicityElement((IUmlMultiplicityElement) this);
  }
// ***** VDMTOOLS END Name=accept#1|IUmlVisitor


// ***** VDMTOOLS START Name=UmlMultiplicityElement#4|Boolean|Boolean|Long|Long KEEP=NO
  public UmlMultiplicityElement (final Boolean p1, final Boolean p2, final Long p3, final Long p4) throws CGException {

    vdm_init_UmlMultiplicityElement();
    {

      setIsOrdered(p1);
      setIsUnique(p2);
      setLower(p3);
      setUpper(p4);
    }
  }
// ***** VDMTOOLS END Name=UmlMultiplicityElement#4|Boolean|Boolean|Long|Long


// ***** VDMTOOLS START Name=UmlMultiplicityElement#6|Boolean|Boolean|Long|Long|Long|Long KEEP=NO
  public UmlMultiplicityElement (final Boolean p1, final Boolean p2, final Long p3, final Long p4, final Long line, final Long column) throws CGException {

    vdm_init_UmlMultiplicityElement();
    {

      setIsOrdered(p1);
      setIsUnique(p2);
      setLower(p3);
      setUpper(p4);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=UmlMultiplicityElement#6|Boolean|Boolean|Long|Long|Long|Long


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("isOrdered");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIsOrdered((Boolean) data.get(fname));
    }
    {

      String fname = new String("isUnique");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setIsUnique((Boolean) data.get(fname));
    }
    {

      String fname = new String("lower");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setLower(UTIL.NumberToLong(data.get(fname)));
    }
    {

      String fname = new String("upper");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setUpper(UTIL.NumberToLong(data.get(fname)));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getIsOrdered KEEP=NO
  public Boolean getIsOrdered () throws CGException {
    return ivIsOrdered;
  }
// ***** VDMTOOLS END Name=getIsOrdered


// ***** VDMTOOLS START Name=setIsOrdered#1|Boolean KEEP=NO
  public void setIsOrdered (final Boolean parg) throws CGException {
    ivIsOrdered = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setIsOrdered#1|Boolean


// ***** VDMTOOLS START Name=getIsUnique KEEP=NO
  public Boolean getIsUnique () throws CGException {
    return ivIsUnique;
  }
// ***** VDMTOOLS END Name=getIsUnique


// ***** VDMTOOLS START Name=setIsUnique#1|Boolean KEEP=NO
  public void setIsUnique (final Boolean parg) throws CGException {
    ivIsUnique = (Boolean) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setIsUnique#1|Boolean


// ***** VDMTOOLS START Name=getLower KEEP=NO
  public Long getLower () throws CGException {
    return ivLower;
  }
// ***** VDMTOOLS END Name=getLower


// ***** VDMTOOLS START Name=setLower#1|Long KEEP=NO
  public void setLower (final Long parg) throws CGException {
    ivLower = UTIL.NumberToLong(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setLower#1|Long


// ***** VDMTOOLS START Name=getUpper KEEP=NO
  public Long getUpper () throws CGException {
    return ivUpper;
  }
// ***** VDMTOOLS END Name=getUpper


// ***** VDMTOOLS START Name=hasUpper KEEP=NO
  public Boolean hasUpper () throws CGException {
    return new Boolean(!UTIL.equals(ivUpper, null));
  }
// ***** VDMTOOLS END Name=hasUpper


// ***** VDMTOOLS START Name=setUpper#1|Long KEEP=NO
  public void setUpper (final Long parg) throws CGException {
    ivUpper = UTIL.NumberToLong(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setUpper#1|Long

}
;
