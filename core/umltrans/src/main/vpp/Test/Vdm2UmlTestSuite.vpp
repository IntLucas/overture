\begin{vdm_al}
class Vdm2UmlTestSuite 


operations
public static suite: () ==> Test
suite () ==
(
  dcl ts : TestSuite := new TestSuite("VDM - UML Total test");
  ts.addTest(new Vdm2UmlTest("Vdm2UmlTest"));
  ts.addTest(new Uml2XmiEATest("Uml2XmiEATest"));
  --ts.addTest(new Uml2XmiEclipseUmlTest("Uml2XmiEclipseUmlTest"));
  ts.addTest(new Uml2VdmTest("Uml2VdmTest"));
  ts.addTest(new Vdm2UmlActiveClassTest("Vdm2UmlActiveClassTest"));
  ts.addTest(new Uml2VdmTracesTest("Uml2VdmTracesTest"));
  return ts;
);


public Execute : () ==> ()
Execute() ==
(
  dcl ntr : TestResult := new TestResult();
  let ts = suite()
  in
  (
    ts.run(ntr);
    
    Util`Print("Test Suite: " ^ts.getName());
    if ntr.wasSuccessful() then
      Util`Print("\n:-) passed")
    else
    (
      Util`Print("\nNumber of errors: " ^ Util`ToString[nat](ntr.errorCount()));
      Util`Print("\nNumber of faild : " ^ Util`ToString[nat](ntr.failureCount()));
    );
    Util`Print("\nCount of TestCases and TestSuites: " ^ Util`ToString[nat](ntr.runCount()));
    for all testName in set ts.getNames() 
    do 
      Util`Print("\n " ^testName);
  );
);


end Vdm2UmlTestSuite 
\end{vdm_al}