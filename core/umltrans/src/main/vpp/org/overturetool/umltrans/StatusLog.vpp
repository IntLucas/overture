class StatusLog

instance variables

log : seq of ClassStatus := [];

operations

public info : seq of char ==> ()
info(message)== skip;

public warn : seq of char ==> ()
warn(message)== skip;

public addNewClassInfo : seq of char ==> ()
addNewClassInfo(name)==
  log := log ^ [new ClassStatus(name,"",getTime(),0)];
 
public addNewClassInfo : seq of char * seq of char ==> ()
addNewClassInfo(name,i)==
  log := log ^ [new ClassStatus(name,i,getTime(),0)]; 
  
public endClass : seq of char * seq of char ==> ()
endClass(name,id) ==
   let a = { setdd(c,id) | c in set elems log & c.name = name} in skip; 
 
public endClass : seq of char  ==> ()
endClass(name) ==
   let a = { setd(c) | c in set elems log & c.name = name} in skip; 

setdd: ClassStatus * seq of char ==> nat
setdd(node,id) == 
(
node.setId(id);
node.setEndTime( getTime());
return 0;
);

setd: ClassStatus * seq of char ==> nat
setd(node,id) == 
(
node.setId(id);
node.setEndTime( getTime());
return 0;
);

setd: ClassStatus  ==> nat
setd(node) == 
(

node.setEndTime( getTime());
return 0;
);

private getTime : () ==> nat
getTime() == return 0;

public mappingNotSupported : IOmlValueDefinition ==> ()
mappingNotSupported(item) == skip;

public mappingNotSupported : seq of IOmlPattern * IOmlType ==> ()
mappingNotSupported(items,type) == skip;
 
end StatusLog