<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="22" line="23" message="DecreaseBal(nat): subtype obligation in 'Purse' (ElectronicPursePP) at line 23:22&#10;(balance - sum) &gt;= 0&#10;" number="0" object="" resource="ElectronicPursePP" toString="DecreaseBal(nat): subtype obligation in 'Purse' (ElectronicPursePP) at line 23:22&#10;(balance - sum) &gt;= 0&#10;"/>
<po column="5" line="70" message="Transfer(CardId, CardId, nat): map apply obligation in 'System' (ElectronicPursePP) at line 70:5&#10;(({fromId, toId} subset (dom Purses)) =&gt;&#10;  ((fromId &lt;&gt; toId) =&gt;&#10;    fromId in set dom Purses))&#10;" number="0" object="" resource="ElectronicPursePP" toString="Transfer(CardId, CardId, nat): map apply obligation in 'System' (ElectronicPursePP) at line 70:5&#10;(({fromId, toId} subset (dom Purses)) =&gt;&#10;  ((fromId &lt;&gt; toId) =&gt;&#10;    fromId in set dom Purses))&#10;"/>
<po column="13" line="74" message="System(set of (Purse)): map set compatible obligation in 'System' (ElectronicPursePP) at line 74:13&#10;forall m1, m2 in set {{(p.GetCardNo)() |-&gt; p} | p in set PurseSet} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="ElectronicPursePP" toString="System(set of (Purse)): map set compatible obligation in 'System' (ElectronicPursePP) at line 74:13&#10;forall m1, m2 in set {{(p.GetCardNo)() |-&gt; p} | p in set PurseSet} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="8" line="72" message="System(set of (Purse)): state invariant obligation in 'System' (ElectronicPursePP) at line 72:8&#10;-- After System(set of (Purse)) constructor body&#10;(forall p in set (dom Purses) &amp; ((Purses(p).GetCardNo)() = p))&#10;" number="0" object="" resource="ElectronicPursePP" toString="System(set of (Purse)): state invariant obligation in 'System' (ElectronicPursePP) at line 72:8&#10;-- After System(set of (Purse)) constructor body&#10;(forall p in set (dom Purses) &amp; ((Purses(p).GetCardNo)() = p))&#10;"/>
<po column="20" line="87" message="TotalSum(seq of (Transaction)), tx: non-empty sequence obligation in 'System' (ElectronicPursePP) at line 87:20&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    tseq &lt;&gt; []))&#10;" number="0" object="" resource="ElectronicPursePP" toString="TotalSum(seq of (Transaction)), tx: non-empty sequence obligation in 'System' (ElectronicPursePP) at line 87:20&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    tseq &lt;&gt; []))&#10;"/>
<po column="1" line="83" message="TotalSum(seq of (Transaction)): recursive function obligation in 'System' (ElectronicPursePP) at line 83:1&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    (let tx:Transaction = (hd tseq) in&#10;      Len(tseq) &gt; Len((tl tseq)))))&#10;" number="0" object="" resource="ElectronicPursePP" toString="TotalSum(seq of (Transaction)): recursive function obligation in 'System' (ElectronicPursePP) at line 83:1&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    (let tx:Transaction = (hd tseq) in&#10;      Len(tseq) &gt; Len((tl tseq)))))&#10;"/>
<po column="31" line="89" message="TotalSum(seq of (Transaction)): non-empty sequence obligation in 'System' (ElectronicPursePP) at line 89:31&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    (let tx:Transaction = (hd tseq) in&#10;      tseq &lt;&gt; [])))&#10;" number="0" object="" resource="ElectronicPursePP" toString="TotalSum(seq of (Transaction)): non-empty sequence obligation in 'System' (ElectronicPursePP) at line 89:31&#10;(forall tseq:seq of (Transaction) &amp;&#10;  (not (tseq = []) =&gt;&#10;    (let tx:Transaction = (hd tseq) in&#10;      tseq &lt;&gt; [])))&#10;"/>
</result>
</testResult>
