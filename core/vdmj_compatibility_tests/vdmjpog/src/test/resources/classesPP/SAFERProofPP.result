<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="3" line="13" message="ControlCycle(SwitchPositions, HandGripPosition, RotCommand, SAFER, AAH): post condition obligation in 'SAFERSys' (SAFERProofPP) at line 13:3&#10;(forall mk_SwitchPositions(mode, aah):SwitchPositions, raw_grip:HandGripPosition, aah_cmd:RotCommand, saferstate:SAFER, aahstate:AAH &amp;&#10;  post_ControlCycle(mk_SwitchPositions(mode, aah), raw_grip, aah_cmd, saferstate, aahstate, let mk_SAFER(clock):SAFER = saferstate, grip_cmd:SixDofCommand = GripCommand(raw_grip, mode), thrusters:ThrusterSet = SelectedThrusters(grip_cmd, aah_cmd, (aahstate.active_axes), (aahstate.ignore_hcm)), aahstate':AAH = Transition(aah, grip_cmd, clock, aahstate), saferstate':SAFER = mu(saferstate, clock |-&gt; (clock + 1)) in mk_(thrusters, saferstate', aahstate')))&#10;" number="0" object="" resource="SAFERProofPP" toString="ControlCycle(SwitchPositions, HandGripPosition, RotCommand, SAFER, AAH): post condition obligation in 'SAFERSys' (SAFERProofPP) at line 13:3&#10;(forall mk_SwitchPositions(mode, aah):SwitchPositions, raw_grip:HandGripPosition, aah_cmd:RotCommand, saferstate:SAFER, aahstate:AAH &amp;&#10;  post_ControlCycle(mk_SwitchPositions(mode, aah), raw_grip, aah_cmd, saferstate, aahstate, let mk_SAFER(clock):SAFER = saferstate, grip_cmd:SixDofCommand = GripCommand(raw_grip, mode), thrusters:ThrusterSet = SelectedThrusters(grip_cmd, aah_cmd, (aahstate.active_axes), (aahstate.ignore_hcm)), aahstate':AAH = Transition(aah, grip_cmd, clock, aahstate), saferstate':SAFER = mu(saferstate, clock |-&gt; (clock + 1)) in mk_(thrusters, saferstate', aahstate')))&#10;"/>
<po column="37" line="57" message="null_tran_command: map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 57:37&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set tran_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="SAFERProofPP" toString="null_tran_command: map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 57:37&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set tran_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="37" line="57" message="null_tran_command: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 57:37&#10;inv_TranCommand({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}, map (TranAxis) to (AxisCommand)))&#10;" number="0" object="" resource="SAFERProofPP" toString="null_tran_command: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 57:37&#10;inv_TranCommand({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}, map (TranAxis) to (AxisCommand)))&#10;"/>
<po column="35" line="59" message="null_rot_command: map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 59:35&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set rot_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="SAFERProofPP" toString="null_rot_command: map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 59:35&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set rot_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="35" line="59" message="null_rot_command: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 59:35&#10;inv_RotCommand({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}, map (RotAxis) to (AxisCommand)))&#10;" number="0" object="" resource="SAFERProofPP" toString="null_rot_command: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 59:35&#10;inv_RotCommand({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}, map (RotAxis) to (AxisCommand)))&#10;"/>
<po column="13" line="116" message="Transition(ControlButton, SixDofCommand, nat, AAH), aahstate': map apply obligation in 'SAFERSys' (SAFERProofPP) at line 116:13&#10;(forall button_pos:ControlButton, hcm_cmd:SixDofCommand, clock:nat, aahstate:AAH &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    (not starting =&gt;&#10;      ((engage &lt;&gt; &lt;AAH_off&gt;) =&gt;&#10;        ((a in set active_axes) =&gt;&#10;          a in set dom (hcm_cmd.rot))))))&#10;" number="0" object="" resource="SAFERProofPP" toString="Transition(ControlButton, SixDofCommand, nat, AAH), aahstate': map apply obligation in 'SAFERSys' (SAFERProofPP) at line 116:13&#10;(forall button_pos:ControlButton, hcm_cmd:SixDofCommand, clock:nat, aahstate:AAH &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    (not starting =&gt;&#10;      ((engage &lt;&gt; &lt;AAH_off&gt;) =&gt;&#10;        ((a in set active_axes) =&gt;&#10;          a in set dom (hcm_cmd.rot))))))&#10;"/>
<po column="26" line="119" message="Transition(ControlButton, SixDofCommand, nat, AAH), aahstate': map apply obligation in 'SAFERSys' (SAFERProofPP) at line 119:26&#10;(forall button_pos:ControlButton, hcm_cmd:SixDofCommand, clock:nat, aahstate:AAH &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    (starting =&gt;&#10;      a in set dom (hcm_cmd.rot))))&#10;" number="0" object="" resource="SAFERProofPP" toString="Transition(ControlButton, SixDofCommand, nat, AAH), aahstate': map apply obligation in 'SAFERSys' (SAFERProofPP) at line 119:26&#10;(forall button_pos:ControlButton, hcm_cmd:SixDofCommand, clock:nat, aahstate:AAH &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    (starting =&gt;&#10;      a in set dom (hcm_cmd.rot))))&#10;"/>
<po column="5" line="136" message="ButtonTransition(EngageState, ControlButton, set of (RotAxis), nat, nat): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 136:5&#10;(forall estate:EngageState, button:ControlButton, active:set of (RotAxis), clock:nat, timeout:nat &amp;&#10;  mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Down&gt;))&#10;" number="0" object="" resource="SAFERProofPP" toString="ButtonTransition(EngageState, ControlButton, set of (RotAxis), nat, nat): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 136:5&#10;(forall estate:EngageState, button:ControlButton, active:set of (RotAxis), clock:nat, timeout:nat &amp;&#10;  mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Down&gt;))&#10;"/>
<po column="16" line="182" message="GripCommand(HandGripPosition, ControlModeSwitch), tran: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 182:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;X&gt; |-&gt; horiz}, {&lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}, {&lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="0" object="" resource="SAFERProofPP" toString="GripCommand(HandGripPosition, ControlModeSwitch), tran: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 182:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;X&gt; |-&gt; horiz}, {&lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}, {&lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="16" line="185" message="GripCommand(HandGripPosition, ControlModeSwitch), rot: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 185:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, {&lt;Pitch&gt; |-&gt; twist}, {&lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="0" object="" resource="SAFERProofPP" toString="GripCommand(HandGripPosition, ControlModeSwitch), rot: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 185:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, {&lt;Pitch&gt; |-&gt; twist}, {&lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="24" line="189" message="GripCommand(HandGripPosition, ControlModeSwitch): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 189:24&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)} in&#10;    inv_TranCommand(tran) and (is_(tran, map (TranAxis) to (AxisCommand)))))&#10;" number="0" object="" resource="SAFERProofPP" toString="GripCommand(HandGripPosition, ControlModeSwitch): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 189:24&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)} in&#10;    inv_TranCommand(tran) and (is_(tran, map (TranAxis) to (AxisCommand)))))&#10;"/>
<po column="29" line="189" message="GripCommand(HandGripPosition, ControlModeSwitch): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 189:29&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)} in&#10;    inv_RotCommand(rot) and (is_(rot, map (RotAxis) to (AxisCommand)))))&#10;" number="0" object="" resource="SAFERProofPP" toString="GripCommand(HandGripPosition, ControlModeSwitch): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 189:29&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then twist&#10;  else &lt;Zero&gt;)} in&#10;    inv_RotCommand(rot) and (is_(rot, map (RotAxis) to (AxisCommand)))))&#10;"/>
<po column="31" line="207" message="RotCmdsPresent(RotCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 207:31&#10;(forall cmd:RotCommand &amp;&#10;  (forall a in set (dom cmd) &amp;&#10;    a in set dom cmd))&#10;" number="0" object="" resource="SAFERProofPP" toString="RotCmdsPresent(RotCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 207:31&#10;(forall cmd:RotCommand &amp;&#10;  (forall a in set (dom cmd) &amp;&#10;    a in set dom cmd))&#10;"/>
<po column="8" line="211" message="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 211:8&#10;(forall tran:TranCommand &amp;&#10;  &lt;X&gt; in set dom tran)&#10;" number="0" object="" resource="SAFERProofPP" toString="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 211:8&#10;(forall tran:TranCommand &amp;&#10;  &lt;X&gt; in set dom tran)&#10;"/>
<po column="40" line="212" message="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 212:40&#10;(forall tran:TranCommand &amp;&#10;  ((tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    &lt;X&gt; in set dom tran))&#10;" number="0" object="" resource="SAFERProofPP" toString="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 212:40&#10;(forall tran:TranCommand &amp;&#10;  ((tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    &lt;X&gt; in set dom tran))&#10;"/>
<po column="40" line="214" message="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 214:40&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    ((tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      &lt;Y&gt; in set dom tran)))&#10;" number="0" object="" resource="SAFERProofPP" toString="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 214:40&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    ((tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      &lt;Y&gt; in set dom tran)))&#10;"/>
<po column="40" line="216" message="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 216:40&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    (not (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      ((tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;        &lt;Z&gt; in set dom tran))))&#10;" number="0" object="" resource="SAFERProofPP" toString="PrioritizedTranCmd(TranCommand): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 216:40&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    (not (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      ((tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;        &lt;Z&gt; in set dom tran))))&#10;"/>
<po column="3" line="209" message="PrioritizedTranCmd(TranCommand): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 209:3&#10;(forall tran:TranCommand &amp;&#10;  inv_TranCommand((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else null_tran_command)) and (is_((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else null_tran_command), map (TranAxis) to (AxisCommand))))&#10;" number="0" object="" resource="SAFERProofPP" toString="PrioritizedTranCmd(TranCommand): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 209:3&#10;(forall tran:TranCommand &amp;&#10;  inv_TranCommand((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else null_tran_command)) and (is_((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else null_tran_command), map (TranAxis) to (AxisCommand))))&#10;"/>
<po column="49" line="222" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)), aah_axes: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 222:49&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    a in set dom hcm_rot))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)), aah_axes: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 222:49&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (forall a in set rot_axis_set &amp;&#10;    a in set dom hcm_rot))&#10;"/>
<po column="8" line="223" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 223:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; aah(a)} | a in set aah_axes} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 223:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; aah(a)} | a in set aah_axes} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;"/>
<po column="15" line="223" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 223:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set aah_axes &amp;&#10;      a in set dom aah)))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 223:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set aah_axes &amp;&#10;      a in set dom aah)))&#10;"/>
<po column="8" line="224" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 224:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; hcm_rot(a)} | a in set (rot_axis_set \ aah_axes)} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 224:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; hcm_rot(a)} | a in set (rot_axis_set \ aah_axes)} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;"/>
<po column="15" line="224" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 224:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set (rot_axis_set \ aah_axes) &amp;&#10;      a in set dom hcm_rot)))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map apply obligation in 'SAFERSys' (SAFERProofPP) at line 224:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set (rot_axis_set \ aah_axes) &amp;&#10;      a in set dom hcm_rot)))&#10;"/>
<po column="8" line="223" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map compatible obligation in 'SAFERSys' (SAFERProofPP) at line 223:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall ldom1 in set dom {a |-&gt; aah(a) | a in set aah_axes}, rdom2 in set dom {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)} &amp;&#10;    ldom1 = rdom2 =&gt; {a |-&gt; aah(a) | a in set aah_axes}(ldom1) = {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)}(rdom2)))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): map compatible obligation in 'SAFERSys' (SAFERProofPP) at line 223:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall ldom1 in set dom {a |-&gt; aah(a) | a in set aah_axes}, rdom2 in set dom {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)} &amp;&#10;    ldom1 = rdom2 =&gt; {a |-&gt; aah(a) | a in set aah_axes}(ldom1) = {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)}(rdom2)))&#10;"/>
<po column="3" line="219" message="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 219:3&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  inv_RotCommand(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)})) and (is_(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)}), map (RotAxis) to (AxisCommand))))&#10;" number="0" object="" resource="SAFERProofPP" toString="CombinedRotCmds(RotCommand, RotCommand, set of (RotAxis)): subtype obligation in 'SAFERSys' (SAFERProofPP) at line 219:3&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  inv_RotCommand(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)})) and (is_(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (rot_axis_set \ aah_axes)}), map (RotAxis) to (AxisCommand))))&#10;"/>
<po column="5" line="240" message="BFThrusters(AxisCommand, AxisCommand, AxisCommand): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 240:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;" number="0" object="" resource="SAFERProofPP" toString="BFThrusters(AxisCommand, AxisCommand, AxisCommand): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 240:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;"/>
<po column="5" line="281" message="LRUDThrusters(AxisCommand, AxisCommand, AxisCommand): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 281:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;" number="0" object="" resource="SAFERProofPP" toString="LRUDThrusters(AxisCommand, AxisCommand, AxisCommand): cases exhaustive obligation in 'SAFERSys' (SAFERProofPP) at line 281:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;"/>
<po column="28" line="323" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:28&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;X&gt; in set dom tran)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:28&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;X&gt; in set dom tran)&#10;"/>
<po column="38" line="323" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:38&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:38&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;"/>
<po column="51" line="323" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:51&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Yaw&gt; in set dom rot)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_mandatory, bf_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 323:51&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Yaw&gt; in set dom rot)&#10;"/>
<po column="30" line="325" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:30&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Y&gt; in set dom tran)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:30&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Y&gt; in set dom tran)&#10;"/>
<po column="40" line="325" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:40&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Z&gt; in set dom tran)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:40&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Z&gt; in set dom tran)&#10;"/>
<po column="50" line="325" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:50&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_mandatory, lrud_optional: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 325:50&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;"/>
<po column="21" line="326" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 326:21&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), bf_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 326:21&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;"/>
<po column="23" line="329" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 329:23&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 329:23&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;"/>
<po column="49" line="329" message="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 329:49&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  ((rot(&lt;Pitch&gt;) = &lt;Zero&gt;) =&gt;&#10;    &lt;Yaw&gt; in set dom rot))&#10;" number="0" object="" resource="SAFERProofPP" toString="SelectedThrusters(SixDofCommand, RotCommand, set of (RotAxis), set of (RotAxis)), lrud_thr: map apply obligation in 'SAFERSys' (SAFERProofPP) at line 329:49&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  ((rot(&lt;Pitch&gt;) = &lt;Zero&gt;) =&gt;&#10;    &lt;Yaw&gt; in set dom rot))&#10;"/>
<po column="47" line="345" message="BigTest(), all_rot_commands: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 345:47&#10;(forall a, b, c in set axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="0" object="" resource="SAFERProofPP" toString="BigTest(), all_rot_commands: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 345:47&#10;(forall a, b, c in set axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="46" line="345" message="BigTest(), all_rot_commands: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 345:46&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set axis_command_set]}, set of (RotCommand))&#10;" number="0" object="" resource="SAFERProofPP" toString="BigTest(), all_rot_commands: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 345:46&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set axis_command_set]}, set of (RotCommand))&#10;"/>
<po column="13" line="349" message="BigTest(): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 349:13&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; ControlCycle(switch, grip, aah_law, safer, aah)} | switch in set switch_positions, grip in set grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="SAFERProofPP" toString="BigTest(): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 349:13&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; ControlCycle(switch, grip, aah_law, safer, aah)} | switch in set switch_positions, grip in set grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="47" line="360" message="HugeTest(), all_rot_commands: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 360:47&#10;(forall a, b, c in set axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="0" object="" resource="SAFERProofPP" toString="HugeTest(), all_rot_commands: map sequence compatible obligation in 'SAFERSys' (SAFERProofPP) at line 360:47&#10;(forall a, b, c in set axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="46" line="360" message="HugeTest(), all_rot_commands: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 360:46&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set axis_command_set]}, set of (RotCommand))&#10;" number="0" object="" resource="SAFERProofPP" toString="HugeTest(), all_rot_commands: subtype obligation in 'SAFERSys' (SAFERProofPP) at line 360:46&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set axis_command_set]}, set of (RotCommand))&#10;"/>
<po column="13" line="364" message="HugeTest(): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 364:13&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; ControlCycle(switch, grip, aah_law, safer, aah)} | switch in set switch_positions, grip in set all_grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="SAFERProofPP" toString="HugeTest(): map set compatible obligation in 'SAFERSys' (SAFERProofPP) at line 364:13&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; ControlCycle(switch, grip, aah_law, safer, aah)} | switch in set switch_positions, grip in set all_grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
</result>
</testResult>
