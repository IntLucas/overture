<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="30" line="90" message="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (AlarmPP) at line 90:30&#10;(forall p in set (dom sch) &amp;&#10;  p in set dom sch)&#10;" number="0" object="" resource="AlarmPP" toString="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (AlarmPP) at line 90:30&#10;(forall p in set (dom sch) &amp;&#10;  p in set dom sch)&#10;"/>
<po column="29" line="93" message="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (AlarmPP) at line 93:29&#10;((forall p in set (dom sch) &amp; (sch(p) &lt;&gt; {})) =&gt;&#10;  (forall a in set as &amp;&#10;    (forall p in set (dom sch) &amp;&#10;      p in set dom sch)))&#10;" number="0" object="" resource="AlarmPP" toString="PlantInv(set of (Alarm), map (Period) to (set of (Expert))): map apply obligation in 'Plant' (AlarmPP) at line 93:29&#10;((forall p in set (dom sch) &amp; (sch(p) &lt;&gt; {})) =&gt;&#10;  (forall a in set as &amp;&#10;    (forall p in set (dom sch) &amp;&#10;      p in set dom sch)))&#10;"/>
<po column="22" line="116" message="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (AlarmPP) at line 116:22&#10;(let expert:Expert = RESULT in&#10;  p in set dom schedule)&#10;" number="0" object="" resource="AlarmPP" toString="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (AlarmPP) at line 116:22&#10;(let expert:Expert = RESULT in&#10;  p in set dom schedule)&#10;"/>
<po column="8" line="106" message="ExpertToPage(Alarm, Period): operation post condition obligation in 'Plant' (AlarmPP) at line 106:8&#10;let expert:Expert = RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))&#10;" number="0" object="" resource="AlarmPP" toString="ExpertToPage(Alarm, Period): operation post condition obligation in 'Plant' (AlarmPP) at line 106:8&#10;let expert:Expert = RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))&#10;"/>
<po column="7" line="108" message="ExpertToPage(Alarm, Period): let be st existence obligation in 'Plant' (AlarmPP) at line 108:7&#10;exists expert in set schedule(p) &amp; ((a.GetReqQuali)() in set (expert.GetQuali)())&#10;" number="0" object="" resource="AlarmPP" toString="ExpertToPage(Alarm, Period): let be st existence obligation in 'Plant' (AlarmPP) at line 108:7&#10;exists expert in set schedule(p) &amp; ((a.GetReqQuali)() in set (expert.GetQuali)())&#10;"/>
<po column="21" line="108" message="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (AlarmPP) at line 108:21&#10;p in set dom schedule&#10;" number="0" object="" resource="AlarmPP" toString="ExpertToPage(Alarm, Period): map apply obligation in 'Plant' (AlarmPP) at line 108:21&#10;p in set dom schedule&#10;"/>
<po column="15" line="123" message="NumberOfExperts(Period): map apply obligation in 'Plant' (AlarmPP) at line 123:15&#10;p in set dom schedule&#10;" number="0" object="" resource="AlarmPP" toString="NumberOfExperts(Period): map apply obligation in 'Plant' (AlarmPP) at line 123:15&#10;p in set dom schedule&#10;"/>
<po column="25" line="131" message="ExpertIsOnDuty(Expert): map apply obligation in 'Plant' (AlarmPP) at line 131:25&#10;(forall p in set (dom schedule) &amp;&#10;  p in set dom schedule)&#10;" number="0" object="" resource="AlarmPP" toString="ExpertIsOnDuty(Expert): map apply obligation in 'Plant' (AlarmPP) at line 131:25&#10;(forall p in set (dom schedule) &amp;&#10;  p in set dom schedule)&#10;"/>
<po column="8" line="135" message="Plant(set of (Alarm), map (Period) to (set of (Expert))): state invariant obligation in 'Plant' (AlarmPP) at line 135:8&#10;-- After Plant(set of (Alarm), map (Period) to (set of (Expert))) constructor body&#10;PlantInv(alarms, schedule)&#10;" number="0" object="" resource="AlarmPP" toString="Plant(set of (Alarm), map (Period) to (set of (Expert))): state invariant obligation in 'Plant' (AlarmPP) at line 135:8&#10;-- After Plant(set of (Alarm), map (Period) to (set of (Expert))) constructor body&#10;PlantInv(alarms, schedule)&#10;"/>
<po column="33" line="162" message="plant: map sequence compatible obligation in 'Test1' (AlarmPP) at line 162:33&#10;forall m1, m2 in set {{p1 |-&gt; {ex1, ex4}}, {p2 |-&gt; {ex2, ex3}}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="0" object="" resource="AlarmPP" toString="plant: map sequence compatible obligation in 'Test1' (AlarmPP) at line 162:33&#10;forall m1, m2 in set {{p1 |-&gt; {ex1, ex4}}, {p2 |-&gt; {ex2, ex3}}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
</result>
</testResult>
