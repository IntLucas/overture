-- TCErrors: WARNING:5010:19,7 WARNING:5000:36,1 WARNING:5000:54,1 WARNING:5000:67,1 WARNING:5000:85,1 WARNING:5000:95,1 WARNING:5000:103,1 WARNING:5000:110,1 PROOFOBLIGATION: fDQ1OjI1IENoZWNrSW4sIG5ld19jLChmb3JhbGwgbmV3X2s6S2V5ICYKICAoKG5ld19rIG5vdCBpbiBzZXQgKGRlc2t+Lmlzc3VlZCkpID0+CiAgICByIGluIHNldCBkb20gKGRlc2t+LnByZXYpKSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDUwOjM3IENoZWNrSW4sKGZvcmFsbCBuZXdfazpLZXkgJgogICgobmV3X2sgbm90IGluIHNldCAoZGVza34uaXNzdWVkKSkgPT4KICAgIChsZXQgbmV3X2M6Q2FyZCA9IG1rX0NhcmQoKGRlc2t+LnByZXYpKHIpLCBuZXdfaykgaW4KICAgICAgKCgoZGVzay5pc3N1ZWQpID0gKChkZXNrfi5pc3N1ZWQpIHVuaW9uIHtuZXdfa30pKSA9PgogICAgICAgICgoKGRlc2sucHJldikgPSAoKGRlc2t+LnByZXYpICsrIHtyIHwtPiBuZXdfa30pKSA9PgogICAgICAgICAgKChnIGluIHNldCAoZG9tIGd1ZXN0c34pKSA9PgogICAgICAgICAgICBnIGluIHNldCBkb20gZ3Vlc3RzfikpKSkpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDUxOjE5IENoZWNrSW4sKGZvcmFsbCBuZXdfazpLZXkgJgogICgobmV3X2sgbm90IGluIHNldCAoZGVza34uaXNzdWVkKSkgPT4KICAgIChsZXQgbmV3X2M6Q2FyZCA9IG1rX0NhcmQoKGRlc2t+LnByZXYpKHIpLCBuZXdfaykgaW4KICAgICAgKCgoZGVzay5pc3N1ZWQpID0gKChkZXNrfi5pc3N1ZWQpIHVuaW9uIHtuZXdfa30pKSA9PgogICAgICAgICgoKGRlc2sucHJldikgPSAoKGRlc2t+LnByZXYpICsrIHtyIHwtPiBuZXdfa30pKSA9PgogICAgICAgICAgKG5vdCAoZyBpbiBzZXQgKGRvbSBndWVzdHN+KSkgPT4KICAgICAgICAgICAgZm9yYWxsIGxkb20xIGluIHNldCBkb20gZ3Vlc3RzfiwgcmRvbTIgaW4gc2V0IGRvbSB7ZyB8LT4ge25ld19jfX0gJgogICAgICAgICAgICBsZG9tMSA9IHJkb20yID0+IGd1ZXN0c34obGRvbTEpID0ge2cgfC0+IHtuZXdfY319KHJkb20yKSkpKSkpKQosbWFwIGNvbXBhdGlibGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDM2OjEgQ2hlY2tJbiwoZXhpc3RzIFtuZXdfazpLZXldICYgKChuZXdfayBub3QgaW4gc2V0IChkZXNrfi5pc3N1ZWQpKSBhbmQgbGV0IG5ld19jOkNhcmQgPSBta19DYXJkKChkZXNrfi5wcmV2KShyKSwgbmV3X2spIGluICgoKGRlc2suaXNzdWVkKSA9ICgoZGVza34uaXNzdWVkKSB1bmlvbiB7bmV3X2t9KSkgYW5kICgoKGRlc2sucHJldikgPSAoKGRlc2t+LnByZXYpICsrIHtyIHwtPiBuZXdfa30pKSBhbmQgKGlmIChnIGluIHNldCAoZG9tIGd1ZXN0c34pKQp0aGVuIChndWVzdHMgPSAoZ3Vlc3RzfiArKyB7ZyB8LT4gKGd1ZXN0c34oZykgdW5pb24ge25ld19jfSl9KSkKZWxzZSAoZ3Vlc3RzID0gKGd1ZXN0c34gbXVuaW9uIHtnIHwtPiB7bmV3X2N9fSkpKSkpKSkKLG9wZXJhdGlvbiBwb3N0IGNvbmRpdGlvbixudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDM2OjEgQ2hlY2tJbiwoZm9yYWxsIGc6R3Vlc3QsIHI6Um9vbSwgb2xkc3RhdGU6SG90ZWwgJgogIHByZV9DaGVja0luKGcsIHIsIG9sZHN0YXRlKSA9PgogIHBvc3RfQ2hlY2tJbihnLCByLCBvbGRzdGF0ZSwgbmV3c3RhdGUpKQosb3BlcmF0aW9uIHNhdGlmaWFiaWxpdHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDYxOjIxIEVudGVyLCgociBpbiBzZXQgKGRvbSBsb2NrcykpID0+CiAgKChnIGluIHNldCAoZG9tIGd1ZXN0cykpID0+CiAgICBnIGluIHNldCBkb20gZ3Vlc3RzKSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDYxOjM5IEVudGVyLCgociBpbiBzZXQgKGRvbSBsb2NrcykpID0+CiAgKChnIGluIHNldCAoZG9tIGd1ZXN0cykpID0+CiAgICAoZm9yYWxsIGMgaW4gc2V0IGd1ZXN0cyhnKSAmCiAgICAgIHIgaW4gc2V0IGRvbSBsb2NrcykpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDYxOjU3IEVudGVyLCgociBpbiBzZXQgKGRvbSBsb2NrcykpID0+CiAgKChnIGluIHNldCAoZG9tIGd1ZXN0cykpID0+CiAgICAoZm9yYWxsIGMgaW4gc2V0IGd1ZXN0cyhnKSAmCiAgICAgIChub3QgKChjLmZzdCkgPSBsb2NrcyhyKSkgPT4KICAgICAgICByIGluIHNldCBkb20gbG9ja3MpKSkpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDYzOjIyIEVudGVyLGcgaW4gc2V0IGRvbSBndWVzdHMKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDY0OjEzIEVudGVyLChmb3JhbGwgYyBpbiBzZXQgZ3Vlc3RzKGcpICYKICByIGluIHNldCBkb20gbG9ja3MpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDY1OjEzIEVudGVyLChmb3JhbGwgYyBpbiBzZXQgZ3Vlc3RzKGcpICYKICAobm90ICgoKGMuZnN0KSA9IGxvY2tzKHIpKSBhbmQgKGxvY2tzID0gKGxvY2tzfiArKyB7ciB8LT4gKGMuc25kKX0pKSkgPT4KICAgIHIgaW4gc2V0IGRvbSBsb2NrcykpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDU0OjEgRW50ZXIsKGV4aXN0cyBbYyBpbiBzZXQgZ3Vlc3RzKGcpXSAmICgoKChjLmZzdCkgPSBsb2NrcyhyKSkgYW5kIChsb2NrcyA9IChsb2Nrc34gKysge3IgfC0+IChjLnNuZCl9KSkpIG9yICgoKGMuc25kKSA9IGxvY2tzKHIpKSBhbmQgKGxvY2tzID0gbG9ja3N+KSkpKQosb3BlcmF0aW9uIHBvc3QgY29uZGl0aW9uLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDU0OjEgRW50ZXIsKGZvcmFsbCByOlJvb20sIGc6R3Vlc3QsIG9sZHN0YXRlOkhvdGVsICYKICBwcmVfRW50ZXIociwgZywgb2xkc3RhdGUpID0+CiAgcG9zdF9FbnRlcihyLCBnLCBvbGRzdGF0ZSwgbmV3c3RhdGUpKQosb3BlcmF0aW9uIHNhdGlmaWFiaWxpdHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDY5OjcgQ2hlY2tJbkV4cGwsZXhpc3RzIG5ld19rOktleSAmIChuZXdfayBub3QgaW4gc2V0IChkZXNrLmlzc3VlZCkpCixsZXQgYmUgc3QgZXhpc3RlbmNlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDcxOjI1IENoZWNrSW5FeHBsLCBuZXdfYyxyIGluIHNldCBkb20gKGRlc2sucHJldikKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDczOjggQ2hlY2tJbkV4cGwsLS0gQWZ0ZXIgZGVzay5pc3N1ZWQgOj0gKChkZXNrLmlzc3VlZCkgdW5pb24ge25ld19rfSkKbGV0IGggPSBIb3RlbCBpbiAoKChkb20gKChoLmRlc2spLnByZXYpKSBzdWJzZXQgKGRvbSAoaC5sb2NrcykpKSBhbmQgKChkdW5pb24ge3soYy5mc3QpLCAoYy5zbmQpfSB8IFtjIGluIHNldCAoZHVuaW9uIChybmcgKGguZ3Vlc3RzKSkpXX0pIHN1YnNldCAoKGguZGVzaykuaXNzdWVkKSkpCixzdGF0ZSBpbnZhcmlhbnQsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDc0OjggQ2hlY2tJbkV4cGwsLS0gQWZ0ZXIgZGVzay5wcmV2IDo9ICgoZGVzay5wcmV2KSArKyB7ciB8LT4gbmV3X2t9KQpsZXQgaCA9IEhvdGVsIGluICgoKGRvbSAoKGguZGVzaykucHJldikpIHN1YnNldCAoZG9tIChoLmxvY2tzKSkpIGFuZCAoKGR1bmlvbiB7eyhjLmZzdCksIChjLnNuZCl9IHwgW2MgaW4gc2V0IChkdW5pb24gKHJuZyAoaC5ndWVzdHMpKSldfSkgc3Vic2V0ICgoaC5kZXNrKS5pc3N1ZWQpKSkKLHN0YXRlIGludmFyaWFudCxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDc1OjggQ2hlY2tJbkV4cGwsLS0gQWZ0ZXIgZ3Vlc3RzIDo9IChpZiAoZyBpbiBzZXQgKGRvbSBndWVzdHMpKQp0aGVuIChndWVzdHMgKysge2cgfC0+IChndWVzdHMoZykgdW5pb24ge25ld19jfSl9KQplbHNlIChndWVzdHMgbXVuaW9uIHtnIHwtPiB7bmV3X2N9fSkpCmxldCBoID0gSG90ZWwgaW4gKCgoZG9tICgoaC5kZXNrKS5wcmV2KSkgc3Vic2V0IChkb20gKGgubG9ja3MpKSkgYW5kICgoZHVuaW9uIHt7KGMuZnN0KSwgKGMuc25kKX0gfCBbYyBpbiBzZXQgKGR1bmlvbiAocm5nIChoLmd1ZXN0cykpKV19KSBzdWJzZXQgKChoLmRlc2spLmlzc3VlZCkpKQosc3RhdGUgaW52YXJpYW50LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDc2OjQ1IENoZWNrSW5FeHBsLCgoZyBpbiBzZXQgKGRvbSBndWVzdHMpKSA9PgogIGcgaW4gc2V0IGRvbSBndWVzdHMpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDc3OjI4IENoZWNrSW5FeHBsLChub3QgKGcgaW4gc2V0IChkb20gZ3Vlc3RzKSkgPT4KICBmb3JhbGwgbGRvbTEgaW4gc2V0IGRvbSBndWVzdHMsIHJkb20yIGluIHNldCBkb20ge2cgfC0+IHtuZXdfY319ICYKICBsZG9tMSA9IHJkb20yID0+IGd1ZXN0cyhsZG9tMSkgPSB7ZyB8LT4ge25ld19jfX0ocmRvbTIpKQosbWFwIGNvbXBhdGlibGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDkzOjIxIEVudGVyRXhwbCwoKHIgaW4gc2V0IChkb20gbG9ja3MpKSA9PgogICgoZyBpbiBzZXQgKGRvbSBndWVzdHMpKSA9PgogICAgZyBpbiBzZXQgZG9tIGd1ZXN0cykpCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDkzOjM5IEVudGVyRXhwbCwoKHIgaW4gc2V0IChkb20gbG9ja3MpKSA9PgogICgoZyBpbiBzZXQgKGRvbSBndWVzdHMpKSA9PgogICAgKGZvcmFsbCBjIGluIHNldCBndWVzdHMoZykgJgogICAgICByIGluIHNldCBkb20gbG9ja3MpKSkKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDkzOjU3IEVudGVyRXhwbCwoKHIgaW4gc2V0IChkb20gbG9ja3MpKSA9PgogICgoZyBpbiBzZXQgKGRvbSBndWVzdHMpKSA9PgogICAgKGZvcmFsbCBjIGluIHNldCBndWVzdHMoZykgJgogICAgICAobm90ICgoYy5mc3QpID0gbG9ja3MocikpID0+CiAgICAgICAgciBpbiBzZXQgZG9tIGxvY2tzKSkpKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDg3OjcgRW50ZXJFeHBsLGV4aXN0cyBjIGluIHNldCBndWVzdHMoZykgJiAoKChjLmZzdCkgPSBsb2NrcyhyKSkgb3IgKChjLnNuZCkgPSBsb2NrcyhyKSkpCixsZXQgYmUgc3QgZXhpc3RlbmNlLG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDg3OjE2IEVudGVyRXhwbCxnIGluIHNldCBkb20gZ3Vlc3RzCixtYXAgYXBwbHksbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDg3OjQwIEVudGVyRXhwbCxyIGluIHNldCBkb20gbG9ja3MKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDg3OjYwIEVudGVyRXhwbCwobm90ICgoYy5mc3QpID0gbG9ja3MocikpID0+CiAgciBpbiBzZXQgZG9tIGxvY2tzKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDg5OjE2IEVudGVyRXhwbCxyIGluIHNldCBkb20gbG9ja3MKLG1hcCBhcHBseSxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDkwOjEwIEVudGVyRXhwbCwtLSBBZnRlciBsb2NrcyA6PSAobG9ja3MgKysge3IgfC0+IChjLnNuZCl9KQpsZXQgaCA9IEhvdGVsIGluICgoKGRvbSAoKGguZGVzaykucHJldikpIHN1YnNldCAoZG9tIChoLmxvY2tzKSkpIGFuZCAoKGR1bmlvbiB7eyhjLmZzdCksIChjLnNuZCl9IHwgW2MgaW4gc2V0IChkdW5pb24gKHJuZyAoaC5ndWVzdHMpKSldfSkgc3Vic2V0ICgoaC5kZXNrKS5pc3N1ZWQpKSkKLHN0YXRlIGludmFyaWFudCxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDk3OjcgSXNzdWVDYXJkLGV4aXN0cyBrOktleSAmIChrIG5vdCBpbiBzZXQgKGRlc2suaXNzdWVkKSkKLGxldCBiZSBzdCBleGlzdGVuY2UsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDk5OjYgSXNzdWVDYXJkLC0tIEFmdGVyIGRlc2suaXNzdWVkIDo9ICgoZGVzay5pc3N1ZWQpIHVuaW9uIHtrfSkKbGV0IGggPSBIb3RlbCBpbiAoKChkb20gKChoLmRlc2spLnByZXYpKSBzdWJzZXQgKGRvbSAoaC5sb2NrcykpKSBhbmQgKChkdW5pb24ge3soYy5mc3QpLCAoYy5zbmQpfSB8IFtjIGluIHNldCAoZHVuaW9uIChybmcgKGguZ3Vlc3RzKSkpXX0pIHN1YnNldCAoKGguZGVzaykuaXNzdWVkKSkpCixzdGF0ZSBpbnZhcmlhbnQsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDEwNTo0IEFkZFJvb20sLS0gQWZ0ZXIgZGVzay5wcmV2IDo9ICgoZGVzay5wcmV2KSBtdW5pb24ge3IgfC0+IGt9KQpsZXQgaCA9IEhvdGVsIGluICgoKGRvbSAoKGguZGVzaykucHJldikpIHN1YnNldCAoZG9tIChoLmxvY2tzKSkpIGFuZCAoKGR1bmlvbiB7eyhjLmZzdCksIChjLnNuZCl9IHwgW2MgaW4gc2V0IChkdW5pb24gKHJuZyAoaC5ndWVzdHMpKSldfSkgc3Vic2V0ICgoaC5kZXNrKS5pc3N1ZWQpKSkKLHN0YXRlIGludmFyaWFudCxudWxsLFVucHJvdmVkfA== PROOFOBLIGATION: fDEwNToxNyBBZGRSb29tLGZvcmFsbCBsZG9tMSBpbiBzZXQgZG9tIChkZXNrLnByZXYpLCByZG9tMiBpbiBzZXQgZG9tIHtyIHwtPiBrfSAmCmxkb20xID0gcmRvbTIgPT4gKGRlc2sucHJldikobGRvbTEpID0ge3IgfC0+IGt9KHJkb20yKQosbWFwIGNvbXBhdGlibGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDEwNjo0IEFkZFJvb20sLS0gQWZ0ZXIgbG9ja3MgOj0gKGxvY2tzIG11bmlvbiB7ciB8LT4ga30pCmxldCBoID0gSG90ZWwgaW4gKCgoZG9tICgoaC5kZXNrKS5wcmV2KSkgc3Vic2V0IChkb20gKGgubG9ja3MpKSkgYW5kICgoZHVuaW9uIHt7KGMuZnN0KSwgKGMuc25kKX0gfCBbYyBpbiBzZXQgKGR1bmlvbiAocm5nIChoLmd1ZXN0cykpKV19KSBzdWJzZXQgKChoLmRlc2spLmlzc3VlZCkpKQosc3RhdGUgaW52YXJpYW50LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDEwNjoxMyBBZGRSb29tLGZvcmFsbCBsZG9tMSBpbiBzZXQgZG9tIGxvY2tzLCByZG9tMiBpbiBzZXQgZG9tIHtyIHwtPiBrfSAmCmxkb20xID0gcmRvbTIgPT4gbG9ja3MobGRvbTEpID0ge3IgfC0+IGt9KHJkb20yKQosbWFwIGNvbXBhdGlibGUsbnVsbCxVbnByb3ZlZHw= PROOFOBLIGATION: fDExMjozIEFkZEd1ZXN0LC0tIEFmdGVyIGd1ZXN0cyA6PSAoZ3Vlc3RzICsrIHtnIHwtPiAoaWYgKGcgaW4gc2V0IChkb20gZ3Vlc3RzKSkKdGhlbiAoZ3Vlc3RzKGcpIHVuaW9uIGNzKQplbHNlIGNzKX0pCmxldCBoID0gSG90ZWwgaW4gKCgoZG9tICgoaC5kZXNrKS5wcmV2KSkgc3Vic2V0IChkb20gKGgubG9ja3MpKSkgYW5kICgoZHVuaW9uIHt7KGMuZnN0KSwgKGMuc25kKX0gfCBbYyBpbiBzZXQgKGR1bmlvbiAocm5nIChoLmd1ZXN0cykpKV19KSBzdWJzZXQgKChoLmRlc2spLmlzc3VlZCkpKQosc3RhdGUgaW52YXJpYW50LG51bGwsVW5wcm92ZWR8 PROOFOBLIGATION: fDExMzozNSBBZGRHdWVzdCwoKGcgaW4gc2V0IChkb20gZ3Vlc3RzKSkgPT4KICBnIGluIHNldCBkb20gZ3Vlc3RzKQosbWFwIGFwcGx5LG51bGwsVW5wcm92ZWR8


--hotel.vdmsl

types 

Key = token;
Room = token;
Guest = token;

Card :: fst : Key
        snd : Key; 

Desk :: issued : set of Key
        prev   : map Room to Key
inv d == rng d.prev subset d.issued; 

state Hotel of 
        desk   : Desk
        locks  : map Room to Key
        guests : map Guest to set of Card

inv h == dom h.desk.prev subset dom h.locks and
         dunion {{c.fst, c.snd} | c in set dunion rng h.guests}
         subset h.desk.issued

init h == h.desk.issued = {} and 
          h.desk.prev = h.locks and 
          rng h.guests = {{}}

end

operations

CheckIn(g:Guest,r:Room)

ext wr desk   : Desk
    wr guests : map Guest to set of Card

pre r in set dom desk.prev

post exists new_k:Key &
	new_k not in set desk~.issued            and 
 	let new_c = mk_Card(desk~.prev(r),new_k)
        in
	desk.issued = desk~.issued union {new_k} and 
	desk.prev = desk~.prev ++ {r |-> new_k}  and 
	if g in set dom guests~
	then guests = guests~ ++ {g |-> guests~(g) union {new_c}}
    else guests = guests~ munion {g |-> {new_c}};


Enter(r:Room,g:Guest)

ext wr locks  : map Room to Key
    rd guests : map Guest to set of Card

pre r in set dom locks  and 
    g in set dom guests and
    exists c in set guests(g) & c.fst=locks(r) or c.snd=locks(r) 

post exists c in set guests(g) & 
	c.fst = locks(r) and locks = locks~ ++ {r |-> c.snd} or
	c.snd = locks(r) and locks = locks~;

CheckInExpl: Guest * Room ==> ()
CheckInExpl(g,r) ==
  let new_k:Key be st new_k not in set desk.issued
  in 
    let new_c = mk_Card(desk.prev(r),new_k)
    in
      (desk.issued := desk.issued union {new_k}; 
       desk.prev   := desk.prev ++ {r |-> new_k}; 
       guests      := if g in set dom guests
	                  then guests ++ {g |-> guests(g) union {new_c}}
                      else guests munion {g |-> {new_c}}
      )
pre r in set dom desk.prev;

--
-- Explicit versions of operations for execution on the interpreter
--

EnterExpl: Room * Guest ==> ()
EnterExpl(r,g) ==
  let c in set guests(g) be st c.fst = locks(r) or c.snd = locks(r)
  in
    if c.fst = locks(r)
    then locks := locks ++ {r |-> c.snd}
pre r in set dom locks  and 
    g in set dom guests and
    exists c in set guests(g) & c.fst=locks(r) or c.snd=locks(r); 

IssueCard: () ==> Key
IssueCard() ==
  let k: Key be st k not in set desk.issued
  in
    (desk.issued := desk.issued union {k};
     return k
    );

AddRoom: Room * Key ==> ()
AddRoom(r,k) ==
  (desk.prev := desk.prev munion {r |-> k};
   locks := locks munion {r |-> k}
  )
pre k in set desk.issued and r not in set dom locks;

AddGuest: Guest * set of Card ==> ()
AddGuest(g,cs) ==
  guests := guests ++ {g |-> if g in set dom guests
                             then guests(g) union cs
                             else cs}
pre forall c in set cs & {c.fst, c.snd} subset desk.issued;