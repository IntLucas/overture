<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="25" line="42" message="CheckIn, new_c: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 42:25&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    r in set dom (desk~.prev)))&#10;" number="1" object="" resource="hotelSL" toString="CheckIn, new_c: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 42:25&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    r in set dom (desk~.prev)))&#10;"/>
<po column="37" line="47" message="CheckIn: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 47:37&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    (let new_c:Card = mk_Card((desk~.prev)(r), new_k) in&#10;      (((desk.issued) = ((desk~.issued) union {new_k})) =&gt;&#10;        (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) =&gt;&#10;          ((g in set (dom guests~)) =&gt;&#10;            g in set dom guests~))))))&#10;" number="2" object="" resource="hotelSL" toString="CheckIn: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 47:37&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    (let new_c:Card = mk_Card((desk~.prev)(r), new_k) in&#10;      (((desk.issued) = ((desk~.issued) union {new_k})) =&gt;&#10;        (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) =&gt;&#10;          ((g in set (dom guests~)) =&gt;&#10;            g in set dom guests~))))))&#10;"/>
<po column="19" line="48" message="CheckIn: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 48:19&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    (let new_c:Card = mk_Card((desk~.prev)(r), new_k) in&#10;      (((desk.issued) = ((desk~.issued) union {new_k})) =&gt;&#10;        (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) =&gt;&#10;          (not (g in set (dom guests~)) =&gt;&#10;            forall ldom1 in set dom guests~, rdom2 in set dom {g |-&gt; {new_c}} &amp;&#10;            ldom1 = rdom2 =&gt; guests~(ldom1) = {g |-&gt; {new_c}}(rdom2)))))))&#10;" number="3" object="" resource="hotelSL" toString="CheckIn: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 48:19&#10;(forall new_k:Key &amp;&#10;  ((new_k not in set (desk~.issued)) =&gt;&#10;    (let new_c:Card = mk_Card((desk~.prev)(r), new_k) in&#10;      (((desk.issued) = ((desk~.issued) union {new_k})) =&gt;&#10;        (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) =&gt;&#10;          (not (g in set (dom guests~)) =&gt;&#10;            forall ldom1 in set dom guests~, rdom2 in set dom {g |-&gt; {new_c}} &amp;&#10;            ldom1 = rdom2 =&gt; guests~(ldom1) = {g |-&gt; {new_c}}(rdom2)))))))&#10;"/>
<po column="1" line="33" message="CheckIn: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 33:1&#10;(exists [new_k:Key] &amp; ((new_k not in set (desk~.issued)) and let new_c:Card = mk_Card((desk~.prev)(r), new_k) in (((desk.issued) = ((desk~.issued) union {new_k})) and (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) and (if (g in set (dom guests~))&#10;then (guests = (guests~ ++ {g |-&gt; (guests~(g) union {new_c})}))&#10;else (guests = (guests~ munion {g |-&gt; {new_c}})))))))&#10;" number="4" object="" resource="hotelSL" toString="CheckIn: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 33:1&#10;(exists [new_k:Key] &amp; ((new_k not in set (desk~.issued)) and let new_c:Card = mk_Card((desk~.prev)(r), new_k) in (((desk.issued) = ((desk~.issued) union {new_k})) and (((desk.prev) = ((desk~.prev) ++ {r |-&gt; new_k})) and (if (g in set (dom guests~))&#10;then (guests = (guests~ ++ {g |-&gt; (guests~(g) union {new_c})}))&#10;else (guests = (guests~ munion {g |-&gt; {new_c}})))))))&#10;"/>
<po column="1" line="33" message="CheckIn: operation satifiability obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 33:1&#10;(forall g:Guest, r:Room, oldstate:Hotel &amp;&#10;  pre_CheckIn(g, r, oldstate) =&gt;&#10;  post_CheckIn(g, r, oldstate, newstate))&#10;" number="5" object="" resource="hotelSL" toString="CheckIn: operation satifiability obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 33:1&#10;(forall g:Guest, r:Room, oldstate:Hotel &amp;&#10;  pre_CheckIn(g, r, oldstate) =&gt;&#10;  post_CheckIn(g, r, oldstate, newstate))&#10;"/>
<po column="21" line="58" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:21&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    g in set dom guests))&#10;" number="6" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:21&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    g in set dom guests))&#10;"/>
<po column="39" line="58" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:39&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      r in set dom locks)))&#10;" number="7" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:39&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      r in set dom locks)))&#10;"/>
<po column="57" line="58" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:57&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      (not ((c.fst) = locks(r)) =&gt;&#10;        r in set dom locks))))&#10;" number="8" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 58:57&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      (not ((c.fst) = locks(r)) =&gt;&#10;        r in set dom locks))))&#10;"/>
<po column="22" line="60" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 60:22&#10;g in set dom guests&#10;" number="9" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 60:22&#10;g in set dom guests&#10;"/>
<po column="13" line="61" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 61:13&#10;(forall c in set guests(g) &amp;&#10;  r in set dom locks)&#10;" number="10" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 61:13&#10;(forall c in set guests(g) &amp;&#10;  r in set dom locks)&#10;"/>
<po column="13" line="62" message="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 62:13&#10;(forall c in set guests(g) &amp;&#10;  (not (((c.fst) = locks(r)) and (locks = (locks~ ++ {r |-&gt; (c.snd)}))) =&gt;&#10;    r in set dom locks))&#10;" number="11" object="" resource="hotelSL" toString="Enter: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 62:13&#10;(forall c in set guests(g) &amp;&#10;  (not (((c.fst) = locks(r)) and (locks = (locks~ ++ {r |-&gt; (c.snd)}))) =&gt;&#10;    r in set dom locks))&#10;"/>
<po column="1" line="51" message="Enter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 51:1&#10;(exists [c in set guests(g)] &amp; ((((c.fst) = locks(r)) and (locks = (locks~ ++ {r |-&gt; (c.snd)}))) or (((c.snd) = locks(r)) and (locks = locks~))))&#10;" number="12" object="" resource="hotelSL" toString="Enter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 51:1&#10;(exists [c in set guests(g)] &amp; ((((c.fst) = locks(r)) and (locks = (locks~ ++ {r |-&gt; (c.snd)}))) or (((c.snd) = locks(r)) and (locks = locks~))))&#10;"/>
<po column="1" line="51" message="Enter: operation satifiability obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 51:1&#10;(forall r:Room, g:Guest, oldstate:Hotel &amp;&#10;  pre_Enter(r, g, oldstate) =&gt;&#10;  post_Enter(r, g, oldstate, newstate))&#10;" number="13" object="" resource="hotelSL" toString="Enter: operation satifiability obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 51:1&#10;(forall r:Room, g:Guest, oldstate:Hotel &amp;&#10;  pre_Enter(r, g, oldstate) =&gt;&#10;  post_Enter(r, g, oldstate, newstate))&#10;"/>
<po column="7" line="66" message="CheckInExpl: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 66:7&#10;exists new_k:Key &amp; (new_k not in set (desk.issued))&#10;" number="14" object="" resource="hotelSL" toString="CheckInExpl: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 66:7&#10;exists new_k:Key &amp; (new_k not in set (desk.issued))&#10;"/>
<po column="25" line="68" message="CheckInExpl, new_c: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 68:25&#10;r in set dom (desk.prev)&#10;" number="15" object="" resource="hotelSL" toString="CheckInExpl, new_c: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 68:25&#10;r in set dom (desk.prev)&#10;"/>
<po column="8" line="70" message="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 70:8&#10;-- After desk.issued := ((desk.issued) union {new_k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="16" object="" resource="hotelSL" toString="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 70:8&#10;-- After desk.issued := ((desk.issued) union {new_k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="8" line="71" message="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 71:8&#10;-- After desk.prev := ((desk.prev) ++ {r |-&gt; new_k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="17" object="" resource="hotelSL" toString="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 71:8&#10;-- After desk.prev := ((desk.prev) ++ {r |-&gt; new_k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="8" line="72" message="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 72:8&#10;-- After guests := (if (g in set (dom guests))&#10;then (guests ++ {g |-&gt; (guests(g) union {new_c})})&#10;else (guests munion {g |-&gt; {new_c}}))&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="18" object="" resource="hotelSL" toString="CheckInExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 72:8&#10;-- After guests := (if (g in set (dom guests))&#10;then (guests ++ {g |-&gt; (guests(g) union {new_c})})&#10;else (guests munion {g |-&gt; {new_c}}))&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="45" line="73" message="CheckInExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 73:45&#10;((g in set (dom guests)) =&gt;&#10;  g in set dom guests)&#10;" number="19" object="" resource="hotelSL" toString="CheckInExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 73:45&#10;((g in set (dom guests)) =&gt;&#10;  g in set dom guests)&#10;"/>
<po column="28" line="74" message="CheckInExpl: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 74:28&#10;(not (g in set (dom guests)) =&gt;&#10;  forall ldom1 in set dom guests, rdom2 in set dom {g |-&gt; {new_c}} &amp;&#10;  ldom1 = rdom2 =&gt; guests(ldom1) = {g |-&gt; {new_c}}(rdom2))&#10;" number="20" object="" resource="hotelSL" toString="CheckInExpl: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 74:28&#10;(not (g in set (dom guests)) =&gt;&#10;  forall ldom1 in set dom guests, rdom2 in set dom {g |-&gt; {new_c}} &amp;&#10;  ldom1 = rdom2 =&gt; guests(ldom1) = {g |-&gt; {new_c}}(rdom2))&#10;"/>
<po column="21" line="90" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:21&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    g in set dom guests))&#10;" number="21" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:21&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    g in set dom guests))&#10;"/>
<po column="39" line="90" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:39&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      r in set dom locks)))&#10;" number="22" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:39&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      r in set dom locks)))&#10;"/>
<po column="57" line="90" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:57&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      (not ((c.fst) = locks(r)) =&gt;&#10;        r in set dom locks))))&#10;" number="23" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 90:57&#10;((r in set (dom locks)) =&gt;&#10;  ((g in set (dom guests)) =&gt;&#10;    (forall c in set guests(g) &amp;&#10;      (not ((c.fst) = locks(r)) =&gt;&#10;        r in set dom locks))))&#10;"/>
<po column="7" line="84" message="EnterExpl: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:7&#10;exists c in set guests(g) &amp; (((c.fst) = locks(r)) or ((c.snd) = locks(r)))&#10;" number="24" object="" resource="hotelSL" toString="EnterExpl: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:7&#10;exists c in set guests(g) &amp; (((c.fst) = locks(r)) or ((c.snd) = locks(r)))&#10;"/>
<po column="16" line="84" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:16&#10;g in set dom guests&#10;" number="25" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:16&#10;g in set dom guests&#10;"/>
<po column="40" line="84" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:40&#10;r in set dom locks&#10;" number="26" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:40&#10;r in set dom locks&#10;"/>
<po column="60" line="84" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:60&#10;(not ((c.fst) = locks(r)) =&gt;&#10;  r in set dom locks)&#10;" number="27" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 84:60&#10;(not ((c.fst) = locks(r)) =&gt;&#10;  r in set dom locks)&#10;"/>
<po column="16" line="86" message="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 86:16&#10;r in set dom locks&#10;" number="28" object="" resource="hotelSL" toString="EnterExpl: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 86:16&#10;r in set dom locks&#10;"/>
<po column="10" line="87" message="EnterExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 87:10&#10;-- After locks := (locks ++ {r |-&gt; (c.snd)})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="29" object="" resource="hotelSL" toString="EnterExpl: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 87:10&#10;-- After locks := (locks ++ {r |-&gt; (c.snd)})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="7" line="94" message="IssueCard: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 94:7&#10;exists k:Key &amp; (k not in set (desk.issued))&#10;" number="30" object="" resource="hotelSL" toString="IssueCard: let be st existence obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 94:7&#10;exists k:Key &amp; (k not in set (desk.issued))&#10;"/>
<po column="6" line="96" message="IssueCard: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 96:6&#10;-- After desk.issued := ((desk.issued) union {k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="31" object="" resource="hotelSL" toString="IssueCard: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 96:6&#10;-- After desk.issued := ((desk.issued) union {k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="4" line="102" message="AddRoom: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 102:4&#10;-- After desk.prev := ((desk.prev) munion {r |-&gt; k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="32" object="" resource="hotelSL" toString="AddRoom: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 102:4&#10;-- After desk.prev := ((desk.prev) munion {r |-&gt; k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="17" line="102" message="AddRoom: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 102:17&#10;forall ldom1 in set dom (desk.prev), rdom2 in set dom {r |-&gt; k} &amp;&#10;ldom1 = rdom2 =&gt; (desk.prev)(ldom1) = {r |-&gt; k}(rdom2)&#10;" number="33" object="" resource="hotelSL" toString="AddRoom: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 102:17&#10;forall ldom1 in set dom (desk.prev), rdom2 in set dom {r |-&gt; k} &amp;&#10;ldom1 = rdom2 =&gt; (desk.prev)(ldom1) = {r |-&gt; k}(rdom2)&#10;"/>
<po column="4" line="103" message="AddRoom: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 103:4&#10;-- After locks := (locks munion {r |-&gt; k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="34" object="" resource="hotelSL" toString="AddRoom: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 103:4&#10;-- After locks := (locks munion {r |-&gt; k})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="13" line="103" message="AddRoom: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 103:13&#10;forall ldom1 in set dom locks, rdom2 in set dom {r |-&gt; k} &amp;&#10;ldom1 = rdom2 =&gt; locks(ldom1) = {r |-&gt; k}(rdom2)&#10;" number="35" object="" resource="hotelSL" toString="AddRoom: map compatible obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 103:13&#10;forall ldom1 in set dom locks, rdom2 in set dom {r |-&gt; k} &amp;&#10;ldom1 = rdom2 =&gt; locks(ldom1) = {r |-&gt; k}(rdom2)&#10;"/>
<po column="3" line="109" message="AddGuest: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 109:3&#10;-- After guests := (guests ++ {g |-&gt; (if (g in set (dom guests))&#10;then (guests(g) union cs)&#10;else cs)})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;" number="36" object="" resource="hotelSL" toString="AddGuest: state invariant obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 109:3&#10;-- After guests := (guests ++ {g |-&gt; (if (g in set (dom guests))&#10;then (guests(g) union cs)&#10;else cs)})&#10;let h = Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | [c in set (dunion (rng (h.guests)))]}) subset ((h.desk).issued)))&#10;"/>
<po column="35" line="110" message="AddGuest: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 110:35&#10;((g in set (dom guests)) =&gt;&#10;  g in set dom guests)&#10;" number="37" object="" resource="hotelSL" toString="AddGuest: map apply obligation in 'DEFAULT' (src\test\resources\modules\hotelSL) at line 110:35&#10;((g in set (dom guests)) =&gt;&#10;  g in set dom guests)&#10;"/>
</result>
</testResult>
