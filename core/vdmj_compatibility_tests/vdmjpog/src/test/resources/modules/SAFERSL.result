<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="29" line="44" message="Transition: map apply obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 44:29&#10;(forall a in set AUX`rot_axis_set &amp;&#10;  (not starting =&gt;&#10;    ((engage &lt;&gt; &lt;AAH_off&gt;) =&gt;&#10;      ((a in set active_axes) =&gt;&#10;        a in set dom (hcm_cmd.rot)))))&#10;" number="1" object="" resource="SAFERSL" toString="Transition: map apply obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 44:29&#10;(forall a in set AUX`rot_axis_set &amp;&#10;  (not starting =&gt;&#10;    ((engage &lt;&gt; &lt;AAH_off&gt;) =&gt;&#10;      ((a in set active_axes) =&gt;&#10;        a in set dom (hcm_cmd.rot)))))&#10;"/>
<po column="40" line="46" message="Transition: map apply obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 46:40&#10;(forall a in set AUX`rot_axis_set &amp;&#10;  (starting =&gt;&#10;    a in set dom (hcm_cmd.rot)))&#10;" number="2" object="" resource="SAFERSL" toString="Transition: map apply obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 46:40&#10;(forall a in set AUX`rot_axis_set &amp;&#10;  (starting =&gt;&#10;    a in set dom (hcm_cmd.rot)))&#10;"/>
<po column="5" line="70" message="ButtonTransition: cases exhaustive obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 70:5&#10;(forall estate:EngageState, button:ControlButton, active:set of (RotAxis), clock:nat, timeout:nat &amp;&#10;  mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Down&gt;))&#10;" number="3" object="" resource="SAFERSL" toString="ButtonTransition: cases exhaustive obligation in 'AAH' (src\test\resources\modules\SAFERSL) at line 70:5&#10;(forall estate:EngageState, button:ControlButton, active:set of (RotAxis), clock:nat, timeout:nat &amp;&#10;  mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_off&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_started&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_on&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_once&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;AAH_closing&gt;, &lt;Down&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Up&gt;) or mk_(estate, button) = mk_(&lt;pressed_twice&gt;, &lt;Down&gt;))&#10;"/>
<po column="37" line="115" message="null_tran_command: map set compatible obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 115:37&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set tran_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="4" object="" resource="SAFERSL" toString="null_tran_command: map set compatible obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 115:37&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set tran_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="37" line="115" message="null_tran_command: subtype obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 115:37&#10;inv_TranCommand({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}, map (TranAxis) to (AxisCommand)))&#10;" number="5" object="" resource="SAFERSL" toString="null_tran_command: subtype obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 115:37&#10;inv_TranCommand({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set tran_axis_set}, map (TranAxis) to (AxisCommand)))&#10;"/>
<po column="35" line="117" message="null_rot_command: map set compatible obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 117:35&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set rot_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="6" object="" resource="SAFERSL" toString="null_rot_command: map set compatible obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 117:35&#10;forall m1, m2 in set {{a |-&gt; &lt;Zero&gt;} | a in set rot_axis_set} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="35" line="117" message="null_rot_command: subtype obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 117:35&#10;inv_RotCommand({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}, map (RotAxis) to (AxisCommand)))&#10;" number="7" object="" resource="SAFERSL" toString="null_rot_command: subtype obligation in 'AUX' (src\test\resources\modules\SAFERSL) at line 117:35&#10;inv_RotCommand({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}) and (is_({a |-&gt; &lt;Zero&gt; | a in set rot_axis_set}, map (RotAxis) to (AxisCommand)))&#10;"/>
<po column="16" line="214" message="GripCommand, tran: map sequence compatible obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 214:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;X&gt; |-&gt; horiz}, {&lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}, {&lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="8" object="" resource="SAFERSL" toString="GripCommand, tran: map sequence compatible obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 214:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;X&gt; |-&gt; horiz}, {&lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}, {&lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="16" line="217" message="GripCommand, rot: map sequence compatible obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 217:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, {&lt;Pitch&gt; |-&gt; twist}, {&lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="9" object="" resource="SAFERSL" toString="GripCommand, rot: map sequence compatible obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 217:16&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, {&lt;Pitch&gt; |-&gt; twist}, {&lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="28" line="221" message="GripCommand: subtype obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 221:28&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)} in&#10;    inv_TranCommand(tran) and (is_(tran, map (TranAxis) to (AxisCommand)))))&#10;" number="10" object="" resource="SAFERSL" toString="GripCommand: subtype obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 221:28&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)} in&#10;    inv_TranCommand(tran) and (is_(tran, map (TranAxis) to (AxisCommand)))))&#10;"/>
<po column="33" line="221" message="GripCommand: subtype obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 221:33&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)} in&#10;    inv_RotCommand(rot) and (is_(rot, map (RotAxis) to (AxisCommand)))))&#10;" number="11" object="" resource="SAFERSL" toString="GripCommand: subtype obligation in 'HCM' (src\test\resources\modules\SAFERSL) at line 221:33&#10;(forall mk_HandGripPosition(vert, horiz, trans, twist):HandGripPosition, mode:ControlModeSwitch &amp;&#10;  (let tran:map ((&lt;X&gt; | &lt;Y&gt; | &lt;Z&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;X&gt; |-&gt; horiz, &lt;Y&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;), &lt;Z&gt; |-&gt; (if (mode = &lt;Tran&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;)}, rot:map ((&lt;Pitch&gt; | &lt;Roll&gt; | &lt;Yaw&gt;)) to ((&lt;Zero&gt; | AxisCommand)) = {&lt;Roll&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then vert&#10;  else &lt;Zero&gt;), &lt;Pitch&gt; |-&gt; twist, &lt;Yaw&gt; |-&gt; (if (mode = &lt;Rot&gt;)&#10;  then trans&#10;  else &lt;Zero&gt;)} in&#10;    inv_RotCommand(rot) and (is_(rot, map (RotAxis) to (AxisCommand)))))&#10;"/>
<po column="3" line="253" message="ControlCycle: operation post condition obligation in 'SAFER' (src\test\resources\modules\SAFERSL) at line 253:3&#10;(((card RESULT) &lt;= 4) and ThrusterConsistency(RESULT))&#10;" number="12" object="" resource="SAFERSL" toString="ControlCycle: operation post condition obligation in 'SAFER' (src\test\resources\modules\SAFERSL) at line 253:3&#10;(((card RESULT) &lt;= 4) and ThrusterConsistency(RESULT))&#10;"/>
<po column="6" line="332" message="all_rot_commands: map sequence compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 332:6&#10;(forall a, b, c in set AUX`axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;" number="13" object="" resource="SAFERSL" toString="all_rot_commands: map sequence compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 332:6&#10;(forall a, b, c in set AUX`axis_command_set &amp;&#10;  forall m1, m2 in set {{&lt;Roll&gt; |-&gt; a}, {&lt;Pitch&gt; |-&gt; b}, {&lt;Yaw&gt; |-&gt; c}} &amp;&#10;    forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;      d3 = d4 =&gt; m1(d3) = m2(d4))&#10;"/>
<po column="5" line="332" message="all_rot_commands: subtype obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 332:5&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set AUX`axis_command_set]}, set of (RotCommand))&#10;" number="14" object="" resource="SAFERSL" toString="all_rot_commands: subtype obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 332:5&#10;is_({{&lt;Roll&gt; |-&gt; a, &lt;Pitch&gt; |-&gt; b, &lt;Yaw&gt; |-&gt; c} | [a, b, c in set AUX`axis_command_set]}, set of (RotCommand))&#10;"/>
<po column="5" line="357" message="BigTest: map set compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 357:5&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="15" object="" resource="SAFERSL" toString="BigTest: map set compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 357:5&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="4" line="365" message="HugeTest: map set compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 365:4&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set all_grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="16" object="" resource="SAFERSL" toString="HugeTest: map set compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 365:4&#10;forall m1, m2 in set {{mk_(switch, grip, aah_law) |-&gt; SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set all_grip_positions, aah_law in set all_rot_commands} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="14" line="382" message="ConvertTIds: let be st existence obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 382:14&#10;(forall ts:ThrusterSet &amp;&#10;  (not (ts = {}) =&gt;&#10;    exists t in set ts))&#10;" number="17" object="" resource="SAFERSL" toString="ConvertTIds: let be st existence obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 382:14&#10;(forall ts:ThrusterSet &amp;&#10;  (not (ts = {}) =&gt;&#10;    exists t in set ts))&#10;"/>
<po column="5" line="388" message="ConvertTId: cases exhaustive obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 388:5&#10;(forall tnm:ThrusterName &amp;&#10;  tnm = &lt;B1&gt; or tnm = &lt;B2&gt; or tnm = &lt;B3&gt; or tnm = &lt;B4&gt; or tnm = &lt;F1&gt; or tnm = &lt;F2&gt; or tnm = &lt;F3&gt; or tnm = &lt;F4&gt; or tnm = &lt;L1R&gt; or tnm = &lt;L1F&gt; or tnm = &lt;R2R&gt; or tnm = &lt;R2F&gt; or tnm = &lt;L3R&gt; or tnm = &lt;L3F&gt; or tnm = &lt;R4R&gt; or tnm = &lt;R4F&gt; or tnm = &lt;D1R&gt; or tnm = &lt;D1F&gt; or tnm = &lt;D2R&gt; or tnm = &lt;D2F&gt; or tnm = &lt;U3R&gt; or tnm = &lt;U3F&gt; or tnm = &lt;U4R&gt; or tnm = &lt;U4F&gt;)&#10;" number="18" object="" resource="SAFERSL" toString="ConvertTId: cases exhaustive obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 388:5&#10;(forall tnm:ThrusterName &amp;&#10;  tnm = &lt;B1&gt; or tnm = &lt;B2&gt; or tnm = &lt;B3&gt; or tnm = &lt;B4&gt; or tnm = &lt;F1&gt; or tnm = &lt;F2&gt; or tnm = &lt;F3&gt; or tnm = &lt;F4&gt; or tnm = &lt;L1R&gt; or tnm = &lt;L1F&gt; or tnm = &lt;R2R&gt; or tnm = &lt;R2F&gt; or tnm = &lt;L3R&gt; or tnm = &lt;L3F&gt; or tnm = &lt;R4R&gt; or tnm = &lt;R4F&gt; or tnm = &lt;D1R&gt; or tnm = &lt;D1F&gt; or tnm = &lt;D2R&gt; or tnm = &lt;D2F&gt; or tnm = &lt;U3R&gt; or tnm = &lt;U3F&gt; or tnm = &lt;U4R&gt; or tnm = &lt;U4F&gt;)&#10;"/>
<po column="20" line="435" message="RunTest, ts: map sequence compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 435:20&#10;forall m1, m2 in set {{&lt;Roll&gt; |-&gt; ConvertAxisCmd(roll)}, {&lt;Pitch&gt; |-&gt; ConvertAxisCmd(pitch)}, {&lt;Yaw&gt; |-&gt; ConvertAxisCmd(yaw)}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;" number="19" object="" resource="SAFERSL" toString="RunTest, ts: map sequence compatible obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 435:20&#10;forall m1, m2 in set {{&lt;Roll&gt; |-&gt; ConvertAxisCmd(roll)}, {&lt;Pitch&gt; |-&gt; ConvertAxisCmd(pitch)}, {&lt;Yaw&gt; |-&gt; ConvertAxisCmd(yaw)}} &amp;&#10;  forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;    d3 = d4 =&gt; m1(d3) = m2(d4)&#10;"/>
<po column="5" line="447" message="Loop: while loop termination obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 447:5&#10;while RunTest() do ...&#10;" number="20" object="" resource="SAFERSL" toString="Loop: while loop termination obligation in 'TEST' (src\test\resources\modules\SAFERSL) at line 447:5&#10;while RunTest() do ...&#10;"/>
<po column="31" line="498" message="RotCmdsPresent: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 498:31&#10;(forall cmd:RotCommand &amp;&#10;  (forall a in set (dom cmd) &amp;&#10;    a in set dom cmd))&#10;" number="21" object="" resource="SAFERSL" toString="RotCmdsPresent: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 498:31&#10;(forall cmd:RotCommand &amp;&#10;  (forall a in set (dom cmd) &amp;&#10;    a in set dom cmd))&#10;"/>
<po column="8" line="502" message="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 502:8&#10;(forall tran:TranCommand &amp;&#10;  &lt;X&gt; in set dom tran)&#10;" number="22" object="" resource="SAFERSL" toString="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 502:8&#10;(forall tran:TranCommand &amp;&#10;  &lt;X&gt; in set dom tran)&#10;"/>
<po column="44" line="503" message="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 503:44&#10;(forall tran:TranCommand &amp;&#10;  ((tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    &lt;X&gt; in set dom tran))&#10;" number="23" object="" resource="SAFERSL" toString="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 503:44&#10;(forall tran:TranCommand &amp;&#10;  ((tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    &lt;X&gt; in set dom tran))&#10;"/>
<po column="44" line="505" message="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 505:44&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    ((tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      &lt;Y&gt; in set dom tran)))&#10;" number="24" object="" resource="SAFERSL" toString="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 505:44&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    ((tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      &lt;Y&gt; in set dom tran)))&#10;"/>
<po column="44" line="507" message="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 507:44&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    (not (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      ((tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;        &lt;Z&gt; in set dom tran))))&#10;" number="25" object="" resource="SAFERSL" toString="PrioritizedTranCmd: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 507:44&#10;(forall tran:TranCommand &amp;&#10;  (not (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;    (not (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;      ((tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;) =&gt;&#10;        &lt;Z&gt; in set dom tran))))&#10;"/>
<po column="3" line="500" message="PrioritizedTranCmd: subtype obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 500:3&#10;(forall tran:TranCommand &amp;&#10;  inv_TranCommand((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else AUX`null_tran_command)) and (is_((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else AUX`null_tran_command), map (TranAxis) to (AxisCommand))))&#10;" number="26" object="" resource="SAFERSL" toString="PrioritizedTranCmd: subtype obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 500:3&#10;(forall tran:TranCommand &amp;&#10;  inv_TranCommand((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else AUX`null_tran_command)) and (is_((if (tran(&lt;X&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;X&gt; |-&gt; tran(&lt;X&gt;)})&#10;  elseif (tran(&lt;Y&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Y&gt; |-&gt; tran(&lt;Y&gt;)})&#10;  elseif (tran(&lt;Z&gt;) &lt;&gt; &lt;Zero&gt;)&#10;  then (AUX`null_tran_command ++ {&lt;Z&gt; |-&gt; tran(&lt;Z&gt;)})&#10;  else AUX`null_tran_command), map (TranAxis) to (AxisCommand))))&#10;"/>
<po column="53" line="514" message="CombinedRotCmds, aah_axes: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 514:53&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (forall a in set AUX`rot_axis_set &amp;&#10;    a in set dom hcm_rot))&#10;" number="27" object="" resource="SAFERSL" toString="CombinedRotCmds, aah_axes: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 514:53&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (forall a in set AUX`rot_axis_set &amp;&#10;    a in set dom hcm_rot))&#10;"/>
<po column="8" line="515" message="CombinedRotCmds: map set compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; aah(a)} | a in set aah_axes} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;" number="28" object="" resource="SAFERSL" toString="CombinedRotCmds: map set compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; aah(a)} | a in set aah_axes} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;"/>
<po column="15" line="515" message="CombinedRotCmds: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set aah_axes &amp;&#10;      a in set dom aah)))&#10;" number="29" object="" resource="SAFERSL" toString="CombinedRotCmds: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set aah_axes &amp;&#10;      a in set dom aah)))&#10;"/>
<po column="8" line="516" message="CombinedRotCmds: map set compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 516:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; hcm_rot(a)} | a in set (AUX`rot_axis_set \ aah_axes)} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;" number="30" object="" resource="SAFERSL" toString="CombinedRotCmds: map set compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 516:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall m1, m2 in set {{a |-&gt; hcm_rot(a)} | a in set (AUX`rot_axis_set \ aah_axes)} &amp;&#10;      forall d3 in set dom m1, d4 in set dom m2 &amp;&#10;        d3 = d4 =&gt; m1(d3) = m2(d4)))&#10;"/>
<po column="15" line="516" message="CombinedRotCmds: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 516:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set (AUX`rot_axis_set \ aah_axes) &amp;&#10;      a in set dom hcm_rot)))&#10;" number="31" object="" resource="SAFERSL" toString="CombinedRotCmds: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 516:15&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    (forall a in set (AUX`rot_axis_set \ aah_axes) &amp;&#10;      a in set dom hcm_rot)))&#10;"/>
<po column="8" line="515" message="CombinedRotCmds: map compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall ldom1 in set dom {a |-&gt; aah(a) | a in set aah_axes}, rdom2 in set dom {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)} &amp;&#10;    ldom1 = rdom2 =&gt; {a |-&gt; aah(a) | a in set aah_axes}(ldom1) = {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}(rdom2)))&#10;" number="32" object="" resource="SAFERSL" toString="CombinedRotCmds: map compatible obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 515:8&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  (let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in&#10;    forall ldom1 in set dom {a |-&gt; aah(a) | a in set aah_axes}, rdom2 in set dom {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)} &amp;&#10;    ldom1 = rdom2 =&gt; {a |-&gt; aah(a) | a in set aah_axes}(ldom1) = {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}(rdom2)))&#10;"/>
<po column="3" line="510" message="CombinedRotCmds: subtype obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 510:3&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  inv_RotCommand(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)})) and (is_(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}), map (RotAxis) to (AxisCommand))))&#10;" number="33" object="" resource="SAFERSL" toString="CombinedRotCmds: subtype obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 510:3&#10;(forall hcm_rot:RotCommand, aah:RotCommand, ignore_hcm:set of (RotAxis) &amp;&#10;  inv_RotCommand(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)})) and (is_(let aah_axes:set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] &amp; (hcm_rot(a) = &lt;Zero&gt;)}) in ({a |-&gt; aah(a) | a in set aah_axes} munion {a |-&gt; hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}), map (RotAxis) to (AxisCommand))))&#10;"/>
<po column="5" line="536" message="BFThrusters: cases exhaustive obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 536:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;" number="34" object="" resource="SAFERSL" toString="BFThrusters: cases exhaustive obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 536:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;"/>
<po column="5" line="577" message="LRUDThrusters: cases exhaustive obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 577:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;" number="35" object="" resource="SAFERSL" toString="LRUDThrusters: cases exhaustive obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 577:5&#10;(forall A:AxisCommand, B:AxisCommand, C:AxisCommand &amp;&#10;  mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Neg&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Zero&gt;, &lt;Pos&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Neg&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Zero&gt;, &lt;Pos&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Neg&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Zero&gt;) or mk_(A, B, C) = mk_(&lt;Pos&gt;, &lt;Pos&gt;, &lt;Pos&gt;))&#10;"/>
<po column="28" line="621" message="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:28&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;X&gt; in set dom tran)&#10;" number="36" object="" resource="SAFERSL" toString="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:28&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;X&gt; in set dom tran)&#10;"/>
<po column="38" line="621" message="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:38&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;" number="37" object="" resource="SAFERSL" toString="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:38&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;"/>
<po column="51" line="621" message="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:51&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Yaw&gt; in set dom rot)&#10;" number="38" object="" resource="SAFERSL" toString="SelectedThrusters, bf_mandatory, bf_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 621:51&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Yaw&gt; in set dom rot)&#10;"/>
<po column="30" line="623" message="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:30&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Y&gt; in set dom tran)&#10;" number="39" object="" resource="SAFERSL" toString="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:30&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Y&gt; in set dom tran)&#10;"/>
<po column="40" line="623" message="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:40&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Z&gt; in set dom tran)&#10;" number="40" object="" resource="SAFERSL" toString="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:40&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Z&gt; in set dom tran)&#10;"/>
<po column="50" line="623" message="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:50&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;" number="41" object="" resource="SAFERSL" toString="SelectedThrusters, lrud_mandatory, lrud_optional: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 623:50&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;"/>
<po column="21" line="624" message="SelectedThrusters, bf_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 624:21&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;" number="42" object="" resource="SAFERSL" toString="SelectedThrusters, bf_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 624:21&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Roll&gt; in set dom rot)&#10;"/>
<po column="23" line="627" message="SelectedThrusters, lrud_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 627:23&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;" number="43" object="" resource="SAFERSL" toString="SelectedThrusters, lrud_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 627:23&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  &lt;Pitch&gt; in set dom rot)&#10;"/>
<po column="49" line="627" message="SelectedThrusters, lrud_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 627:49&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  ((rot(&lt;Pitch&gt;) = &lt;Zero&gt;) =&gt;&#10;    &lt;Yaw&gt; in set dom rot))&#10;" number="44" object="" resource="SAFERSL" toString="SelectedThrusters, lrud_thr: map apply obligation in 'TS' (src\test\resources\modules\SAFERSL) at line 627:49&#10;(forall hcm:SixDofCommand, aah:RotCommand, active_axes:set of (RotAxis), ignore_hcm:set of (RotAxis) &amp;&#10;  ((rot(&lt;Pitch&gt;) = &lt;Zero&gt;) =&gt;&#10;    &lt;Yaw&gt; in set dom rot))&#10;"/>
</result>
</testResult>
