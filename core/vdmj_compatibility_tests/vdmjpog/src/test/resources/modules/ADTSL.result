<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testResult type="proof_obligation">
<result>
<po column="15" line="95" message="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 95:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(data, -):Nodes_Node &amp; mk_Nodes_SingleLink(data, -) = node))&#10;" number="1" object="" resource="ADTSL" toString="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 95:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(data, -):Nodes_Node &amp; mk_Nodes_SingleLink(data, -) = node))&#10;"/>
<po column="46" line="95" message="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 95:46&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;" number="2" object="" resource="ADTSL" toString="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 95:46&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;"/>
<po column="15" line="97" message="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 97:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_DoubleLink(data, -, -):Nodes_Node &amp; mk_Nodes_DoubleLink(data, -, -) = node)))&#10;" number="3" object="" resource="ADTSL" toString="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 97:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_DoubleLink(data, -, -):Nodes_Node &amp; mk_Nodes_DoubleLink(data, -, -) = node)))&#10;"/>
<po column="49" line="97" message="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 97:49&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_DoubleLink))))&#10;" number="4" object="" resource="ADTSL" toString="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 97:49&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_DoubleLink))))&#10;"/>
<po column="15" line="99" message="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 99:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_BinaryTree(data, -, -, -):Nodes_Node &amp; mk_Nodes_BinaryTree(data, -, -, -) = node)))&#10;" number="5" object="" resource="ADTSL" toString="Nodes_GetData, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 99:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_BinaryTree(data, -, -, -):Nodes_Node &amp; mk_Nodes_BinaryTree(data, -, -, -) = node)))&#10;"/>
<po column="52" line="99" message="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 99:52&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_BinaryTree))))&#10;" number="6" object="" resource="ADTSL" toString="Nodes_GetData, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 99:52&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_BinaryTree))))&#10;"/>
<po column="15" line="107" message="Nodes_SetData, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 107:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(-, next):Nodes_Node &amp; mk_Nodes_SingleLink(-, next) = node))&#10;" number="7" object="" resource="ADTSL" toString="Nodes_SetData, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 107:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(-, next):Nodes_Node &amp; mk_Nodes_SingleLink(-, next) = node))&#10;"/>
<po column="46" line="107" message="Nodes_SetData, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 107:46&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;" number="8" object="" resource="ADTSL" toString="Nodes_SetData, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 107:46&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;"/>
<po column="15" line="110" message="Nodes_SetData, next, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 110:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_DoubleLink(-, next, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(-, next, prev) = node)))&#10;" number="9" object="" resource="ADTSL" toString="Nodes_SetData, next, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 110:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_DoubleLink(-, next, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(-, next, prev) = node)))&#10;"/>
<po column="52" line="110" message="Nodes_SetData, next, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 110:52&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_DoubleLink))))&#10;" number="10" object="" resource="ADTSL" toString="Nodes_SetData, next, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 110:52&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_DoubleLink))))&#10;"/>
<po column="15" line="114" message="Nodes_SetData, right, left, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 114:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_BinaryTree(-, right, left, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(-, right, left, parent) = node)))&#10;" number="11" object="" resource="ADTSL" toString="Nodes_SetData, right, left, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 114:15&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      exists mk_Nodes_BinaryTree(-, right, left, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(-, right, left, parent) = node)))&#10;"/>
<po column="61" line="114" message="Nodes_SetData, right, left, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 114:61&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_BinaryTree))))&#10;" number="12" object="" resource="ADTSL" toString="Nodes_SetData, right, left, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 114:61&#10;(forall node:Nodes_Node, data:Nodes_Data &amp; (is_(node, Nodes_SingleLink) or (is_(node, Nodes_DoubleLink) or is_(node, Nodes_BinaryTree))) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    (not is_(node, Nodes_DoubleLink) =&gt;&#10;      is_(node, Nodes_BinaryTree))))&#10;"/>
<po column="15" line="123" message="Nodes_GetNext, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 123:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(-, next):Nodes_Node &amp; mk_Nodes_SingleLink(-, next) = node))&#10;" number="13" object="" resource="ADTSL" toString="Nodes_GetNext, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 123:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(-, next):Nodes_Node &amp; mk_Nodes_SingleLink(-, next) = node))&#10;"/>
<po column="46" line="123" message="Nodes_GetNext, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 123:46&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;" number="14" object="" resource="ADTSL" toString="Nodes_GetNext, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 123:46&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;"/>
<po column="15" line="125" message="Nodes_GetNext, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 125:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_DoubleLink(-, next, -):Nodes_Node &amp; mk_Nodes_DoubleLink(-, next, -) = node))&#10;" number="15" object="" resource="ADTSL" toString="Nodes_GetNext, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 125:15&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_DoubleLink(-, next, -):Nodes_Node &amp; mk_Nodes_DoubleLink(-, next, -) = node))&#10;"/>
<po column="49" line="125" message="Nodes_GetNext, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 125:49&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_DoubleLink)))&#10;" number="16" object="" resource="ADTSL" toString="Nodes_GetNext, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 125:49&#10;(forall node:Nodes_Node &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_DoubleLink)))&#10;"/>
<po column="15" line="132" message="Nodes_SetNext, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 132:15&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(data, -):Nodes_Node &amp; mk_Nodes_SingleLink(data, -) = node))&#10;" number="17" object="" resource="ADTSL" toString="Nodes_SetNext, data: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 132:15&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_SingleLink(data, -):Nodes_Node &amp; mk_Nodes_SingleLink(data, -) = node))&#10;"/>
<po column="46" line="132" message="Nodes_SetNext, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 132:46&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;" number="18" object="" resource="ADTSL" toString="Nodes_SetNext, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 132:46&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_SingleLink)))&#10;"/>
<po column="15" line="135" message="Nodes_SetNext, data, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 135:15&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_DoubleLink(data, -, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(data, -, prev) = node))&#10;" number="19" object="" resource="ADTSL" toString="Nodes_SetNext, data, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 135:15&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    exists mk_Nodes_DoubleLink(data, -, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(data, -, prev) = node))&#10;"/>
<po column="52" line="135" message="Nodes_SetNext, data, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 135:52&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_DoubleLink)))&#10;" number="20" object="" resource="ADTSL" toString="Nodes_SetNext, data, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 135:52&#10;(forall node:Nodes_Node, next:Nodes_NodePtr &amp; (is_(node, Nodes_SingleLink) or is_(node, Nodes_DoubleLink)) =&gt;&#10;  (not is_(node, Nodes_SingleLink) =&gt;&#10;    is_(node, Nodes_DoubleLink)))&#10;"/>
<po column="10" line="142" message="Nodes_GetPrev, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 142:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  exists mk_Nodes_DoubleLink(-, -, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(-, -, prev) = node)&#10;" number="21" object="" resource="ADTSL" toString="Nodes_GetPrev, prev: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 142:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  exists mk_Nodes_DoubleLink(-, -, prev):Nodes_Node &amp; mk_Nodes_DoubleLink(-, -, prev) = node)&#10;"/>
<po column="44" line="142" message="Nodes_GetPrev, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 142:44&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  is_(node, Nodes_DoubleLink))&#10;" number="22" object="" resource="ADTSL" toString="Nodes_GetPrev, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 142:44&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  is_(node, Nodes_DoubleLink))&#10;"/>
<po column="10" line="147" message="Nodes_SetPrev, data, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 147:10&#10;(forall node:Nodes_Node, prev:Nodes_NodePtr &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  exists mk_Nodes_DoubleLink(data, next, -):Nodes_Node &amp; mk_Nodes_DoubleLink(data, next, -) = node)&#10;" number="23" object="" resource="ADTSL" toString="Nodes_SetPrev, data, next: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 147:10&#10;(forall node:Nodes_Node, prev:Nodes_NodePtr &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  exists mk_Nodes_DoubleLink(data, next, -):Nodes_Node &amp; mk_Nodes_DoubleLink(data, next, -) = node)&#10;"/>
<po column="47" line="147" message="Nodes_SetPrev, data, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 147:47&#10;(forall node:Nodes_Node, prev:Nodes_NodePtr &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  is_(node, Nodes_DoubleLink))&#10;" number="24" object="" resource="ADTSL" toString="Nodes_SetPrev, data, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 147:47&#10;(forall node:Nodes_Node, prev:Nodes_NodePtr &amp; is_(node, Nodes_DoubleLink) =&gt;&#10;  is_(node, Nodes_DoubleLink))&#10;"/>
<po column="10" line="153" message="Nodes_GetRight, right: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 153:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, right, -, -):Nodes_Node &amp; mk_Nodes_BinaryTree(-, right, -, -) = node)&#10;" number="25" object="" resource="ADTSL" toString="Nodes_GetRight, right: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 153:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, right, -, -):Nodes_Node &amp; mk_Nodes_BinaryTree(-, right, -, -) = node)&#10;"/>
<po column="48" line="153" message="Nodes_GetRight, right: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 153:48&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="26" object="" resource="ADTSL" toString="Nodes_GetRight, right: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 153:48&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="10" line="159" message="Nodes_SetRight, data, left, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 159:10&#10;(forall node:Nodes_Node, right:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, -, left, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(data, -, left, parent) = node)&#10;" number="27" object="" resource="ADTSL" toString="Nodes_SetRight, data, left, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 159:10&#10;(forall node:Nodes_Node, right:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, -, left, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(data, -, left, parent) = node)&#10;"/>
<po column="55" line="159" message="Nodes_SetRight, data, left, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 159:55&#10;(forall node:Nodes_Node, right:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="28" object="" resource="ADTSL" toString="Nodes_SetRight, data, left, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 159:55&#10;(forall node:Nodes_Node, right:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="10" line="165" message="Nodes_GetLeft, left: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 165:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, -, left, -):Nodes_Node &amp; mk_Nodes_BinaryTree(-, -, left, -) = node)&#10;" number="29" object="" resource="ADTSL" toString="Nodes_GetLeft, left: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 165:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, -, left, -):Nodes_Node &amp; mk_Nodes_BinaryTree(-, -, left, -) = node)&#10;"/>
<po column="47" line="165" message="Nodes_GetLeft, left: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 165:47&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="30" object="" resource="ADTSL" toString="Nodes_GetLeft, left: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 165:47&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="10" line="170" message="Nodes_SetLeft, data, right, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 170:10&#10;(forall node:Nodes_Node, left:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, right, -, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(data, right, -, parent) = node)&#10;" number="31" object="" resource="ADTSL" toString="Nodes_SetLeft, data, right, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 170:10&#10;(forall node:Nodes_Node, left:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, right, -, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(data, right, -, parent) = node)&#10;"/>
<po column="56" line="170" message="Nodes_SetLeft, data, right, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 170:56&#10;(forall node:Nodes_Node, left:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="32" object="" resource="ADTSL" toString="Nodes_SetLeft, data, right, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 170:56&#10;(forall node:Nodes_Node, left:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="10" line="176" message="Nodes_GetParent, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 176:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, -, -, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(-, -, -, parent) = node)&#10;" number="33" object="" resource="ADTSL" toString="Nodes_GetParent, parent: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 176:10&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(-, -, -, parent):Nodes_Node &amp; mk_Nodes_BinaryTree(-, -, -, parent) = node)&#10;"/>
<po column="49" line="176" message="Nodes_GetParent, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 176:49&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="34" object="" resource="ADTSL" toString="Nodes_GetParent, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 176:49&#10;(forall node:Nodes_Node &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="10" line="181" message="Nodes_SetParent, data, right, left: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 181:10&#10;(forall node:Nodes_Node, parent:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, right, left, -):Nodes_Node &amp; mk_Nodes_BinaryTree(data, right, left, -) = node)&#10;" number="35" object="" resource="ADTSL" toString="Nodes_SetParent, data, right, left: value binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 181:10&#10;(forall node:Nodes_Node, parent:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  exists mk_Nodes_BinaryTree(data, right, left, -):Nodes_Node &amp; mk_Nodes_BinaryTree(data, right, left, -) = node)&#10;"/>
<po column="54" line="181" message="Nodes_SetParent, data, right, left: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 181:54&#10;(forall node:Nodes_Node, parent:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;" number="36" object="" resource="ADTSL" toString="Nodes_SetParent, data, right, left: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 181:54&#10;(forall node:Nodes_Node, parent:Nodes_NodePtr &amp; is_(node, Nodes_BinaryTree) =&gt;&#10;  is_(node, Nodes_BinaryTree))&#10;"/>
<po column="12" line="239" message="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 239:12&#10;(forall length:nat1 &amp;&#10;  ((length &gt; 1) =&gt;&#10;    inv_Heaps_Location(mk_Heaps_Location(nil, false))))&#10;" number="37" object="" resource="ADTSL" toString="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 239:12&#10;(forall length:nat1 &amp;&#10;  ((length &gt; 1) =&gt;&#10;    inv_Heaps_Location(mk_Heaps_Location(nil, false))))&#10;"/>
<po column="43" line="240" message="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 240:43&#10;(forall length:nat1 &amp;&#10;  ((length &gt; 1) =&gt;&#10;    (length - 1) &gt; 0))&#10;" number="38" object="" resource="ADTSL" toString="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 240:43&#10;(forall length:nat1 &amp;&#10;  ((length &gt; 1) =&gt;&#10;    (length - 1) &gt; 0))&#10;"/>
<po column="12" line="242" message="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 242:12&#10;(forall length:nat1 &amp;&#10;  (not (length &gt; 1) =&gt;&#10;    inv_Heaps_Location(mk_Heaps_Location(nil, false))))&#10;" number="39" object="" resource="ADTSL" toString="Heaps_InitSequence: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 242:12&#10;(forall length:nat1 &amp;&#10;  (not (length &gt; 1) =&gt;&#10;    inv_Heaps_Location(mk_Heaps_Location(nil, false))))&#10;"/>
<po column="17" line="249" message="Heaps_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 249:17&#10;inv_Heaps_Heap(mk_Heaps_Heap(Heaps_InitSequence(Heaps_Size)))&#10;" number="40" object="" resource="ADTSL" toString="Heaps_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 249:17&#10;inv_Heaps_Heap(mk_Heaps_Heap(Heaps_InitSequence(Heaps_Size)))&#10;"/>
<po column="16" line="254" message="Heaps_AmountUsed: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 254:16&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp; ((store(i).allocated) = true) =&gt;&#10;      i in set inds store)))&#10;" number="41" object="" resource="ADTSL" toString="Heaps_AmountUsed: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 254:16&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp; ((store(i).allocated) = true) =&gt;&#10;      i in set inds store)))&#10;"/>
<po column="18" line="255" message="Heaps_AmountUsed: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 255:18&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp;&#10;      i in set inds store)))&#10;" number="42" object="" resource="ADTSL" toString="Heaps_AmountUsed: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 255:18&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp;&#10;      i in set inds store)))&#10;"/>
<po column="32" line="271" message="Heaps_ModifyLoc: sequence modification obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 271:32&#10;(forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location &amp; (address in set (inds (heap.storage))) =&gt;&#10;  dom {address |-&gt; location} subset inds (heap.storage))&#10;" number="43" object="" resource="ADTSL" toString="Heaps_ModifyLoc: sequence modification obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 271:32&#10;(forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location &amp; (address in set (inds (heap.storage))) =&gt;&#10;  dom {address |-&gt; location} subset inds (heap.storage))&#10;"/>
<po column="6" line="271" message="Heaps_ModifyLoc: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 271:6&#10;(forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location &amp; (address in set (inds (heap.storage))) =&gt;&#10;  inv_Heaps_Heap(mk_Heaps_Heap(((heap.storage) ++ {address |-&gt; location}))))&#10;" number="44" object="" resource="ADTSL" toString="Heaps_ModifyLoc: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 271:6&#10;(forall heap:Heaps_Heap, address:ADDRESS, location:Heaps_Location &amp; (address in set (inds (heap.storage))) =&gt;&#10;  inv_Heaps_Heap(mk_Heaps_Heap(((heap.storage) ++ {address |-&gt; location}))))&#10;"/>
<po column="10" line="284" message="Heaps_Modify: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 284:10&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    ((address in set (inds store)) =&gt;&#10;      address in set inds store)))&#10;" number="45" object="" resource="ADTSL" toString="Heaps_Modify: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 284:10&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    ((address in set (inds store)) =&gt;&#10;      address in set inds store)))&#10;"/>
<po column="6" line="281" message="Heaps_Modify: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 281:6&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(data, true)))&#10;" number="46" object="" resource="ADTSL" toString="Heaps_Modify: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 281:6&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(data, true)))&#10;"/>
<po column="37" line="281" message="Heaps_Modify: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 281:37&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  inv_Heaps_Location(mk_Heaps_Location(data, true)))&#10;" number="47" object="" resource="ADTSL" toString="Heaps_Modify: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 281:37&#10;(forall heap:Heaps_Heap, address:ADDRESS, data:Heaps_Data &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  inv_Heaps_Location(mk_Heaps_Location(data, true)))&#10;"/>
<po column="15" line="296" message="Heaps_Retrieve: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 296:15&#10;(forall heap:Heaps_Heap, address:ADDRESS &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    ((address in set (inds store)) =&gt;&#10;      address in set inds store)))&#10;" number="48" object="" resource="ADTSL" toString="Heaps_Retrieve: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 296:15&#10;(forall heap:Heaps_Heap, address:ADDRESS &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    ((address in set (inds store)) =&gt;&#10;      address in set inds store)))&#10;"/>
<po column="6" line="292" message="Heaps_Retrieve: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 292:6&#10;(forall heap:Heaps_Heap, address:ADDRESS &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  address in set inds (heap.storage))&#10;" number="49" object="" resource="ADTSL" toString="Heaps_Retrieve: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 292:6&#10;(forall heap:Heaps_Heap, address:ADDRESS &amp; let store:seq of (Heaps_Location) = (heap.storage) in ((address in set (inds store)) and ((store(address).allocated) = true)) =&gt;&#10;  address in set inds (heap.storage))&#10;"/>
<po column="36" line="305" message="Heaps_UnallocatedAddresses: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 305:36&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp;&#10;      i in set inds store)))&#10;" number="50" object="" resource="ADTSL" toString="Heaps_UnallocatedAddresses: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 305:36&#10;(forall heap:Heaps_Heap &amp;&#10;  (let store:seq of (Heaps_Location) = (heap.storage) in&#10;    (forall i in set (inds store) &amp;&#10;      i in set inds store)))&#10;"/>
<po column="6" line="313" message="Heaps_UnallocatedAddress: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 313:6&#10;(forall heap:Heaps_Heap &amp; Heaps_Available(heap) =&gt;&#10;  exists1 new in set Heaps_UnallocatedAddresses(heap) &amp; (forall i in set Heaps_UnallocatedAddresses(heap) &amp; (new &lt;= i)))&#10;" number="51" object="" resource="ADTSL" toString="Heaps_UnallocatedAddress: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 313:6&#10;(forall heap:Heaps_Heap &amp; Heaps_Available(heap) =&gt;&#10;  exists1 new in set Heaps_UnallocatedAddresses(heap) &amp; (forall i in set Heaps_UnallocatedAddresses(heap) &amp; (new &lt;= i)))&#10;"/>
<po column="23" line="329" message="NEW, newAddress: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 329:23&#10;pre_Heaps_UnallocatedAddress(heap)&#10;" number="52" object="" resource="ADTSL" toString="NEW, newAddress: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 329:23&#10;pre_Heaps_UnallocatedAddress(heap)&#10;"/>
<po column="19" line="330" message="NEW, newLoc: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 330:19&#10;inv_Heaps_Location(mk_Heaps_Location(data, true))&#10;" number="53" object="" resource="ADTSL" toString="NEW, newLoc: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 330:19&#10;inv_Heaps_Location(mk_Heaps_Location(data, true))&#10;"/>
<po column="19" line="331" message="NEW: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 331:19&#10;pre_Heaps_ModifyLoc(heap, newAddress, newLoc)&#10;" number="54" object="" resource="ADTSL" toString="NEW: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 331:19&#10;pre_Heaps_ModifyLoc(heap, newAddress, newLoc)&#10;"/>
<po column="40" line="348" message="DISPOSE: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 348:40&#10;inv_Heaps_Location(mk_Heaps_Location(nil, false))&#10;" number="55" object="" resource="ADTSL" toString="DISPOSE: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 348:40&#10;inv_Heaps_Location(mk_Heaps_Location(nil, false))&#10;"/>
<po column="14" line="347" message="DISPOSE: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 347:14&#10;pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false))&#10;" number="56" object="" resource="ADTSL" toString="DISPOSE: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 347:14&#10;pre_Heaps_ModifyLoc(heap, address, mk_Heaps_Location(nil, false))&#10;"/>
<po column="45" line="347" message="DISPOSE: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 347:45&#10;inv_Heaps_Location(mk_Heaps_Location(nil, false))&#10;" number="57" object="" resource="ADTSL" toString="DISPOSE: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 347:45&#10;inv_Heaps_Location(mk_Heaps_Location(nil, false))&#10;"/>
<po column="14" line="356" message="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 356:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetData(Heaps_Retrieve(heap, ptr), data))&#10;" number="58" object="" resource="ADTSL" toString="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 356:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetData(Heaps_Retrieve(heap, ptr), data))&#10;"/>
<po column="16" line="357" message="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:16&#10;pre_Nodes_SetData(Heaps_Retrieve(heap, ptr), data)&#10;" number="59" object="" resource="ADTSL" toString="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:16&#10;pre_Nodes_SetData(Heaps_Retrieve(heap, ptr), data)&#10;"/>
<po column="30" line="357" message="SET_DATA: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="60" object="" resource="ADTSL" toString="SET_DATA: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="30" line="357" message="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="61" object="" resource="ADTSL" toString="SET_DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 357:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="14" line="362" message="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 362:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetNext(Heaps_Retrieve(heap, ptr), next))&#10;" number="62" object="" resource="ADTSL" toString="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 362:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetNext(Heaps_Retrieve(heap, ptr), next))&#10;"/>
<po column="16" line="363" message="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:16&#10;pre_Nodes_SetNext(Heaps_Retrieve(heap, ptr), next)&#10;" number="63" object="" resource="ADTSL" toString="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:16&#10;pre_Nodes_SetNext(Heaps_Retrieve(heap, ptr), next)&#10;"/>
<po column="30" line="363" message="SET_NEXT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="64" object="" resource="ADTSL" toString="SET_NEXT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="30" line="363" message="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="65" object="" resource="ADTSL" toString="SET_NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 363:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="14" line="367" message="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 367:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left))&#10;" number="66" object="" resource="ADTSL" toString="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 367:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left))&#10;"/>
<po column="16" line="368" message="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:16&#10;pre_Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left)&#10;" number="67" object="" resource="ADTSL" toString="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:16&#10;pre_Nodes_SetLeft(Heaps_Retrieve(heap, ptr), left)&#10;"/>
<po column="30" line="368" message="SET_LEFT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="68" object="" resource="ADTSL" toString="SET_LEFT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="30" line="368" message="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="69" object="" resource="ADTSL" toString="SET_LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 368:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="14" line="372" message="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 372:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetRight(Heaps_Retrieve(heap, ptr), right))&#10;" number="70" object="" resource="ADTSL" toString="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 372:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetRight(Heaps_Retrieve(heap, ptr), right))&#10;"/>
<po column="16" line="373" message="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:16&#10;pre_Nodes_SetRight(Heaps_Retrieve(heap, ptr), right)&#10;" number="71" object="" resource="ADTSL" toString="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:16&#10;pre_Nodes_SetRight(Heaps_Retrieve(heap, ptr), right)&#10;"/>
<po column="31" line="373" message="SET_RIGHT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:31&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="72" object="" resource="ADTSL" toString="SET_RIGHT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:31&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="31" line="373" message="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:31&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="73" object="" resource="ADTSL" toString="SET_RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 373:31&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="14" line="377" message="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 377:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev))&#10;" number="74" object="" resource="ADTSL" toString="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 377:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev))&#10;"/>
<po column="16" line="378" message="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:16&#10;pre_Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev)&#10;" number="75" object="" resource="ADTSL" toString="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:16&#10;pre_Nodes_SetPrev(Heaps_Retrieve(heap, ptr), prev)&#10;"/>
<po column="30" line="378" message="SET_PREV: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="76" object="" resource="ADTSL" toString="SET_PREV: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:30&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="30" line="378" message="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="77" object="" resource="ADTSL" toString="SET_PREV: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 378:30&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="14" line="382" message="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 382:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent))&#10;" number="78" object="" resource="ADTSL" toString="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 382:14&#10;pre_Heaps_Modify(heap, ptr, Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent))&#10;"/>
<po column="16" line="383" message="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:16&#10;pre_Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent)&#10;" number="79" object="" resource="ADTSL" toString="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:16&#10;pre_Nodes_SetParent(Heaps_Retrieve(heap, ptr), parent)&#10;"/>
<po column="32" line="383" message="SET_PARENT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:32&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="80" object="" resource="ADTSL" toString="SET_PARENT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:32&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="32" line="383" message="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:32&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="81" object="" resource="ADTSL" toString="SET_PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 383:32&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="13" line="387" message="DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:13&#10;pre_Nodes_GetData(Heaps_Retrieve(heap, ptr))&#10;" number="82" object="" resource="ADTSL" toString="DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:13&#10;pre_Nodes_GetData(Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="27" line="387" message="DATA: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="83" object="" resource="ADTSL" toString="DATA: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="27" line="387" message="DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="84" object="" resource="ADTSL" toString="DATA: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 387:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="13" line="391" message="NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:13&#10;pre_Nodes_GetNext(Heaps_Retrieve(heap, ptr))&#10;" number="85" object="" resource="ADTSL" toString="NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:13&#10;pre_Nodes_GetNext(Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="27" line="391" message="NEXT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="86" object="" resource="ADTSL" toString="NEXT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="27" line="391" message="NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="87" object="" resource="ADTSL" toString="NEXT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 391:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="13" line="395" message="LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:13&#10;pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr))&#10;" number="88" object="" resource="ADTSL" toString="LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:13&#10;pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="27" line="395" message="LEFT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="89" object="" resource="ADTSL" toString="LEFT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:27&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="27" line="395" message="LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="90" object="" resource="ADTSL" toString="LEFT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 395:27&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="13" line="399" message="RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:13&#10;pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr))&#10;" number="91" object="" resource="ADTSL" toString="RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:13&#10;pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="28" line="399" message="RIGHT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:28&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="92" object="" resource="ADTSL" toString="RIGHT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:28&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="28" line="399" message="RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:28&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="93" object="" resource="ADTSL" toString="RIGHT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 399:28&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="13" line="403" message="PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:13&#10;pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr))&#10;" number="94" object="" resource="ADTSL" toString="PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:13&#10;pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="29" line="403" message="PARENT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:29&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;" number="95" object="" resource="ADTSL" toString="PARENT: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:29&#10;((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;(is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))&#10;"/>
<po column="29" line="403" message="PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:29&#10;pre_Heaps_Retrieve(heap, ptr)&#10;" number="96" object="" resource="ADTSL" toString="PARENT: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 403:29&#10;pre_Heaps_Retrieve(heap, ptr)&#10;"/>
<po column="22" line="460" message="SList_Seq, node: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 460:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;" number="97" object="" resource="ADTSL" toString="SList_Seq, node: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 460:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;"/>
<po column="22" line="461" message="SList_Seq, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 461:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      pre_Nodes_GetData(node))))&#10;" number="98" object="" resource="ADTSL" toString="SList_Seq, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 461:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      pre_Nodes_GetData(node))))&#10;"/>
<po column="36" line="461" message="SList_Seq, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 461:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      ((is_(node, Nodes_BinaryTree)) or&#10;      (is_(node, Nodes_DoubleLink)) or&#10;      (is_(node, Nodes_SingleLink))))))&#10;" number="99" object="" resource="ADTSL" toString="SList_Seq, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 461:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      ((is_(node, Nodes_BinaryTree)) or&#10;      (is_(node, Nodes_DoubleLink)) or&#10;      (is_(node, Nodes_SingleLink))))))&#10;"/>
<po column="22" line="462" message="SList_Seq, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 462:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      (let data:Nodes_Data = Nodes_GetData(node) in&#10;        pre_Nodes_GetNext(node)))))&#10;" number="100" object="" resource="ADTSL" toString="SList_Seq, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 462:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      (let data:Nodes_Data = Nodes_GetData(node) in&#10;        pre_Nodes_GetNext(node)))))&#10;"/>
<po column="36" line="462" message="SList_Seq, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 462:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      (let data:Nodes_Data = Nodes_GetData(node) in&#10;        ((is_(node, Nodes_BinaryTree)) or&#10;        (is_(node, Nodes_DoubleLink)) or&#10;        (is_(node, Nodes_SingleLink)))))))&#10;" number="101" object="" resource="ADTSL" toString="SList_Seq, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 462:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    (let node:[Heaps_Data] = Heaps_Retrieve(heap, list) in&#10;      (let data:Nodes_Data = Nodes_GetData(node) in&#10;        ((is_(node, Nodes_BinaryTree)) or&#10;        (is_(node, Nodes_DoubleLink)) or&#10;        (is_(node, Nodes_SingleLink)))))))&#10;"/>
<po column="1" line="470" message="SList_Lengthf: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 470:1&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  post_SList_Lengthf(heap, list, (if (not SList_IsEmpty(list))&#10;  then let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (1 + SList_Lengthf(heap, tail))&#10;  else 0)))&#10;" number="102" object="" resource="ADTSL" toString="SList_Lengthf: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 470:1&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  post_SList_Lengthf(heap, list, (if (not SList_IsEmpty(list))&#10;  then let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (1 + SList_Lengthf(heap, tail))&#10;  else 0)))&#10;"/>
<po column="22" line="473" message="SList_Lengthf, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Nodes_GetNext(Heaps_Retrieve(heap, list))))&#10;" number="103" object="" resource="ADTSL" toString="SList_Lengthf, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:22&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Nodes_GetNext(Heaps_Retrieve(heap, list))))&#10;"/>
<po column="36" line="473" message="SList_Lengthf, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink)))))&#10;" number="104" object="" resource="ADTSL" toString="SList_Lengthf, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink)))))&#10;"/>
<po column="36" line="473" message="SList_Lengthf, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;" number="105" object="" resource="ADTSL" toString="SList_Lengthf, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 473:36&#10;(forall heap:Heaps_Heap, list:SList_List &amp;&#10;  ((not SList_IsEmpty(list)) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;"/>
<po column="1" line="483" message="SList_PtrToNode: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 483:1&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  pre_SList_PtrToNode(heap, list, position) =&gt; post_SList_PtrToNode(heap, list, position, let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list)))&#10;" number="106" object="" resource="ADTSL" toString="SList_PtrToNode: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 483:1&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  pre_SList_PtrToNode(heap, list, position) =&gt; post_SList_PtrToNode(heap, list, position, let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list)))&#10;"/>
<po column="17" line="492" message="SList_PtrToNode, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:17&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    pre_Nodes_GetData(Heaps_Retrieve(heap, RESULT))))&#10;" number="107" object="" resource="ADTSL" toString="SList_PtrToNode, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:17&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    pre_Nodes_GetData(Heaps_Retrieve(heap, RESULT))))&#10;"/>
<po column="31" line="492" message="SList_PtrToNode, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    ((is_(Heaps_Retrieve(heap, RESULT), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, RESULT), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, RESULT), Nodes_SingleLink)))))&#10;" number="108" object="" resource="ADTSL" toString="SList_PtrToNode, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    ((is_(Heaps_Retrieve(heap, RESULT), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, RESULT), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, RESULT), Nodes_SingleLink)))))&#10;"/>
<po column="31" line="492" message="SList_PtrToNode, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    pre_Heaps_Retrieve(heap, RESULT)))&#10;" number="109" object="" resource="ADTSL" toString="SList_PtrToNode, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 492:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    pre_Heaps_Retrieve(heap, RESULT)))&#10;"/>
<po column="23" line="494" message="SList_PtrToNode: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 494:23&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, RESULT)), listSeq:seq of (SList_Data) = SList_Seq(heap, list) in&#10;      position in set inds listSeq)))&#10;" number="110" object="" resource="ADTSL" toString="SList_PtrToNode: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 494:23&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp;&#10;  ((position &lt;= SList_Lengthf(heap, list)) =&gt; let RESULT:Nodes_NodePtr = let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in (if (position &gt; 1)&#10;  then SList_PtrToNode(heap, tail, (position - 1))&#10;  else list) in &#10;    (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, RESULT)), listSeq:seq of (SList_Data) = SList_Seq(heap, list) in&#10;      position in set inds listSeq)))&#10;"/>
<po column="17" line="486" message="SList_PtrToNode, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:17&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  pre_Nodes_GetNext(Heaps_Retrieve(heap, list)))&#10;" number="111" object="" resource="ADTSL" toString="SList_PtrToNode, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:17&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  pre_Nodes_GetNext(Heaps_Retrieve(heap, list)))&#10;"/>
<po column="31" line="486" message="SList_PtrToNode, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))&#10;" number="112" object="" resource="ADTSL" toString="SList_PtrToNode, tail: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))&#10;"/>
<po column="31" line="486" message="SList_PtrToNode, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  pre_Heaps_Retrieve(heap, list))&#10;" number="113" object="" resource="ADTSL" toString="SList_PtrToNode, tail: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 486:31&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  pre_Heaps_Retrieve(heap, list))&#10;"/>
<po column="16" line="488" message="SList_PtrToNode: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 488:16&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  (let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in&#10;    ((position &gt; 1) =&gt;&#10;      pre_SList_PtrToNode(heap, tail, (position - 1)))))&#10;" number="114" object="" resource="ADTSL" toString="SList_PtrToNode: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 488:16&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  (let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in&#10;    ((position &gt; 1) =&gt;&#10;      pre_SList_PtrToNode(heap, tail, (position - 1)))))&#10;"/>
<po column="53" line="488" message="SList_PtrToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 488:53&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  (let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in&#10;    ((position &gt; 1) =&gt;&#10;      (position - 1) &gt; 0)))&#10;" number="115" object="" resource="ADTSL" toString="SList_PtrToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 488:53&#10;(forall heap:Heaps_Heap, list:SList_List, position:nat1 &amp; (position &lt;= SList_Lengthf(heap, list)) =&gt;&#10;  (let tail:Nodes_NodePtr = Nodes_GetNext(Heaps_Retrieve(heap, list)) in&#10;    ((position &gt; 1) =&gt;&#10;      (position - 1) &gt; 0)))&#10;"/>
<po column="1" line="509" message="SList_InsertAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 509:1&#10;(([data] ^ SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;" number="116" object="" resource="ADTSL" toString="SList_InsertAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 509:1&#10;(([data] ^ SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;"/>
<po column="12" line="526" message="SList_InsertAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 526:12&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;" number="117" object="" resource="ADTSL" toString="SList_InsertAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 526:12&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;"/>
<po column="30" line="526" message="SList_InsertAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 526:30&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;" number="118" object="" resource="ADTSL" toString="SList_InsertAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 526:30&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;"/>
<po column="1" line="518" message="SList_InsertAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 518:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) = SList_Seq(heap, ptr))&#10;" number="119" object="" resource="ADTSL" toString="SList_InsertAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 518:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) = SList_Seq(heap, ptr))&#10;"/>
<po column="14" line="543" message="SList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 543:14&#10;(let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;  (forall i in set (inds new) &amp; (i &lt;&gt; position) =&gt;&#10;    i in set inds new))&#10;" number="120" object="" resource="ADTSL" toString="SList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 543:14&#10;(let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;  (forall i in set (inds new) &amp; (i &lt;&gt; position) =&gt;&#10;    i in set inds new))&#10;"/>
<po column="10" line="544" message="SList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 544:10&#10;(let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;  ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) =&gt;&#10;    position in set inds new))&#10;" number="121" object="" resource="ADTSL" toString="SList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 544:10&#10;(let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;  ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) =&gt;&#10;    position in set inds new))&#10;"/>
<po column="1" line="533" message="SList_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 533:1&#10;let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) and ((new(position) = data) and ((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap))))&#10;" number="122" object="" resource="ADTSL" toString="SList_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 533:1&#10;let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) and ((new(position) = data) and ((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap))))&#10;"/>
<po column="16" line="539" message="SList_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 539:16&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;" number="123" object="" resource="ADTSL" toString="SList_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 539:16&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;"/>
<po column="53" line="539" message="SList_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 539:53&#10;(position - 1) &gt; 0&#10;" number="124" object="" resource="ADTSL" toString="SList_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 539:53&#10;(position - 1) &gt; 0&#10;"/>
<po column="1" line="551" message="SList_Append: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 551:1&#10;(((SList_Seq(heap~, list) ^ [data]) = SList_Seq(heap, RESULT)) and ((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)))&#10;" number="125" object="" resource="ADTSL" toString="SList_Append: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 551:1&#10;(((SList_Seq(heap~, list) ^ [data]) = SList_Seq(heap, RESULT)) and ((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)))&#10;"/>
<po column="11" line="557" message="SList_Append: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 557:11&#10;while (NEXT(ptr) &lt;&gt; NIL) do ...&#10;" number="126" object="" resource="ADTSL" toString="SList_Append: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 557:11&#10;while (NEXT(ptr) &lt;&gt; NIL) do ...&#10;"/>
<po column="28" line="576" message="SList_Update: sequence modification obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 576:28&#10;dom {position |-&gt; data} subset inds SList_Seq(heap~, list)&#10;" number="127" object="" resource="ADTSL" toString="SList_Update: sequence modification obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 576:28&#10;dom {position |-&gt; data} subset inds SList_Seq(heap~, list)&#10;"/>
<po column="1" line="569" message="SList_Update: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 569:1&#10;(((SList_Seq(heap~, list) ++ {position |-&gt; data}) = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = Heaps_AmountUsed(heap)))&#10;" number="128" object="" resource="ADTSL" toString="SList_Update: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 569:1&#10;(((SList_Seq(heap~, list) ++ {position |-&gt; data}) = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = Heaps_AmountUsed(heap)))&#10;"/>
<po column="32" line="571" message="SList_Update, ptr: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 571:32&#10;pre_SList_PtrToNode(heap, list, position)&#10;" number="129" object="" resource="ADTSL" toString="SList_Update, ptr: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 571:32&#10;pre_SList_PtrToNode(heap, list, position)&#10;"/>
<po column="9" line="590" message="SList_DeleteAtBeginning: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 590:9&#10;SList_Seq(heap~, list) &lt;&gt; []&#10;" number="130" object="" resource="ADTSL" toString="SList_DeleteAtBeginning: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 590:9&#10;SList_Seq(heap~, list) &lt;&gt; []&#10;"/>
<po column="1" line="583" message="SList_DeleteAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 583:1&#10;((tl SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;" number="131" object="" resource="ADTSL" toString="SList_DeleteAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 583:1&#10;((tl SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;"/>
<po column="7" line="604" message="SList_DeleteAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;" number="132" object="" resource="ADTSL" toString="SList_DeleteAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;"/>
<po column="22" line="604" message="SList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:22&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;" number="133" object="" resource="ADTSL" toString="SList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:22&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;"/>
<po column="19" line="604" message="SList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:19&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  (tl old) &lt;&gt; [])&#10;" number="134" object="" resource="ADTSL" toString="SList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 604:19&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  (tl old) &lt;&gt; [])&#10;"/>
<po column="1" line="595" message="SList_DeleteAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 595:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) = SList_Seq(heap, ptr))&#10;" number="135" object="" resource="ADTSL" toString="SList_DeleteAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 595:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) = SList_Seq(heap, ptr))&#10;"/>
<po column="7" line="618" message="SList_Delete: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 618:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp; (i &lt;&gt; position) =&gt;&#10;    i in set inds old))&#10;" number="136" object="" resource="ADTSL" toString="SList_Delete: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 618:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp; (i &lt;&gt; position) =&gt;&#10;    i in set inds old))&#10;"/>
<po column="1" line="609" message="SList_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 609:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, list) in (([old(i) | i in set (inds old) &amp; (i &lt;&gt; position)] = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)))&#10;" number="137" object="" resource="ADTSL" toString="SList_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 609:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, list) in (([old(i) | i in set (inds old) &amp; (i &lt;&gt; position)] = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)))&#10;"/>
<po column="21" line="614" message="SList_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 614:21&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;" number="138" object="" resource="ADTSL" toString="SList_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 614:21&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;"/>
<po column="58" line="614" message="SList_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 614:58&#10;(position - 1) &gt; 0&#10;" number="139" object="" resource="ADTSL" toString="SList_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 614:58&#10;(position - 1) &gt; 0&#10;"/>
<po column="25" line="638" message="SList_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 638:25&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp;&#10;    pre_(traversal, old(i))))&#10;" number="140" object="" resource="ADTSL" toString="SList_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 638:25&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp;&#10;    pre_(traversal, old(i))))&#10;"/>
<po column="35" line="638" message="SList_Traverse: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 638:35&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp;&#10;    i in set inds old))&#10;" number="141" object="" resource="ADTSL" toString="SList_Traverse: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 638:35&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;  (forall i in set (inds old) &amp;&#10;    i in set inds old))&#10;"/>
<po column="1" line="627" message="SList_Traverse: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 627:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, list) in ((old &lt;&gt; []) =&gt; ([traversal(old(i)) | i in set (inds old)] = SList_Seq(heap, RESULT)))&#10;" number="142" object="" resource="ADTSL" toString="SList_Traverse: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 627:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, list) in ((old &lt;&gt; []) =&gt; ([traversal(old(i)) | i in set (inds old)] = SList_Seq(heap, RESULT)))&#10;"/>
<po column="6" line="630" message="SList_Traverse: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 630:6&#10;while (ptr &lt;&gt; NIL) do ...&#10;" number="143" object="" resource="ADTSL" toString="SList_Traverse: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 630:6&#10;while (ptr &lt;&gt; NIL) do ...&#10;"/>
<po column="25" line="631" message="SList_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 631:25&#10;pre_(traversal, DATA(ptr))&#10;" number="144" object="" resource="ADTSL" toString="SList_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 631:25&#10;pre_(traversal, DATA(ptr))&#10;"/>
<po column="39" line="652" message="SList_Element: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 652:39&#10;pre_SList_PtrToNode(heap, list, position)&#10;" number="145" object="" resource="ADTSL" toString="SList_Element: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 652:39&#10;pre_SList_PtrToNode(heap, list, position)&#10;"/>
<po column="17" line="696" message="DList_LastNode, next: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:17&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  pre_Nodes_GetNext(Heaps_Retrieve(heap, list)))&#10;" number="146" object="" resource="ADTSL" toString="DList_LastNode, next: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:17&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  pre_Nodes_GetNext(Heaps_Retrieve(heap, list)))&#10;"/>
<po column="31" line="696" message="DList_LastNode, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:31&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))&#10;" number="147" object="" resource="ADTSL" toString="DList_LastNode, next: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:31&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))&#10;"/>
<po column="31" line="696" message="DList_LastNode, next: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:31&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  pre_Heaps_Retrieve(heap, list))&#10;" number="148" object="" resource="ADTSL" toString="DList_LastNode, next: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 696:31&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  pre_Heaps_Retrieve(heap, list))&#10;"/>
<po column="22" line="716" message="DList_Backward, prev: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:22&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetPrev(Heaps_Retrieve(heap, list))))&#10;" number="149" object="" resource="ADTSL" toString="DList_Backward, prev: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:22&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetPrev(Heaps_Retrieve(heap, list))))&#10;"/>
<po column="36" line="716" message="DList_Backward, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink)))))&#10;" number="150" object="" resource="ADTSL" toString="DList_Backward, prev: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink)))))&#10;"/>
<po column="36" line="716" message="DList_Backward, prev: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;" number="151" object="" resource="ADTSL" toString="DList_Backward, prev: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 716:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, list)))&#10;"/>
<po column="22" line="717" message="DList_Backward, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:22&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      pre_Nodes_GetData(Heaps_Retrieve(heap, list)))))&#10;" number="152" object="" resource="ADTSL" toString="DList_Backward, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:22&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      pre_Nodes_GetData(Heaps_Retrieve(heap, list)))))&#10;"/>
<po column="36" line="717" message="DList_Backward, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;      (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;      (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))))&#10;" number="153" object="" resource="ADTSL" toString="DList_Backward, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      ((is_(Heaps_Retrieve(heap, list), Nodes_BinaryTree)) or&#10;      (is_(Heaps_Retrieve(heap, list), Nodes_DoubleLink)) or&#10;      (is_(Heaps_Retrieve(heap, list), Nodes_SingleLink))))))&#10;"/>
<po column="36" line="717" message="DList_Backward, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      pre_Heaps_Retrieve(heap, list))))&#10;" number="154" object="" resource="ADTSL" toString="DList_Backward, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 717:36&#10;(forall heap:Heaps_Heap, list:DList_List &amp;&#10;  ((list &lt;&gt; NIL) =&gt;&#10;    (let prev:Nodes_NodePtr = Nodes_GetPrev(Heaps_Retrieve(heap, list)) in&#10;      pre_Heaps_Retrieve(heap, list))))&#10;"/>
<po column="1" line="741" message="DList_InsertAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 741:1&#10;(([data] ^ SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;" number="155" object="" resource="ADTSL" toString="DList_InsertAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 741:1&#10;(([data] ^ SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;"/>
<po column="12" line="759" message="DList_InsertAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 759:12&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;" number="156" object="" resource="ADTSL" toString="DList_InsertAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 759:12&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;"/>
<po column="30" line="759" message="DList_InsertAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 759:30&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;" number="157" object="" resource="ADTSL" toString="DList_InsertAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 759:30&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;"/>
<po column="1" line="749" message="DList_InsertAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 749:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) = SList_Seq(heap, ptr))&#10;" number="158" object="" resource="ADTSL" toString="DList_InsertAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 749:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in ((([old(1)] ^ [data]) ^ (tl old)) = SList_Seq(heap, ptr))&#10;"/>
<po column="19" line="773" message="DList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 773:19&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;    (forall i in set (inds new) &amp; (i &lt;&gt; position) =&gt;&#10;      i in set inds new)))&#10;" number="159" object="" resource="ADTSL" toString="DList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 773:19&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;    (forall i in set (inds new) &amp; (i &lt;&gt; position) =&gt;&#10;      i in set inds new)))&#10;"/>
<po column="15" line="774" message="DList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 774:15&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;    ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) =&gt;&#10;      position in set inds new)))&#10;" number="160" object="" resource="ADTSL" toString="DList_Insert: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 774:15&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in&#10;    ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) =&gt;&#10;      position in set inds new)))&#10;"/>
<po column="1" line="761" message="DList_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 761:1&#10;(DList_IsList(heap, RESULT) and let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) and (new(position) = data)))&#10;" number="161" object="" resource="ADTSL" toString="DList_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 761:1&#10;(DList_IsList(heap, RESULT) and let new:seq of (SList_Data) = SList_Seq(heap, RESULT) in ((SList_Seq(heap~, list) = [new(i) | i in set (inds new) &amp; (i &lt;&gt; position)]) and (new(position) = data)))&#10;"/>
<po column="21" line="767" message="DList_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 767:21&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;" number="162" object="" resource="ADTSL" toString="DList_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 767:21&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;"/>
<po column="58" line="767" message="DList_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 767:58&#10;(position - 1) &gt; 0&#10;" number="163" object="" resource="ADTSL" toString="DList_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 767:58&#10;(position - 1) &gt; 0&#10;"/>
<po column="9" line="784" message="DList_DeleteAtBeginning: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 784:9&#10;SList_Seq(heap~, list) &lt;&gt; []&#10;" number="164" object="" resource="ADTSL" toString="DList_DeleteAtBeginning: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 784:9&#10;SList_Seq(heap~, list) &lt;&gt; []&#10;"/>
<po column="1" line="776" message="DList_DeleteAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 776:1&#10;((tl SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;" number="165" object="" resource="ADTSL" toString="DList_DeleteAtBeginning: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 776:1&#10;((tl SList_Seq(heap~, list)) = SList_Seq(heap, RESULT))&#10;"/>
<po column="7" line="797" message="DList_DeleteAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;" number="166" object="" resource="ADTSL" toString="DList_DeleteAfter: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:7&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  1 in set inds old)&#10;"/>
<po column="22" line="797" message="DList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:22&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;" number="167" object="" resource="ADTSL" toString="DList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:22&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  old &lt;&gt; [])&#10;"/>
<po column="19" line="797" message="DList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:19&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  (tl old) &lt;&gt; [])&#10;" number="168" object="" resource="ADTSL" toString="DList_DeleteAfter: non-empty sequence obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 797:19&#10;(let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in&#10;  (tl old) &lt;&gt; [])&#10;"/>
<po column="1" line="786" message="DList_DeleteAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 786:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) = SList_Seq(heap, ptr))&#10;" number="169" object="" resource="ADTSL" toString="DList_DeleteAfter: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 786:1&#10;let old:seq of (SList_Data) = SList_Seq(heap~, ptr) in (([old(1)] ^ (tl (tl old))) = SList_Seq(heap, ptr))&#10;"/>
<po column="12" line="809" message="DList_Delete: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 809:12&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;    (forall i in set (inds old) &amp; (i &lt;&gt; position) =&gt;&#10;      i in set inds old)))&#10;" number="170" object="" resource="ADTSL" toString="DList_Delete: sequence apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 809:12&#10;(DList_IsList(heap, RESULT) =&gt;&#10;  (let old:seq of (SList_Data) = SList_Seq(heap~, list) in&#10;    (forall i in set (inds old) &amp; (i &lt;&gt; position) =&gt;&#10;      i in set inds old)))&#10;"/>
<po column="1" line="799" message="DList_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 799:1&#10;(DList_IsList(heap, RESULT) and let old:seq of (SList_Data) = SList_Seq(heap~, list) in (([old(i) | i in set (inds old) &amp; (i &lt;&gt; position)] = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1))))&#10;" number="171" object="" resource="ADTSL" toString="DList_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 799:1&#10;(DList_IsList(heap, RESULT) and let old:seq of (SList_Data) = SList_Seq(heap~, list) in (([old(i) | i in set (inds old) &amp; (i &lt;&gt; position)] = SList_Seq(heap, RESULT)) and (Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1))))&#10;"/>
<po column="16" line="804" message="DList_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 804:16&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;" number="172" object="" resource="ADTSL" toString="DList_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 804:16&#10;pre_SList_PtrToNode(heap, list, (position - 1))&#10;"/>
<po column="53" line="804" message="DList_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 804:53&#10;(position - 1) &gt; 0&#10;" number="173" object="" resource="ADTSL" toString="DList_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 804:53&#10;(position - 1) &gt; 0&#10;"/>
<po column="1" line="813" message="DList_Append: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 813:1&#10;(((SList_Seq(heap~, list) ^ [data]) = SList_Seq(heap, RESULT)) and (((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) and DList_IsList(heap, RESULT)))&#10;" number="174" object="" resource="ADTSL" toString="DList_Append: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 813:1&#10;(((SList_Seq(heap~, list) ^ [data]) = SList_Seq(heap, RESULT)) and (((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) and DList_IsList(heap, RESULT)))&#10;"/>
<po column="11" line="819" message="DList_Append: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 819:11&#10;while (NEXT(ptr) &lt;&gt; NIL) do ...&#10;" number="175" object="" resource="ADTSL" toString="DList_Append: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 819:11&#10;while (NEXT(ptr) &lt;&gt; NIL) do ...&#10;"/>
<po column="1" line="869" message="Queues_Dequeue: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 869:1&#10;is_(RESULT, (Queues_Queue * Queues_Data))&#10;" number="176" object="" resource="ADTSL" toString="Queues_Dequeue: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 869:1&#10;is_(RESULT, (Queues_Queue * Queues_Data))&#10;"/>
<po column="1" line="913" message="Stacks_Pop: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 913:1&#10;is_(RESULT, (Stacks_Stack * Stacks_Data))&#10;" number="177" object="" resource="ADTSL" toString="Stacks_Pop: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 913:1&#10;is_(RESULT, (Stacks_Stack * Stacks_Data))&#10;"/>
<po column="15" line="1011" message="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1011:15&#10;(forall tree:set of (STrees_Node) &amp;&#10;  (forall node in set tree &amp;&#10;    pre_STrees_IsRoot(tree, node)))&#10;" number="178" object="" resource="ADTSL" toString="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1011:15&#10;(forall tree:set of (STrees_Node) &amp;&#10;  (forall node in set tree &amp;&#10;    pre_STrees_IsRoot(tree, node)))&#10;"/>
<po column="45" line="1011" message="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1011:45&#10;(forall tree:set of (STrees_Node) &amp;&#10;  (forall node in set tree &amp;&#10;    pre_STrees_IsChild(tree, node)))&#10;" number="179" object="" resource="ADTSL" toString="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1011:45&#10;(forall tree:set of (STrees_Node) &amp;&#10;  (forall node in set tree &amp;&#10;    pre_STrees_IsChild(tree, node)))&#10;"/>
<po column="34" line="1014" message="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1014:34&#10;(forall tree:set of (STrees_Node) &amp;&#10;  ((forall node in set tree &amp; ((not STrees_IsRoot(tree, node)) &lt;=&gt; (STrees_IsChild(tree, node) and STrees_IsUnique(tree, node)))) =&gt;&#10;    (forall node in set tree &amp;&#10;      pre_STrees_IsRoot(tree, node))))&#10;" number="180" object="" resource="ADTSL" toString="STrees_Tree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1014:34&#10;(forall tree:set of (STrees_Node) &amp;&#10;  ((forall node in set tree &amp; ((not STrees_IsRoot(tree, node)) &lt;=&gt; (STrees_IsChild(tree, node) and STrees_IsUnique(tree, node)))) =&gt;&#10;    (forall node in set tree &amp;&#10;      pre_STrees_IsRoot(tree, node))))&#10;"/>
<po column="44" line="1025" message="STrees_Info, r: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1025:44&#10;(forall mk_STrees_Info(t, c):STrees_Info &amp;&#10;  (((c = nil) &lt;=&gt; (t = {})) =&gt;&#10;    ((c in set t) =&gt;&#10;      pre_STrees_Root(t))))&#10;" number="181" object="" resource="ADTSL" toString="STrees_Info, r: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1025:44&#10;(forall mk_STrees_Info(t, c):STrees_Info &amp;&#10;  (((c = nil) &lt;=&gt; (t = {})) =&gt;&#10;    ((c in set t) =&gt;&#10;      pre_STrees_Root(t))))&#10;"/>
<po column="1" line="1045" message="STrees_MkTree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1045:1&#10;(forall tree:set of (STrees_Node) &amp; inv_STrees_Tree(tree) =&gt;&#10;  inv_STrees_Tree(tree) and (is_(tree, set of (STrees_Node))))&#10;" number="182" object="" resource="ADTSL" toString="STrees_MkTree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1045:1&#10;(forall tree:set of (STrees_Node) &amp; inv_STrees_Tree(tree) =&gt;&#10;  inv_STrees_Tree(tree) and (is_(tree, set of (STrees_Node))))&#10;"/>
<po column="21" line="1052" message="STrees_MkInfo: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1052:21&#10;(forall tree:STrees_Tree, current:STrees_Node &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;" number="183" object="" resource="ADTSL" toString="STrees_MkInfo: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1052:21&#10;(forall tree:STrees_Tree, current:STrees_Node &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;"/>
<po column="6" line="1051" message="STrees_MkInfo: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1051:6&#10;(forall tree:STrees_Tree, current:STrees_Node &amp; inv_STrees_Info(mk_STrees_Info(tree, current)) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;" number="184" object="" resource="ADTSL" toString="STrees_MkInfo: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1051:6&#10;(forall tree:STrees_Tree, current:STrees_Node &amp; inv_STrees_Info(mk_STrees_Info(tree, current)) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;"/>
<po column="33" line="1059" message="STrees_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1059:33&#10;inv_STrees_Tree({}) and (&#10;and is_({}, set of (STrees_Node)))&#10;" number="185" object="" resource="ADTSL" toString="STrees_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1059:33&#10;inv_STrees_Tree({}) and (&#10;and is_({}, set of (STrees_Node)))&#10;"/>
<po column="18" line="1059" message="STrees_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1059:18&#10;inv_STrees_Info(mk_STrees_Info({}, nil)) and (inv_STrees_Tree({}) and (&#10;and is_({}, set of (STrees_Node))))&#10;" number="186" object="" resource="ADTSL" toString="STrees_Init: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1059:18&#10;inv_STrees_Info(mk_STrees_Info({}, nil)) and (inv_STrees_Tree({}) and (&#10;and is_({}, set of (STrees_Node))))&#10;"/>
<po column="10" line="1067" message="STrees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1067:10&#10;(forall tree:set of (STrees_Node), mk_STrees_Node(dr, pr):STrees_Node &amp; (mk_STrees_Node(dr, pr) in set tree) =&gt;&#10;  pre_STrees_IsChild(tree, mk_STrees_Node(dr, pr)))&#10;" number="187" object="" resource="ADTSL" toString="STrees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1067:10&#10;(forall tree:set of (STrees_Node), mk_STrees_Node(dr, pr):STrees_Node &amp; (mk_STrees_Node(dr, pr) in set tree) =&gt;&#10;  pre_STrees_IsChild(tree, mk_STrees_Node(dr, pr)))&#10;"/>
<po column="33" line="1076" message="STrees_IsParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1076:33&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; (node in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, node, child)))&#10;" number="188" object="" resource="ADTSL" toString="STrees_IsParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1076:33&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; (node in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, node, child)))&#10;"/>
<po column="35" line="1081" message="STrees_IsChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1081:35&#10;(forall tree:set of (STrees_Node), node:STrees_Node &amp; (node in set tree) =&gt;&#10;  (forall parent in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, parent, node)))&#10;" number="189" object="" resource="ADTSL" toString="STrees_IsChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1081:35&#10;(forall tree:set of (STrees_Node), node:STrees_Node &amp; (node in set tree) =&gt;&#10;  (forall parent in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, parent, node)))&#10;"/>
<po column="40" line="1082" message="STrees_IsChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1082:40&#10;(forall tree:set of (STrees_Node), node:STrees_Node &amp; (node in set tree) =&gt;&#10;  ((exists [parent in set tree] &amp; STrees_IsParentOf(tree, parent, node)) =&gt;&#10;    (forall parent in set tree &amp;&#10;      pre_STrees_IsParentOf(tree, parent, node))))&#10;" number="190" object="" resource="ADTSL" toString="STrees_IsChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1082:40&#10;(forall tree:set of (STrees_Node), node:STrees_Node &amp; (node in set tree) =&gt;&#10;  ((exists [parent in set tree] &amp; STrees_IsParentOf(tree, parent, node)) =&gt;&#10;    (forall parent in set tree &amp;&#10;      pre_STrees_IsParentOf(tree, parent, node))))&#10;"/>
<po column="6" line="1096" message="STrees_IsParentOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1096:6&#10;(forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node &amp; ((node1 in set tree) and (node2 in set tree)) =&gt;&#10;  pre_STrees_IsRightChildOf(tree, node2, node1))&#10;" number="191" object="" resource="ADTSL" toString="STrees_IsParentOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1096:6&#10;(forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node &amp; ((node1 in set tree) and (node2 in set tree)) =&gt;&#10;  pre_STrees_IsRightChildOf(tree, node2, node1))&#10;"/>
<po column="14" line="1097" message="STrees_IsParentOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1097:14&#10;(forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node &amp; ((node1 in set tree) and (node2 in set tree)) =&gt;&#10;  (not STrees_IsRightChildOf(tree, node2, node1) =&gt;&#10;    pre_STrees_IsLeftChildOf(tree, node2, node1)))&#10;" number="192" object="" resource="ADTSL" toString="STrees_IsParentOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1097:14&#10;(forall tree:set of (STrees_Node), node1:STrees_Node, node2:STrees_Node &amp; ((node1 in set tree) and (node2 in set tree)) =&gt;&#10;  (not STrees_IsRightChildOf(tree, node2, node1) =&gt;&#10;    pre_STrees_IsLeftChildOf(tree, node2, node1)))&#10;"/>
<po column="35" line="1128" message="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1128:35&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    pre_STrees_HasLeftChild(tree, current)))&#10;" number="193" object="" resource="ADTSL" toString="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1128:35&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    pre_STrees_HasLeftChild(tree, current)))&#10;"/>
<po column="61" line="1128" message="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1128:61&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    is_(current, STrees_Node)))&#10;" number="194" object="" resource="ADTSL" toString="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1128:61&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    is_(current, STrees_Node)))&#10;"/>
<po column="36" line="1129" message="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1129:36&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) =&gt;&#10;      pre_STrees_HasRightChild(tree, current))))&#10;" number="195" object="" resource="ADTSL" toString="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1129:36&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) =&gt;&#10;      pre_STrees_HasRightChild(tree, current))))&#10;"/>
<po column="63" line="1129" message="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1129:63&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) =&gt;&#10;      is_(current, STrees_Node))))&#10;" number="196" object="" resource="ADTSL" toString="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1129:63&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) =&gt;&#10;    (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) =&gt;&#10;      is_(current, STrees_Node))))&#10;"/>
<po column="1" line="1118" message="STrees_Insert: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1118:1&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  pre_STrees_Insert(mk_STrees_Info(tree, current), data, direction) =&gt; post_STrees_Insert(mk_STrees_Info(tree, current), data, direction, (cases mk_(current, direction) :&#10;  case mk_(nil, &lt;ToRoot&gt;) -&gt; STrees_InsertRoot(data),&#10;  case mk_(-, &lt;ToLeft&gt;) -&gt; STrees_InsertLeft(tree, current, data),&#10;  case mk_(-, &lt;ToRight&gt;) -&gt; STrees_InsertRight(tree, current, data)&#10;  end)))&#10;" number="197" object="" resource="ADTSL" toString="STrees_Insert: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1118:1&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp;&#10;  pre_STrees_Insert(mk_STrees_Info(tree, current), data, direction) =&gt; post_STrees_Insert(mk_STrees_Info(tree, current), data, direction, (cases mk_(current, direction) :&#10;  case mk_(nil, &lt;ToRoot&gt;) -&gt; STrees_InsertRoot(data),&#10;  case mk_(-, &lt;ToLeft&gt;) -&gt; STrees_InsertLeft(tree, current, data),&#10;  case mk_(-, &lt;ToRight&gt;) -&gt; STrees_InsertRight(tree, current, data)&#10;  end)))&#10;"/>
<po column="34" line="1122" message="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1122:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt; &#10;      pre_STrees_InsertLeft(tree, current, data))))&#10;" number="198" object="" resource="ADTSL" toString="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1122:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt; &#10;      pre_STrees_InsertLeft(tree, current, data))))&#10;"/>
<po column="58" line="1122" message="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1122:58&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt; &#10;      is_(current, STrees_Node))))&#10;" number="199" object="" resource="ADTSL" toString="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1122:58&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt; &#10;      is_(current, STrees_Node))))&#10;"/>
<po column="34" line="1124" message="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1124:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (not mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt;&#10;      (mk_(-, &lt;ToRight&gt;) = mk_(current, direction) =&gt; &#10;        pre_STrees_InsertRight(tree, current, data)))))&#10;" number="200" object="" resource="ADTSL" toString="STrees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1124:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (not mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt;&#10;      (mk_(-, &lt;ToRight&gt;) = mk_(current, direction) =&gt; &#10;        pre_STrees_InsertRight(tree, current, data)))))&#10;"/>
<po column="59" line="1124" message="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1124:59&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (not mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt;&#10;      (mk_(-, &lt;ToRight&gt;) = mk_(current, direction) =&gt; &#10;        is_(current, STrees_Node)))))&#10;" number="201" object="" resource="ADTSL" toString="STrees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1124:59&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  (not mk_(nil, &lt;ToRoot&gt;) = mk_(current, direction) =&gt;&#10;    (not mk_(-, &lt;ToLeft&gt;) = mk_(current, direction) =&gt;&#10;      (mk_(-, &lt;ToRight&gt;) = mk_(current, direction) =&gt; &#10;        is_(current, STrees_Node)))))&#10;"/>
<po column="6" line="1120" message="STrees_Insert: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1120:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  mk_(current, direction) = mk_(nil, &lt;ToRoot&gt;) or mk_(current, direction) = mk_(-, &lt;ToLeft&gt;) or mk_(current, direction) = mk_(-, &lt;ToRight&gt;))&#10;" number="202" object="" resource="ADTSL" toString="STrees_Insert: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1120:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data, direction:STrees_Direction &amp; (((direction = &lt;ToRoot&gt;) =&gt; (tree = {})) and (((direction = &lt;ToLeft&gt;) =&gt; (not STrees_HasLeftChild(tree, current))) and ((direction = &lt;ToRight&gt;) =&gt; (not STrees_HasRightChild(tree, current))))) =&gt;&#10;  mk_(current, direction) = mk_(nil, &lt;ToRoot&gt;) or mk_(current, direction) = mk_(-, &lt;ToLeft&gt;) or mk_(current, direction) = mk_(-, &lt;ToRight&gt;))&#10;"/>
<po column="26" line="1139" message="STrees_InsertRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1139:26&#10;(forall data:STrees_Data &amp;&#10;  (let root:STrees_Node = mk_STrees_Node(data, 1) in&#10;    inv_STrees_Tree({root}) and (&#10;    and is_({root}, set of (STrees_Node)))))&#10;" number="203" object="" resource="ADTSL" toString="STrees_InsertRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1139:26&#10;(forall data:STrees_Data &amp;&#10;  (let root:STrees_Node = mk_STrees_Node(data, 1) in&#10;    inv_STrees_Tree({root}) and (&#10;    and is_({root}, set of (STrees_Node)))))&#10;"/>
<po column="11" line="1139" message="STrees_InsertRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1139:11&#10;(forall data:STrees_Data &amp;&#10;  (let root:STrees_Node = mk_STrees_Node(data, 1) in&#10;    inv_STrees_Info(mk_STrees_Info({root}, root)) and (inv_STrees_Tree({root}) and (&#10;    and is_({root}, set of (STrees_Node))))))&#10;" number="204" object="" resource="ADTSL" toString="STrees_InsertRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1139:11&#10;(forall data:STrees_Data &amp;&#10;  (let root:STrees_Node = mk_STrees_Node(data, 1) in&#10;    inv_STrees_Info(mk_STrees_Info({root}, root)) and (inv_STrees_Tree({root}) and (&#10;    and is_({root}, set of (STrees_Node))))))&#10;"/>
<po column="9" line="1146" message="STrees_InsertLeft: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1146:9&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp;&#10;  pre_STrees_HasLeftChild(tree, current))&#10;" number="205" object="" resource="ADTSL" toString="STrees_InsertLeft: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1146:9&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp;&#10;  pre_STrees_HasLeftChild(tree, current))&#10;"/>
<po column="31" line="1145" message="STrees_InsertLeft: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1145:31&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasLeftChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, (2 * position)) in&#10;      inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node))))))&#10;" number="206" object="" resource="ADTSL" toString="STrees_InsertLeft: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1145:31&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasLeftChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, (2 * position)) in&#10;      inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node))))))&#10;"/>
<po column="11" line="1145" message="STrees_InsertLeft: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1145:11&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasLeftChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, (2 * position)) in&#10;      inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and (inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node)))))))&#10;" number="207" object="" resource="ADTSL" toString="STrees_InsertLeft: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1145:11&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasLeftChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, (2 * position)) in&#10;      inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and (inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node)))))))&#10;"/>
<po column="9" line="1153" message="STrees_InsertRight: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1153:9&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp;&#10;  pre_STrees_HasRightChild(tree, current))&#10;" number="208" object="" resource="ADTSL" toString="STrees_InsertRight: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1153:9&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp;&#10;  pre_STrees_HasRightChild(tree, current))&#10;"/>
<po column="31" line="1152" message="STrees_InsertRight: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1152:31&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasRightChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, ((2 * position) + 1)) in&#10;      inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node))))))&#10;" number="209" object="" resource="ADTSL" toString="STrees_InsertRight: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1152:31&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasRightChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, ((2 * position) + 1)) in&#10;      inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node))))))&#10;"/>
<po column="11" line="1152" message="STrees_InsertRight: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1152:11&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasRightChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, ((2 * position) + 1)) in&#10;      inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and (inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node)))))))&#10;" number="210" object="" resource="ADTSL" toString="STrees_InsertRight: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1152:11&#10;(forall tree:STrees_Tree, current:STrees_Node, data:STrees_Data &amp; (not STrees_HasRightChild(tree, current)) =&gt;&#10;  (let mk_STrees_Node(-, position):STrees_Node = current in&#10;    (let new:STrees_Node = mk_STrees_Node(data, ((2 * position) + 1)) in&#10;      inv_STrees_Info(mk_STrees_Info((tree union {new}), new)) and (inv_STrees_Tree((tree union {new})) and (is_((tree union {new}), set of (STrees_Node)))))))&#10;"/>
<po column="46" line="1160" message="STrees_Traverse, newtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1160:46&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (forall mk_STrees_Node(data, position) in set tree &amp;&#10;          pre_(traversal, data))))))&#10;" number="211" object="" resource="ADTSL" toString="STrees_Traverse, newtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1160:46&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (forall mk_STrees_Node(data, position) in set tree &amp;&#10;          pre_(traversal, data))))))&#10;"/>
<po column="41" line="1163" message="STrees_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1163:41&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          pre_(traversal, data))))))&#10;" number="212" object="" resource="ADTSL" toString="STrees_Traverse: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1163:41&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          pre_(traversal, data))))))&#10;"/>
<po column="36" line="1162" message="STrees_Traverse: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1162:36&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          inv_STrees_Tree(newtree) and (is_(newtree, set of (STrees_Node))))))))&#10;" number="213" object="" resource="ADTSL" toString="STrees_Traverse: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1162:36&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          inv_STrees_Tree(newtree) and (is_(newtree, set of (STrees_Node))))))))&#10;"/>
<po column="21" line="1162" message="STrees_Traverse: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1162:21&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          inv_STrees_Info(mk_STrees_Info(newtree, mk_STrees_Node(traversal(data), position))) and (inv_STrees_Tree(newtree) and (is_(newtree, set of (STrees_Node)))))))))&#10;" number="214" object="" resource="ADTSL" toString="STrees_Traverse: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1162:21&#10;(forall treeinfo:STrees_Info, traversal:(STrees_Data -&gt; STrees_Data) &amp;&#10;  (let mk_STrees_Info(tree, current):STrees_Info = treeinfo in&#10;    ((current &lt;&gt; nil) =&gt;&#10;      (let mk_STrees_Node(data, position):[STrees_Node] = current in&#10;        (let newtree:set of (STrees_Node) = {mk_STrees_Node(traversal(data), position) | [mk_STrees_Node(data, position) in set tree]} in&#10;          inv_STrees_Info(mk_STrees_Info(newtree, mk_STrees_Node(traversal(data), position))) and (inv_STrees_Tree(newtree) and (is_(newtree, set of (STrees_Node)))))))))&#10;"/>
<po column="28" line="1177" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1177:28&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;" number="215" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1177:28&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;"/>
<po column="45" line="1173" message="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1173:45&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (&lt;ToRoot&gt; = direction =&gt; &#10;    pre_STrees_Root(tree)))&#10;" number="216" object="" resource="ADTSL" toString="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1173:45&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (&lt;ToRoot&gt; = direction =&gt; &#10;    pre_STrees_Root(tree)))&#10;"/>
<po column="24" line="1173" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1173:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (&lt;ToRoot&gt; = direction =&gt; &#10;    inv_STrees_Info(mk_STrees_Info(tree, STrees_Root(tree)))))&#10;" number="217" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1173:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (&lt;ToRoot&gt; = direction =&gt; &#10;    inv_STrees_Info(mk_STrees_Info(tree, STrees_Root(tree)))))&#10;"/>
<po column="45" line="1174" message="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:45&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      pre_STrees_LeftChild(tree, current))))&#10;" number="218" object="" resource="ADTSL" toString="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:45&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      pre_STrees_LeftChild(tree, current))))&#10;"/>
<po column="68" line="1174" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:68&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      is_(current, STrees_Node))))&#10;" number="219" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:68&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      is_(current, STrees_Node))))&#10;"/>
<po column="24" line="1174" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      inv_STrees_Info(mk_STrees_Info(tree, STrees_LeftChild(tree, current))))))&#10;" number="220" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1174:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      inv_STrees_Info(mk_STrees_Info(tree, STrees_LeftChild(tree, current))))))&#10;"/>
<po column="46" line="1175" message="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:46&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        pre_STrees_RightChild(tree, current)))))&#10;" number="221" object="" resource="ADTSL" toString="STrees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:46&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        pre_STrees_RightChild(tree, current)))))&#10;"/>
<po column="70" line="1175" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:70&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        is_(current, STrees_Node)))))&#10;" number="222" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:70&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        is_(current, STrees_Node)))))&#10;"/>
<po column="25" line="1175" message="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        inv_STrees_Info(mk_STrees_Info(tree, STrees_RightChild(tree, current)))))))&#10;" number="223" object="" resource="ADTSL" toString="STrees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1175:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        inv_STrees_Info(mk_STrees_Info(tree, STrees_RightChild(tree, current)))))))&#10;"/>
<po column="6" line="1172" message="STrees_MoveInDir: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1172:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  direction = &lt;ToRoot&gt; or direction = &lt;ToLeft&gt; or direction = &lt;ToRight&gt;)&#10;" number="224" object="" resource="ADTSL" toString="STrees_MoveInDir: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1172:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp; STrees_ExistsDirection(mk_STrees_Info(tree, current), direction) =&gt;&#10;  direction = &lt;ToRoot&gt; or direction = &lt;ToLeft&gt; or direction = &lt;ToRight&gt;)&#10;"/>
<po column="23" line="1186" message="STrees_MoveToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1186:23&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;" number="225" object="" resource="ADTSL" toString="STrees_MoveToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1186:23&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;"/>
<po column="27" line="1185" message="STrees_MoveToNode: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1185:27&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  pre_STrees_GetNode(tree, position))&#10;" number="226" object="" resource="ADTSL" toString="STrees_MoveToNode: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1185:27&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  pre_STrees_GetNode(tree, position))&#10;"/>
<po column="6" line="1185" message="STrees_MoveToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1185:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, STrees_GetNode(tree, position))))&#10;" number="227" object="" resource="ADTSL" toString="STrees_MoveToNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1185:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, STrees_GetNode(tree, position))))&#10;"/>
<po column="9" line="1195" message="STrees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1195:9&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  pre_STrees_IsRoot(tree, current))&#10;" number="228" object="" resource="ADTSL" toString="STrees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1195:9&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  pre_STrees_IsRoot(tree, current))&#10;"/>
<po column="29" line="1195" message="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1195:29&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  is_(current, STrees_Node))&#10;" number="229" object="" resource="ADTSL" toString="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1195:29&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  is_(current, STrees_Node))&#10;"/>
<po column="27" line="1194" message="STrees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:27&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  pre_STrees_Parent(tree, current))&#10;" number="230" object="" resource="ADTSL" toString="STrees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:27&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  pre_STrees_Parent(tree, current))&#10;"/>
<po column="47" line="1194" message="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  is_(current, STrees_Node))&#10;" number="231" object="" resource="ADTSL" toString="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  is_(current, STrees_Node))&#10;"/>
<po column="6" line="1194" message="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, STrees_Parent(tree, current))))&#10;" number="232" object="" resource="ADTSL" toString="STrees_MoveToParent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1194:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (not STrees_IsRoot(tree, current)) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, STrees_Parent(tree, current))))&#10;"/>
<po column="8" line="1204" message="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:8&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToAnscestor(STrees_MoveToParent(treeinfo), (pathlength - 1))))&#10;" number="233" object="" resource="ADTSL" toString="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:8&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToAnscestor(STrees_MoveToParent(treeinfo), (pathlength - 1))))&#10;"/>
<po column="73" line="1204" message="STrees_MoveToAnscestor: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:73&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    (pathlength - 1) &gt; 0))&#10;" number="234" object="" resource="ADTSL" toString="STrees_MoveToAnscestor: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:73&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    (pathlength - 1) &gt; 0))&#10;"/>
<po column="31" line="1204" message="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:31&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToParent(treeinfo)))&#10;" number="235" object="" resource="ADTSL" toString="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1204:31&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  ((pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToParent(treeinfo)))&#10;"/>
<po column="8" line="1205" message="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1205:8&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  (not (pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToParent(treeinfo)))&#10;" number="236" object="" resource="ADTSL" toString="STrees_MoveToAnscestor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1205:8&#10;(forall treeinfo:STrees_Info, pathlength:nat1 &amp; pre_STrees_MoveToParent(treeinfo) =&gt;&#10;  (not (pathlength &gt; 1) =&gt;&#10;    pre_STrees_MoveToParent(treeinfo)))&#10;"/>
<po column="3" line="1215" message="STrees_Root: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1215:3&#10;(forall tree:STrees_Tree &amp; (tree &lt;&gt; {}) =&gt;&#10;  exists1 root in set tree &amp; STrees_IsRoot(tree, root))&#10;" number="237" object="" resource="ADTSL" toString="STrees_Root: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1215:3&#10;(forall tree:STrees_Tree &amp; (tree &lt;&gt; {}) =&gt;&#10;  exists1 root in set tree &amp; STrees_IsRoot(tree, root))&#10;"/>
<po column="27" line="1215" message="STrees_Root: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1215:27&#10;(forall tree:STrees_Tree &amp; (tree &lt;&gt; {}) =&gt;&#10;  (forall root in set tree &amp;&#10;    pre_STrees_IsRoot(tree, root)))&#10;" number="238" object="" resource="ADTSL" toString="STrees_Root: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1215:27&#10;(forall tree:STrees_Tree &amp; (tree &lt;&gt; {}) =&gt;&#10;  (forall root in set tree &amp;&#10;    pre_STrees_IsRoot(tree, root)))&#10;"/>
<po column="30" line="1222" message="STrees_Parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1222:30&#10;(forall tree:STrees_Tree, node:STrees_Node &amp;&#10;  ((node in set tree) =&gt;&#10;    pre_STrees_IsRoot(tree, node)))&#10;" number="239" object="" resource="ADTSL" toString="STrees_Parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1222:30&#10;(forall tree:STrees_Tree, node:STrees_Node &amp;&#10;  ((node in set tree) =&gt;&#10;    pre_STrees_IsRoot(tree, node)))&#10;"/>
<po column="3" line="1220" message="STrees_Parent: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1220:3&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and (not STrees_IsRoot(tree, node))) =&gt;&#10;  exists1 parent in set tree &amp; STrees_IsParentOf(tree, parent, node))&#10;" number="240" object="" resource="ADTSL" toString="STrees_Parent: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1220:3&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and (not STrees_IsRoot(tree, node))) =&gt;&#10;  exists1 parent in set tree &amp; STrees_IsParentOf(tree, parent, node))&#10;"/>
<po column="10" line="1221" message="STrees_Parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1221:10&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and (not STrees_IsRoot(tree, node))) =&gt;&#10;  (forall parent in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, parent, node)))&#10;" number="241" object="" resource="ADTSL" toString="STrees_Parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1221:10&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and (not STrees_IsRoot(tree, node))) =&gt;&#10;  (forall parent in set tree &amp;&#10;    pre_STrees_IsParentOf(tree, parent, node)))&#10;"/>
<po column="28" line="1228" message="STrees_LeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1228:28&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp;&#10;  ((parent in set tree) =&gt;&#10;    pre_STrees_HasLeftChild(tree, parent)))&#10;" number="242" object="" resource="ADTSL" toString="STrees_LeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1228:28&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp;&#10;  ((parent in set tree) =&gt;&#10;    pre_STrees_HasLeftChild(tree, parent)))&#10;"/>
<po column="3" line="1226" message="STrees_LeftChild: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1226:3&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasLeftChild(tree, parent)) =&gt;&#10;  exists1 leftchild in set tree &amp; STrees_IsLeftChildOf(tree, leftchild, parent))&#10;" number="243" object="" resource="ADTSL" toString="STrees_LeftChild: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1226:3&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasLeftChild(tree, parent)) =&gt;&#10;  exists1 leftchild in set tree &amp; STrees_IsLeftChildOf(tree, leftchild, parent))&#10;"/>
<po column="8" line="1227" message="STrees_LeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1227:8&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasLeftChild(tree, parent)) =&gt;&#10;  (forall leftchild in set tree &amp;&#10;    pre_STrees_IsLeftChildOf(tree, leftchild, parent)))&#10;" number="244" object="" resource="ADTSL" toString="STrees_LeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1227:8&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasLeftChild(tree, parent)) =&gt;&#10;  (forall leftchild in set tree &amp;&#10;    pre_STrees_IsLeftChildOf(tree, leftchild, parent)))&#10;"/>
<po column="28" line="1234" message="STrees_RightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1234:28&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp;&#10;  ((parent in set tree) =&gt;&#10;    pre_STrees_HasRightChild(tree, parent)))&#10;" number="245" object="" resource="ADTSL" toString="STrees_RightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1234:28&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp;&#10;  ((parent in set tree) =&gt;&#10;    pre_STrees_HasRightChild(tree, parent)))&#10;"/>
<po column="3" line="1232" message="STrees_RightChild: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1232:3&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasRightChild(tree, parent)) =&gt;&#10;  exists1 rightchild in set tree &amp; STrees_IsRightChildOf(tree, rightchild, parent))&#10;" number="246" object="" resource="ADTSL" toString="STrees_RightChild: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1232:3&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasRightChild(tree, parent)) =&gt;&#10;  exists1 rightchild in set tree &amp; STrees_IsRightChildOf(tree, rightchild, parent))&#10;"/>
<po column="8" line="1233" message="STrees_RightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1233:8&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasRightChild(tree, parent)) =&gt;&#10;  (forall rightchild in set tree &amp;&#10;    pre_STrees_IsRightChildOf(tree, rightchild, parent)))&#10;" number="247" object="" resource="ADTSL" toString="STrees_RightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1233:8&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; ((parent in set tree) and STrees_HasRightChild(tree, parent)) =&gt;&#10;  (forall rightchild in set tree &amp;&#10;    pre_STrees_IsRightChildOf(tree, rightchild, parent)))&#10;"/>
<po column="3" line="1238" message="STrees_GetNode: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1238:3&#10;(forall tree:STrees_Tree, position:nat1 &amp; (exists [node in set tree] &amp; ((node.position) = position)) =&gt;&#10;  exists1 node in set tree &amp; ((node.position) = position))&#10;" number="248" object="" resource="ADTSL" toString="STrees_GetNode: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1238:3&#10;(forall tree:STrees_Tree, position:nat1 &amp; (exists [node in set tree] &amp; ((node.position) = position)) =&gt;&#10;  exists1 node in set tree &amp; ((node.position) = position))&#10;"/>
<po column="23" line="1249" message="STrees_GetData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1249:23&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;" number="249" object="" resource="ADTSL" toString="STrees_GetData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1249:23&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp;&#10;  inv_STrees_Info(mk_STrees_Info(tree, current)))&#10;"/>
<po column="36" line="1247" message="STrees_GetData, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1247:36&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  pre_STrees_GetNode(tree, position))&#10;" number="250" object="" resource="ADTSL" toString="STrees_GetData, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1247:36&#10;(forall mk_STrees_Info(tree, current):STrees_Info, position:nat1 &amp; STrees_ExistsNode(mk_STrees_Info(tree, current), position) =&gt;&#10;  pre_STrees_GetNode(tree, position))&#10;"/>
<po column="43" line="1260" message="STrees_StoreCurrentData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1260:43&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data &amp; (current &lt;&gt; nil) =&gt;&#10;  (let mk_STrees_Node(-, position):[STrees_Node] = current in&#10;    (let newcurrent:STrees_Node = mk_STrees_Node(data, position) in&#10;      inv_STrees_Tree(((tree \ {current}) union {newcurrent})) and (is_(((tree \ {current}) union {newcurrent}), set of (STrees_Node))))))&#10;" number="251" object="" resource="ADTSL" toString="STrees_StoreCurrentData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1260:43&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data &amp; (current &lt;&gt; nil) =&gt;&#10;  (let mk_STrees_Node(-, position):[STrees_Node] = current in&#10;    (let newcurrent:STrees_Node = mk_STrees_Node(data, position) in&#10;      inv_STrees_Tree(((tree \ {current}) union {newcurrent})) and (is_(((tree \ {current}) union {newcurrent}), set of (STrees_Node))))))&#10;"/>
<po column="11" line="1260" message="STrees_StoreCurrentData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1260:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data &amp; (current &lt;&gt; nil) =&gt;&#10;  (let mk_STrees_Node(-, position):[STrees_Node] = current in&#10;    (let newcurrent:STrees_Node = mk_STrees_Node(data, position) in&#10;      inv_STrees_Info(mk_STrees_Info(((tree \ {current}) union {newcurrent}), newcurrent)) and (inv_STrees_Tree(((tree \ {current}) union {newcurrent})) and (is_(((tree \ {current}) union {newcurrent}), set of (STrees_Node)))))))&#10;" number="252" object="" resource="ADTSL" toString="STrees_StoreCurrentData: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1260:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info, data:STrees_Data &amp; (current &lt;&gt; nil) =&gt;&#10;  (let mk_STrees_Node(-, position):[STrees_Node] = current in&#10;    (let newcurrent:STrees_Node = mk_STrees_Node(data, position) in&#10;      inv_STrees_Info(mk_STrees_Info(((tree \ {current}) union {newcurrent}), newcurrent)) and (inv_STrees_Tree(((tree \ {current}) union {newcurrent})) and (is_(((tree \ {current}) union {newcurrent}), set of (STrees_Node)))))))&#10;"/>
<po column="1" line="1282" message="STrees_GetCurrentNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1282:1&#10;(forall mk_STrees_Info(-, current):STrees_Info &amp;&#10;  is_(current, STrees_Node))&#10;" number="253" object="" resource="ADTSL" toString="STrees_GetCurrentNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1282:1&#10;(forall mk_STrees_Info(-, current):STrees_Info &amp;&#10;  is_(current, STrees_Node))&#10;"/>
<po column="6" line="1287" message="STrees_SetCurrentNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1287:6&#10;(forall mk_STrees_Info(tree, -):STrees_Info, newcurrent:STrees_Node &amp; (newcurrent in set tree) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, newcurrent)))&#10;" number="254" object="" resource="ADTSL" toString="STrees_SetCurrentNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1287:6&#10;(forall mk_STrees_Info(tree, -):STrees_Info, newcurrent:STrees_Node &amp; (newcurrent in set tree) =&gt;&#10;  inv_STrees_Info(mk_STrees_Info(tree, newcurrent)))&#10;"/>
<po column="13" line="1297" message="STrees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1297:13&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; (parent in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsLeftChildOf(tree, child, parent)))&#10;" number="255" object="" resource="ADTSL" toString="STrees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1297:13&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; (parent in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsLeftChildOf(tree, child, parent)))&#10;"/>
<po column="13" line="1304" message="STrees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1304:13&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; (parent in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsRightChildOf(tree, child, parent)))&#10;" number="256" object="" resource="ADTSL" toString="STrees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1304:13&#10;(forall tree:STrees_Tree, parent:STrees_Node &amp; (parent in set tree) =&gt;&#10;  (forall child in set tree &amp;&#10;    pre_STrees_IsRightChildOf(tree, child, parent)))&#10;"/>
<po column="26" line="1321" message="STrees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1321:26&#10;(forall tree:STrees_Tree, node:STrees_Node &amp;&#10;  ((node in set tree) =&gt;&#10;    pre_STrees_HasLeftChild(tree, node)))&#10;" number="257" object="" resource="ADTSL" toString="STrees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1321:26&#10;(forall tree:STrees_Tree, node:STrees_Node &amp;&#10;  ((node in set tree) =&gt;&#10;    pre_STrees_HasLeftChild(tree, node)))&#10;"/>
<po column="22" line="1313" message="STrees_InOrderPredecessor, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1313:22&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  pre_STrees_LeftChild(tree, node))&#10;" number="258" object="" resource="ADTSL" toString="STrees_InOrderPredecessor, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1313:22&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  pre_STrees_LeftChild(tree, node))&#10;"/>
<po column="17" line="1314" message="STrees_InOrderPredecessor, left: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1314:17&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  (let leftchild:STrees_Node = STrees_LeftChild(tree, node) in&#10;    pre_STrees_Subtree(tree, leftchild)))&#10;" number="259" object="" resource="ADTSL" toString="STrees_InOrderPredecessor, left: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1314:17&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  (let leftchild:STrees_Node = STrees_LeftChild(tree, node) in&#10;    pre_STrees_Subtree(tree, leftchild)))&#10;"/>
<po column="11" line="1319" message="STrees_InOrderPredecessor: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1319:11&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  (let leftchild:STrees_Node = STrees_LeftChild(tree, node) in&#10;    (let left:STrees_Tree = STrees_Subtree(tree, leftchild) in&#10;      (let rightpath:set of (STrees_Node) = {n | [n in set left] &amp; (exists [p in set {0, ... ,(card left)}] &amp; ((n.position) = ((((leftchild.position) + 1) * (2 ** p)) - 1)))} in&#10;        exists1 pred in set rightpath &amp; (forall n in set rightpath &amp; ((n.position) &lt;= (pred.position)))))))&#10;" number="260" object="" resource="ADTSL" toString="STrees_InOrderPredecessor: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1319:11&#10;(forall tree:STrees_Tree, node:STrees_Node &amp; ((node in set tree) and STrees_HasLeftChild(tree, node)) =&gt;&#10;  (let leftchild:STrees_Node = STrees_LeftChild(tree, node) in&#10;    (let left:STrees_Tree = STrees_Subtree(tree, leftchild) in&#10;      (let rightpath:set of (STrees_Node) = {n | [n in set left] &amp; (exists [p in set {0, ... ,(card left)}] &amp; ((n.position) = ((((leftchild.position) + 1) * (2 ** p)) - 1)))} in&#10;        exists1 pred in set rightpath &amp; (forall n in set rightpath &amp; ((n.position) &lt;= (pred.position)))))))&#10;"/>
<po column="1" line="1327" message="STrees_Delete: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1327:1&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  pre_STrees_Delete(mk_STrees_Info(tree, current)) =&gt; post_STrees_Delete(mk_STrees_Info(tree, current), let old:STrees_Tree = STrees_Subtree(tree, current) in (if (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))&#10;  then let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  elseif STrees_HasLeftChild(tree, current)&#10;  then let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  elseif STrees_HasRightChild(tree, current)&#10;  then let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  else mk_STrees_Info((tree \ {current}), STrees_Parent(tree, current)))))&#10;" number="261" object="" resource="ADTSL" toString="STrees_Delete: post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1327:1&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp;&#10;  pre_STrees_Delete(mk_STrees_Info(tree, current)) =&gt; post_STrees_Delete(mk_STrees_Info(tree, current), let old:STrees_Tree = STrees_Subtree(tree, current) in (if (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current))&#10;  then let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  elseif STrees_HasLeftChild(tree, current)&#10;  then let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  elseif STrees_HasRightChild(tree, current)&#10;  then let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in mk_STrees_Info(((tree \ old) union new), STrees_Root(new))&#10;  else mk_STrees_Info((tree \ {current}), STrees_Parent(tree, current)))))&#10;"/>
<po column="13" line="1329" message="STrees_Delete, old: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1329:13&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  pre_STrees_Subtree(tree, current))&#10;" number="262" object="" resource="ADTSL" toString="STrees_Delete, old: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1329:13&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  pre_STrees_Subtree(tree, current))&#10;"/>
<po column="34" line="1329" message="STrees_Delete, old: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1329:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  is_(current, STrees_Node))&#10;" number="263" object="" resource="ADTSL" toString="STrees_Delete, old: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1329:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  is_(current, STrees_Node))&#10;"/>
<po column="7" line="1331" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1331:7&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    pre_STrees_HasRightChild(tree, current)))&#10;" number="264" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1331:7&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    pre_STrees_HasRightChild(tree, current)))&#10;"/>
<po column="34" line="1331" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1331:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    is_(current, STrees_Node)))&#10;" number="265" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1331:34&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    is_(current, STrees_Node)))&#10;"/>
<po column="7" line="1332" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1332:7&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (STrees_HasRightChild(tree, current) =&gt;&#10;      pre_STrees_HasLeftChild(tree, current))))&#10;" number="266" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1332:7&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (STrees_HasRightChild(tree, current) =&gt;&#10;      pre_STrees_HasLeftChild(tree, current))))&#10;"/>
<po column="33" line="1332" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1332:33&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (STrees_HasRightChild(tree, current) =&gt;&#10;      is_(current, STrees_Node))))&#10;" number="267" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1332:33&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (STrees_HasRightChild(tree, current) =&gt;&#10;      is_(current, STrees_Node))))&#10;"/>
<po column="25" line="1333" message="STrees_Delete, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1333:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_LeftChild(tree, current))))&#10;" number="268" object="" resource="ADTSL" toString="STrees_Delete, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1333:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_LeftChild(tree, current))))&#10;"/>
<po column="48" line="1333" message="STrees_Delete, leftchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1333:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;" number="269" object="" resource="ADTSL" toString="STrees_Delete, leftchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1333:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;"/>
<po column="26" line="1334" message="STrees_Delete, rightchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1334:26&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_RightChild(tree, current))))&#10;" number="270" object="" resource="ADTSL" toString="STrees_Delete, rightchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1334:26&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_RightChild(tree, current))))&#10;"/>
<po column="50" line="1334" message="STrees_Delete, rightchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1334:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;" number="271" object="" resource="ADTSL" toString="STrees_Delete, rightchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1334:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;"/>
<po column="20" line="1335" message="STrees_Delete, left: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1335:20&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_Subtree(old, leftchild))))&#10;" number="272" object="" resource="ADTSL" toString="STrees_Delete, left: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1335:20&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_Subtree(old, leftchild))))&#10;"/>
<po column="17" line="1337" message="STrees_Delete, position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1337:17&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_InOrderPredecessor(old, current))))&#10;" number="273" object="" resource="ADTSL" toString="STrees_Delete, position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1337:17&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_InOrderPredecessor(old, current))))&#10;"/>
<po column="48" line="1337" message="STrees_Delete, position: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1337:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;" number="274" object="" resource="ADTSL" toString="STrees_Delete, position: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1337:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      is_(current, STrees_Node))))&#10;"/>
<po column="24" line="1338" message="STrees_Delete, newright: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1338:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)))))&#10;" number="275" object="" resource="ADTSL" toString="STrees_Delete, newright: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1338:24&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)))))&#10;"/>
<po column="19" line="1341" message="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1341:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)))))&#10;" number="276" object="" resource="ADTSL" toString="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1341:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)))))&#10;"/>
<po column="47" line="1341" message="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1341:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_Root(newleft))))&#10;" number="277" object="" resource="ADTSL" toString="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1341:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      pre_STrees_Root(newleft))))&#10;"/>
<po column="50" line="1344" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1344:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in&#10;        pre_STrees_Root(new)))))&#10;" number="278" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1344:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in&#10;        pre_STrees_Root(new)))))&#10;"/>
<po column="11" line="1344" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1344:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in&#10;        inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new)))))))&#10;" number="279" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1344:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    ((STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (let leftchild:STrees_Node = STrees_LeftChild(tree, current), rightchild:STrees_Node = STrees_RightChild(tree, current), left:STrees_Tree = STrees_Subtree(old, leftchild), mk_STrees_Node(-, position):STrees_Node = STrees_InOrderPredecessor(old, current), newright:STrees_Tree = STrees_MoveSubtree(old, rightchild, ((2 * position) + 1)), newleft:STrees_Tree = (left union newright), new:STrees_Tree = STrees_MoveSubtree(newleft, STrees_Root(newleft), (current.position)) in&#10;        inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new)))))))&#10;"/>
<po column="25" line="1346" message="STrees_Delete, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1346:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        pre_STrees_LeftChild(tree, current)))))&#10;" number="280" object="" resource="ADTSL" toString="STrees_Delete, leftchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1346:25&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        pre_STrees_LeftChild(tree, current)))))&#10;"/>
<po column="48" line="1346" message="STrees_Delete, leftchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1346:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        is_(current, STrees_Node)))))&#10;" number="281" object="" resource="ADTSL" toString="STrees_Delete, leftchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1346:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        is_(current, STrees_Node)))))&#10;"/>
<po column="19" line="1347" message="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1347:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        pre_STrees_MoveSubtree(old, leftchild, (current.position))))))&#10;" number="282" object="" resource="ADTSL" toString="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1347:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        pre_STrees_MoveSubtree(old, leftchild, (current.position))))))&#10;"/>
<po column="50" line="1349" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1349:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        (let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in&#10;          pre_STrees_Root(new))))))&#10;" number="283" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1349:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        (let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in&#10;          pre_STrees_Root(new))))))&#10;"/>
<po column="11" line="1349" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1349:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        (let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in&#10;          inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new))))))))&#10;" number="284" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1349:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (STrees_HasLeftChild(tree, current) =&gt;&#10;        (let leftchild:STrees_Node = STrees_LeftChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, leftchild, (current.position)) in&#10;          inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new))))))))&#10;"/>
<po column="26" line="1351" message="STrees_Delete, rightchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1351:26&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_RightChild(tree, current))))))&#10;" number="285" object="" resource="ADTSL" toString="STrees_Delete, rightchild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1351:26&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_RightChild(tree, current))))))&#10;"/>
<po column="50" line="1351" message="STrees_Delete, rightchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1351:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          is_(current, STrees_Node))))))&#10;" number="286" object="" resource="ADTSL" toString="STrees_Delete, rightchild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1351:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          is_(current, STrees_Node))))))&#10;"/>
<po column="19" line="1352" message="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1352:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_MoveSubtree(old, rightchild, (current.position)))))))&#10;" number="287" object="" resource="ADTSL" toString="STrees_Delete, new: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1352:19&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_MoveSubtree(old, rightchild, (current.position)))))))&#10;"/>
<po column="50" line="1354" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1354:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          (let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in&#10;            pre_STrees_Root(new)))))))&#10;" number="288" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1354:50&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          (let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in&#10;            pre_STrees_Root(new)))))))&#10;"/>
<po column="11" line="1354" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1354:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          (let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in&#10;            inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new)))))))))&#10;" number="289" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1354:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (STrees_HasRightChild(tree, current) =&gt;&#10;          (let rightchild:STrees_Node = STrees_RightChild(tree, current), new:STrees_Tree = STrees_MoveSubtree(old, rightchild, (current.position)) in&#10;            inv_STrees_Info(mk_STrees_Info(((tree \ old) union new), STrees_Root(new)))))))))&#10;"/>
<po column="44" line="1357" message="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:44&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_Parent(tree, current))))))&#10;" number="290" object="" resource="ADTSL" toString="STrees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:44&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          pre_STrees_Parent(tree, current))))))&#10;"/>
<po column="64" line="1357" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:64&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          is_(current, STrees_Node))))))&#10;" number="291" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:64&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          is_(current, STrees_Node))))))&#10;"/>
<po column="11" line="1357" message="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          inv_STrees_Info(mk_STrees_Info((tree \ {current}), STrees_Parent(tree, current))))))))&#10;" number="292" object="" resource="ADTSL" toString="STrees_Delete: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1357:11&#10;(forall mk_STrees_Info(tree, current):STrees_Info &amp; (current &lt;&gt; nil) =&gt;&#10;  (let old:STrees_Tree = STrees_Subtree(tree, current) in&#10;    (not (STrees_HasRightChild(tree, current) and STrees_HasLeftChild(tree, current)) =&gt;&#10;      (not STrees_HasLeftChild(tree, current) =&gt;&#10;        (not STrees_HasRightChild(tree, current) =&gt;&#10;          inv_STrees_Info(mk_STrees_Info((tree \ {current}), STrees_Parent(tree, current))))))))&#10;"/>
<po column="1" line="1365" message="STrees_Subtree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1365:1&#10;(forall tree:STrees_Tree, mk_STrees_Node(rootdata, rootpos):STrees_Node &amp; (mk_STrees_Node(rootdata, rootpos) in set tree) =&gt;&#10;  inv_STrees_Tree({mk_STrees_Node(d, p) | [mk_STrees_Node(d, p) in set tree] &amp; (exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (rootpos * (2 ** n))) and (p &lt; ((rootpos + 1) * (2 ** n)))))}) and (is_({mk_STrees_Node(d, p) | [mk_STrees_Node(d, p) in set tree] &amp; (exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (rootpos * (2 ** n))) and (p &lt; ((rootpos + 1) * (2 ** n)))))}, set of (STrees_Node))))&#10;" number="293" object="" resource="ADTSL" toString="STrees_Subtree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1365:1&#10;(forall tree:STrees_Tree, mk_STrees_Node(rootdata, rootpos):STrees_Node &amp; (mk_STrees_Node(rootdata, rootpos) in set tree) =&gt;&#10;  inv_STrees_Tree({mk_STrees_Node(d, p) | [mk_STrees_Node(d, p) in set tree] &amp; (exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (rootpos * (2 ** n))) and (p &lt; ((rootpos + 1) * (2 ** n)))))}) and (is_({mk_STrees_Node(d, p) | [mk_STrees_Node(d, p) in set tree] &amp; (exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (rootpos * (2 ** n))) and (p &lt; ((rootpos + 1) * (2 ** n)))))}, set of (STrees_Node))))&#10;"/>
<po column="20" line="1378" message="STrees_MoveSubtree, subtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1378:20&#10;(forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 &amp; (subtreeRoot in set tree) =&gt;&#10;  pre_STrees_Subtree(tree, subtreeRoot))&#10;" number="294" object="" resource="ADTSL" toString="STrees_MoveSubtree, subtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1378:20&#10;(forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 &amp; (subtreeRoot in set tree) =&gt;&#10;  pre_STrees_Subtree(tree, subtreeRoot))&#10;"/>
<po column="1" line="1376" message="STrees_MoveSubtree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1376:1&#10;(forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 &amp; (subtreeRoot in set tree) =&gt;&#10;  inv_STrees_Tree(let subtree:STrees_Tree = STrees_Subtree(tree, subtreeRoot), mk_STrees_Node(-, oldRootPos):STrees_Node = subtreeRoot in {STrees_MoveNode(tree, node, oldRootPos, newRootPos) | [node in set subtree]}) and (is_(let subtree:STrees_Tree = STrees_Subtree(tree, subtreeRoot), mk_STrees_Node(-, oldRootPos):STrees_Node = subtreeRoot in {STrees_MoveNode(tree, node, oldRootPos, newRootPos) | [node in set subtree]}, set of (STrees_Node))))&#10;" number="295" object="" resource="ADTSL" toString="STrees_MoveSubtree: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1376:1&#10;(forall tree:STrees_Tree, subtreeRoot:STrees_Node, newRootPos:nat1 &amp; (subtreeRoot in set tree) =&gt;&#10;  inv_STrees_Tree(let subtree:STrees_Tree = STrees_Subtree(tree, subtreeRoot), mk_STrees_Node(-, oldRootPos):STrees_Node = subtreeRoot in {STrees_MoveNode(tree, node, oldRootPos, newRootPos) | [node in set subtree]}) and (is_(let subtree:STrees_Tree = STrees_Subtree(tree, subtreeRoot), mk_STrees_Node(-, oldRootPos):STrees_Node = subtreeRoot in {STrees_MoveNode(tree, node, oldRootPos, newRootPos) | [node in set subtree]}, set of (STrees_Node))))&#10;"/>
<po column="15" line="1392" message="STrees_MoveNode, n: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1392:15&#10;(forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 &amp;&#10;  exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (oldRootPos * (2 ** n))) and (p &lt; ((oldRootPos + 1) * (2 ** n)))))&#10;" number="296" object="" resource="ADTSL" toString="STrees_MoveNode, n: unique existence binding obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1392:15&#10;(forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 &amp;&#10;  exists1 n in set {0, ... ,(card tree)} &amp; ((p &gt;= (oldRootPos * (2 ** n))) and (p &lt; ((oldRootPos + 1) * (2 ** n)))))&#10;"/>
<po column="49" line="1394" message="STrees_MoveNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1394:49&#10;(forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 &amp;&#10;  (let n:int = (iota n in set {0, ... ,(card tree)} &amp; ((p &gt;= (oldRootPos * (2 ** n))) and (p &lt; ((oldRootPos + 1) * (2 ** n))))) in&#10;    (((newRootPos * (2 ** n)) + p) - (oldRootPos * (2 ** n))) &gt; 0))&#10;" number="297" object="" resource="ADTSL" toString="STrees_MoveNode: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1394:49&#10;(forall tree:STrees_Tree, mk_STrees_Node(d, p):STrees_Node, oldRootPos:nat1, newRootPos:nat1 &amp;&#10;  (let n:int = (iota n in set {0, ... ,(card tree)} &amp; ((p &gt;= (oldRootPos * (2 ** n))) and (p &lt; ((oldRootPos + 1) * (2 ** n))))) in&#10;    (((newRootPos * (2 ** n)) + p) - (oldRootPos * (2 ** n))) &gt; 0))&#10;"/>
<po column="21" line="1422" message="STrees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1422:21&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      ((current &lt;&gt; nil) =&gt;&#10;        pre_STrees_HasLeftChild(tree, current)))))&#10;" number="298" object="" resource="ADTSL" toString="STrees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1422:21&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      ((current &lt;&gt; nil) =&gt;&#10;        pre_STrees_HasLeftChild(tree, current)))))&#10;"/>
<po column="47" line="1422" message="STrees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1422:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      ((current &lt;&gt; nil) =&gt;&#10;        is_(current, STrees_Node)))))&#10;" number="299" object="" resource="ADTSL" toString="STrees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1422:47&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (&lt;ToLeft&gt; = direction =&gt; &#10;      ((current &lt;&gt; nil) =&gt;&#10;        is_(current, STrees_Node)))))&#10;"/>
<po column="21" line="1426" message="STrees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1426:21&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        ((current &lt;&gt; nil) =&gt;&#10;          pre_STrees_HasRightChild(tree, current))))))&#10;" number="300" object="" resource="ADTSL" toString="STrees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1426:21&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        ((current &lt;&gt; nil) =&gt;&#10;          pre_STrees_HasRightChild(tree, current))))))&#10;"/>
<po column="48" line="1426" message="STrees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1426:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        ((current &lt;&gt; nil) =&gt;&#10;          is_(current, STrees_Node))))))&#10;" number="301" object="" resource="ADTSL" toString="STrees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1426:48&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  (not &lt;ToRoot&gt; = direction =&gt;&#10;    (not &lt;ToLeft&gt; = direction =&gt;&#10;      (&lt;ToRight&gt; = direction =&gt; &#10;        ((current &lt;&gt; nil) =&gt;&#10;          is_(current, STrees_Node))))))&#10;"/>
<po column="6" line="1418" message="STrees_ExistsDirection: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1418:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  direction = &lt;ToRoot&gt; or direction = &lt;ToLeft&gt; or direction = &lt;ToRight&gt;)&#10;" number="302" object="" resource="ADTSL" toString="STrees_ExistsDirection: cases exhaustive obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1418:6&#10;(forall mk_STrees_Info(tree, current):STrees_Info, direction:STrees_Direction &amp;&#10;  direction = &lt;ToRoot&gt; or direction = &lt;ToLeft&gt; or direction = &lt;ToRight&gt;)&#10;"/>
<po column="19" line="1482" message="Trees_Position, parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  pre_Nodes_GetParent(Heaps_Retrieve(heap, child)))&#10;" number="303" object="" resource="ADTSL" toString="Trees_Position, parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  pre_Nodes_GetParent(Heaps_Retrieve(heap, child)))&#10;"/>
<po column="35" line="1482" message="Trees_Position, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink))))&#10;" number="304" object="" resource="ADTSL" toString="Trees_Position, parent: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink))))&#10;"/>
<po column="35" line="1482" message="Trees_Position, parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  pre_Heaps_Retrieve(heap, child))&#10;" number="305" object="" resource="ADTSL" toString="Trees_Position, parent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1482:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  pre_Heaps_Retrieve(heap, child))&#10;"/>
<po column="18" line="1486" message="Trees_Position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1486:18&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  (let parent:Nodes_NodePtr = Nodes_GetParent(Heaps_Retrieve(heap, child)) in&#10;    (not (parent = NIL) =&gt;&#10;      (Trees_IsRightChildOf(heap, child, parent) =&gt;&#10;        pre_Trees_Position(heap, parent)))))&#10;" number="306" object="" resource="ADTSL" toString="Trees_Position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1486:18&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  (let parent:Nodes_NodePtr = Nodes_GetParent(Heaps_Retrieve(heap, child)) in&#10;    (not (parent = NIL) =&gt;&#10;      (Trees_IsRightChildOf(heap, child, parent) =&gt;&#10;        pre_Trees_Position(heap, parent)))))&#10;"/>
<po column="18" line="1488" message="Trees_Position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1488:18&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  (let parent:Nodes_NodePtr = Nodes_GetParent(Heaps_Retrieve(heap, child)) in&#10;    (not (parent = NIL) =&gt;&#10;      (not Trees_IsRightChildOf(heap, child, parent) =&gt;&#10;        pre_Trees_Position(heap, parent)))))&#10;" number="307" object="" resource="ADTSL" toString="Trees_Position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1488:18&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr &amp; (child &lt;&gt; NIL) =&gt;&#10;  (let parent:Nodes_NodePtr = Nodes_GetParent(Heaps_Retrieve(heap, child)) in&#10;    (not (parent = NIL) =&gt;&#10;      (not Trees_IsRightChildOf(heap, child, parent) =&gt;&#10;        pre_Trees_Position(heap, parent)))))&#10;"/>
<po column="25" line="1499" message="Trees_Set, treeset: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1499:25&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    pre_STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1))))&#10;" number="308" object="" resource="ADTSL" toString="Trees_Set, treeset: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1499:25&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    pre_STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1))))&#10;"/>
<po column="22" line="1500" message="Trees_Set, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:22&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      pre_Nodes_GetData(Heaps_Retrieve(heap, current)))))&#10;" number="309" object="" resource="ADTSL" toString="Trees_Set, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:22&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      pre_Nodes_GetData(Heaps_Retrieve(heap, current)))))&#10;"/>
<po column="36" line="1500" message="Trees_Set, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:36&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      ((is_(Heaps_Retrieve(heap, current), Nodes_BinaryTree)) or&#10;      (is_(Heaps_Retrieve(heap, current), Nodes_DoubleLink)) or&#10;      (is_(Heaps_Retrieve(heap, current), Nodes_SingleLink))))))&#10;" number="310" object="" resource="ADTSL" toString="Trees_Set, data: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:36&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      ((is_(Heaps_Retrieve(heap, current), Nodes_BinaryTree)) or&#10;      (is_(Heaps_Retrieve(heap, current), Nodes_DoubleLink)) or&#10;      (is_(Heaps_Retrieve(heap, current), Nodes_SingleLink))))))&#10;"/>
<po column="36" line="1500" message="Trees_Set, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:36&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      pre_Heaps_Retrieve(heap, current))))&#10;" number="311" object="" resource="ADTSL" toString="Trees_Set, data: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1500:36&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      pre_Heaps_Retrieve(heap, current))))&#10;"/>
<po column="26" line="1501" message="Trees_Set, position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1501:26&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, current)) in&#10;        pre_Trees_Position(heap, current)))))&#10;" number="312" object="" resource="ADTSL" toString="Trees_Set, position: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1501:26&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, current)) in&#10;        pre_Trees_Position(heap, current)))))&#10;"/>
<po column="11" line="1503" message="Trees_Set: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1503:11&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, current)) in&#10;        (let position:nat1 = Trees_Position(heap, current) in&#10;          (let currentnode:STrees_Node = STrees_MkNode(data, position) in&#10;            pre_STrees_MkInfo(treeset, currentnode)))))))&#10;" number="313" object="" resource="ADTSL" toString="Trees_Set: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1503:11&#10;(forall heap:Heaps_Heap, mk_Trees_Tree(treePtr, current):Trees_Tree &amp;&#10;  ((treePtr &lt;&gt; NIL) =&gt;&#10;    (let treeset:STrees_Tree = STrees_MkTree(Trees_SubtreeToSet(heap, treePtr, 1)) in&#10;      (let data:Nodes_Data = Nodes_GetData(Heaps_Retrieve(heap, current)) in&#10;        (let position:nat1 = Trees_Position(heap, current) in&#10;          (let currentnode:STrees_Node = STrees_MkNode(data, position) in&#10;            pre_STrees_MkInfo(treeset, currentnode)))))))&#10;"/>
<po column="23" line="1515" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:23&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetData(Heaps_Retrieve(heap, subtree))))&#10;" number="314" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:23&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetData(Heaps_Retrieve(heap, subtree))))&#10;"/>
<po column="37" line="1515" message="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:37&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;" number="315" object="" resource="ADTSL" toString="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:37&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;"/>
<po column="37" line="1515" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:37&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;" number="316" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1515:37&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;"/>
<po column="8" line="1517" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1517:8&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetLeft(Heaps_Retrieve(heap, subtree))))&#10;" number="317" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1517:8&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetLeft(Heaps_Retrieve(heap, subtree))))&#10;"/>
<po column="13" line="1518" message="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1518:13&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;" number="318" object="" resource="ADTSL" toString="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1518:13&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;"/>
<po column="13" line="1518" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1518:13&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;" number="319" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1518:13&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;"/>
<po column="16" line="1520" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1520:16&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetRight(Heaps_Retrieve(heap, subtree))))&#10;" number="320" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1520:16&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetRight(Heaps_Retrieve(heap, subtree))))&#10;"/>
<po column="19" line="1521" message="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1521:19&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;" number="321" object="" resource="ADTSL" toString="Trees_SubtreeToSet: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1521:19&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, subtree), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, subtree), Nodes_SingleLink)))))&#10;"/>
<po column="19" line="1521" message="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1521:19&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;" number="322" object="" resource="ADTSL" toString="Trees_SubtreeToSet: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1521:19&#10;(forall heap:Heaps_Heap, subtree:Nodes_NodePtr, position:nat1 &amp;&#10;  ((subtree &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, subtree)))&#10;"/>
<po column="11" line="1531" message="Trees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:11&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr))))&#10;" number="323" object="" resource="ADTSL" toString="Trees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:11&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetLeft(Heaps_Retrieve(heap, ptr))))&#10;"/>
<po column="25" line="1531" message="Trees_HasLeftChild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:25&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))&#10;" number="324" object="" resource="ADTSL" toString="Trees_HasLeftChild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:25&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))&#10;"/>
<po column="25" line="1531" message="Trees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:25&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, ptr)))&#10;" number="325" object="" resource="ADTSL" toString="Trees_HasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1531:25&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, ptr)))&#10;"/>
<po column="11" line="1538" message="Trees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:11&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr))))&#10;" number="326" object="" resource="ADTSL" toString="Trees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:11&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Nodes_GetRight(Heaps_Retrieve(heap, ptr))))&#10;"/>
<po column="26" line="1538" message="Trees_HasRightChild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:26&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))&#10;" number="327" object="" resource="ADTSL" toString="Trees_HasRightChild: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:26&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink)))))&#10;"/>
<po column="26" line="1538" message="Trees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:26&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, ptr)))&#10;" number="328" object="" resource="ADTSL" toString="Trees_HasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1538:26&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; ((ptr &lt;&gt; NIL) =&gt; pre_Heaps_Retrieve(heap, ptr)) =&gt;&#10;  ((ptr &lt;&gt; NIL) =&gt;&#10;    pre_Heaps_Retrieve(heap, ptr)))&#10;"/>
<po column="14" line="1545" message="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:14&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Nodes_GetRight(Heaps_Retrieve(heap, parent)))&#10;" number="329" object="" resource="ADTSL" toString="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:14&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Nodes_GetRight(Heaps_Retrieve(heap, parent)))&#10;"/>
<po column="29" line="1545" message="Trees_IsRightChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:29&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))&#10;" number="330" object="" resource="ADTSL" toString="Trees_IsRightChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:29&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))&#10;"/>
<po column="29" line="1545" message="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:29&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Heaps_Retrieve(heap, parent))&#10;" number="331" object="" resource="ADTSL" toString="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1545:29&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Heaps_Retrieve(heap, parent))&#10;"/>
<po column="19" line="1546" message="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Nodes_GetParent(Heaps_Retrieve(heap, child))))&#10;" number="332" object="" resource="ADTSL" toString="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Nodes_GetParent(Heaps_Retrieve(heap, child))))&#10;"/>
<po column="35" line="1546" message="Trees_IsRightChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))&#10;" number="333" object="" resource="ADTSL" toString="Trees_IsRightChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))&#10;"/>
<po column="35" line="1546" message="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Heaps_Retrieve(heap, child)))&#10;" number="334" object="" resource="ADTSL" toString="Trees_IsRightChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1546:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetRight(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Heaps_Retrieve(heap, child)))&#10;"/>
<po column="14" line="1552" message="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:14&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Nodes_GetLeft(Heaps_Retrieve(heap, parent)))&#10;" number="335" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:14&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Nodes_GetLeft(Heaps_Retrieve(heap, parent)))&#10;"/>
<po column="28" line="1552" message="Trees_IsLeftChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:28&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))&#10;" number="336" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:28&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, parent), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, parent), Nodes_SingleLink))))&#10;"/>
<po column="28" line="1552" message="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:28&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Heaps_Retrieve(heap, parent))&#10;" number="337" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1552:28&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  pre_Heaps_Retrieve(heap, parent))&#10;"/>
<po column="19" line="1553" message="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Nodes_GetParent(Heaps_Retrieve(heap, child))))&#10;" number="338" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:19&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Nodes_GetParent(Heaps_Retrieve(heap, child))))&#10;"/>
<po column="35" line="1553" message="Trees_IsLeftChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))&#10;" number="339" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    ((is_(Heaps_Retrieve(heap, child), Nodes_BinaryTree)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_DoubleLink)) or&#10;    (is_(Heaps_Retrieve(heap, child), Nodes_SingleLink)))))&#10;"/>
<po column="35" line="1553" message="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Heaps_Retrieve(heap, child)))&#10;" number="340" object="" resource="ADTSL" toString="Trees_IsLeftChildOf: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1553:35&#10;(forall heap:Heaps_Heap, child:Nodes_NodePtr, parent:Nodes_NodePtr &amp; (pre_Heaps_Retrieve(heap, parent) and pre_Heaps_Retrieve(heap, child)) =&gt;&#10;  ((child = Nodes_GetLeft(Heaps_Retrieve(heap, parent))) =&gt;&#10;    pre_Heaps_Retrieve(heap, child)))&#10;"/>
<po column="28" line="1558" message="Trees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:28&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr)))&#10;" number="341" object="" resource="ADTSL" toString="Trees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:28&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  pre_Nodes_GetParent(Heaps_Retrieve(heap, ptr)))&#10;"/>
<po column="44" line="1558" message="Trees_IsRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:44&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink))))&#10;" number="342" object="" resource="ADTSL" toString="Trees_IsRoot: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:44&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  ((is_(Heaps_Retrieve(heap, ptr), Nodes_BinaryTree)) or&#10;  (is_(Heaps_Retrieve(heap, ptr), Nodes_DoubleLink)) or&#10;  (is_(Heaps_Retrieve(heap, ptr), Nodes_SingleLink))))&#10;"/>
<po column="44" line="1558" message="Trees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:44&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  pre_Heaps_Retrieve(heap, ptr))&#10;" number="343" object="" resource="ADTSL" toString="Trees_IsRoot: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1558:44&#10;(forall heap:Heaps_Heap, ptr:Nodes_NodePtr &amp; (ptr &lt;&gt; NIL) =&gt;&#10;  pre_Heaps_Retrieve(heap, ptr))&#10;"/>
<po column="37" line="1576" message="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1576:37&#10;(Heaps_Available(heap) =&gt;&#10;  (let mk_Trees_Tree(treePtr, current):Trees_Tree = tree in&#10;    (((direction = &lt;ToRoot&gt;) =&gt; (treePtr = NIL)) =&gt;&#10;      pre_Trees_HasRightChild(heap, current))))&#10;" number="344" object="" resource="ADTSL" toString="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1576:37&#10;(Heaps_Available(heap) =&gt;&#10;  (let mk_Trees_Tree(treePtr, current):Trees_Tree = tree in&#10;    (((direction = &lt;ToRoot&gt;) =&gt; (treePtr = NIL)) =&gt;&#10;      pre_Trees_HasRightChild(heap, current))))&#10;"/>
<po column="36" line="1577" message="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1577:36&#10;(Heaps_Available(heap) =&gt;&#10;  (let mk_Trees_Tree(treePtr, current):Trees_Tree = tree in&#10;    (((direction = &lt;ToRoot&gt;) =&gt; (treePtr = NIL)) =&gt;&#10;      (((direction = &lt;ToRight&gt;) =&gt; (not Trees_HasRightChild(heap, current))) =&gt;&#10;        pre_Trees_HasLeftChild(heap, current)))))&#10;" number="345" object="" resource="ADTSL" toString="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1577:36&#10;(Heaps_Available(heap) =&gt;&#10;  (let mk_Trees_Tree(treePtr, current):Trees_Tree = tree in&#10;    (((direction = &lt;ToRoot&gt;) =&gt; (treePtr = NIL)) =&gt;&#10;      (((direction = &lt;ToRight&gt;) =&gt; (not Trees_HasRightChild(heap, current))) =&gt;&#10;        pre_Trees_HasLeftChild(heap, current)))))&#10;"/>
<po column="9" line="1580" message="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1580:9&#10;(((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) =&gt;&#10;  (let old:STrees_Info = Trees_Set(heap~, tree) in&#10;    pre_STrees_Insert(old, data, direction)))&#10;" number="346" object="" resource="ADTSL" toString="Trees_Insert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1580:9&#10;(((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) =&gt;&#10;  (let old:STrees_Info = Trees_Set(heap~, tree) in&#10;    pre_STrees_Insert(old, data, direction)))&#10;"/>
<po column="1" line="1565" message="Trees_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1565:1&#10;(((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) and let old:STrees_Info = Trees_Set(heap~, tree) in (STrees_Insert(old, data, direction) = Trees_Set(heap, RESULT)))&#10;" number="347" object="" resource="ADTSL" toString="Trees_Insert: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1565:1&#10;(((Heaps_AmountUsed(heap~) + 1) = Heaps_AmountUsed(heap)) and let old:STrees_Info = Trees_Set(heap~, tree) in (STrees_Insert(old, data, direction) = Trees_Set(heap, RESULT)))&#10;"/>
<po column="1" line="1565" message="Trees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1565:1&#10;is_(RESULT, Trees_Tree)&#10;" number="348" object="" resource="ADTSL" toString="Trees_Insert: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1565:1&#10;is_(RESULT, Trees_Tree)&#10;"/>
<po column="5" line="1609" message="Trees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1609:5&#10;pre_Trees_HasLeftChild(heap, ptr)&#10;" number="349" object="" resource="ADTSL" toString="Trees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1609:5&#10;pre_Trees_HasLeftChild(heap, ptr)&#10;"/>
<po column="2" line="1605" message="Trees_InOrderPredecessor: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1605:2&#10;while Trees_HasRightChild(heap, pred) do ...&#10;" number="350" object="" resource="ADTSL" toString="Trees_InOrderPredecessor: while loop termination obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1605:2&#10;while Trees_HasRightChild(heap, pred) do ...&#10;"/>
<po column="8" line="1605" message="Trees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1605:8&#10;pre_Trees_HasRightChild(heap, pred)&#10;" number="351" object="" resource="ADTSL" toString="Trees_InOrderPredecessor: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1605:8&#10;pre_Trees_HasRightChild(heap, pred)&#10;"/>
<po column="11" line="1654" message="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1654:11&#10;((Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)) =&gt;&#10;  (let old:STrees_Info = Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in&#10;    pre_STrees_Delete(old)))&#10;" number="352" object="" resource="ADTSL" toString="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1654:11&#10;((Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)) =&gt;&#10;  (let old:STrees_Info = Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in&#10;    pre_STrees_Delete(old)))&#10;"/>
<po column="1" line="1611" message="Trees_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1611:1&#10;((Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)) and let old:STrees_Info = Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in (STrees_Delete(old) = Trees_Set(heap, RESULT)))&#10;" number="353" object="" resource="ADTSL" toString="Trees_Delete: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1611:1&#10;((Heaps_AmountUsed(heap~) = (Heaps_AmountUsed(heap) + 1)) and let old:STrees_Info = Trees_Set(heap~, mk_Trees_Tree(treePtr, current)) in (STrees_Delete(old) = Trees_Set(heap, RESULT)))&#10;"/>
<po column="33" line="1613" message="Trees_Delete, hasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1613:33&#10;pre_Trees_HasLeftChild(heap, current)&#10;" number="354" object="" resource="ADTSL" toString="Trees_Delete, hasLeftChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1613:33&#10;pre_Trees_HasLeftChild(heap, current)&#10;"/>
<po column="34" line="1614" message="Trees_Delete, hasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1614:34&#10;pre_Trees_HasRightChild(heap, current)&#10;" number="355" object="" resource="ADTSL" toString="Trees_Delete, hasRightChild: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1614:34&#10;pre_Trees_HasRightChild(heap, current)&#10;"/>
<po column="9" line="1641" message="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1641:9&#10;pre_Trees_IsRoot(heap, current)&#10;" number="356" object="" resource="ADTSL" toString="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1641:9&#10;pre_Trees_IsRoot(heap, current)&#10;"/>
<po column="13" line="1643" message="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1643:13&#10;pre_Trees_IsRightChildOf(heap, current, parent)&#10;" number="357" object="" resource="ADTSL" toString="Trees_Delete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1643:13&#10;pre_Trees_IsRightChildOf(heap, current, parent)&#10;"/>
<po column="1" line="1679" message="Trees_ExistsData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1679:1&#10;(STrees_ExistsData(Trees_Set(heap, tree), data) = RESULT)&#10;" number="358" object="" resource="ADTSL" toString="Trees_ExistsData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1679:1&#10;(STrees_ExistsData(Trees_Set(heap, tree), data) = RESULT)&#10;"/>
<po column="1" line="1683" message="Trees_ExistsDirection: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1683:1&#10;(STrees_ExistsDirection(Trees_Set(heap, tree), direction) = RESULT)&#10;" number="359" object="" resource="ADTSL" toString="Trees_ExistsDirection: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1683:1&#10;(STrees_ExistsDirection(Trees_Set(heap, tree), direction) = RESULT)&#10;"/>
<po column="25" line="1689" message="Trees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1689:25&#10;(((tree.current) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasLeftChild(heap, (tree.current)))&#10;" number="360" object="" resource="ADTSL" toString="Trees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1689:25&#10;(((tree.current) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasLeftChild(heap, (tree.current)))&#10;"/>
<po column="25" line="1692" message="Trees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1692:25&#10;(((tree.current) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasRightChild(heap, (tree.current)))&#10;" number="361" object="" resource="ADTSL" toString="Trees_ExistsDirection: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1692:25&#10;(((tree.current) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasRightChild(heap, (tree.current)))&#10;"/>
<po column="1" line="1683" message="Trees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1683:1&#10;is_(RESULT, bool)&#10;" number="362" object="" resource="ADTSL" toString="Trees_ExistsDirection: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1683:1&#10;is_(RESULT, bool)&#10;"/>
<po column="6" line="1701" message="Trees_GetCurrentData: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1701:6&#10;pre_STrees_GetCurrentData(Trees_Set(heap, tree))&#10;" number="363" object="" resource="ADTSL" toString="Trees_GetCurrentData: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1701:6&#10;pre_STrees_GetCurrentData(Trees_Set(heap, tree))&#10;"/>
<po column="1" line="1698" message="Trees_GetCurrentData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1698:1&#10;(STrees_GetCurrentData(Trees_Set(heap, tree)) = RESULT)&#10;" number="364" object="" resource="ADTSL" toString="Trees_GetCurrentData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1698:1&#10;(STrees_GetCurrentData(Trees_Set(heap, tree)) = RESULT)&#10;"/>
<po column="6" line="1709" message="Trees_StoreCurrentData: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1709:6&#10;pre_STrees_StoreCurrentData(Trees_Set(heap~, tree), data)&#10;" number="365" object="" resource="ADTSL" toString="Trees_StoreCurrentData: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1709:6&#10;pre_STrees_StoreCurrentData(Trees_Set(heap~, tree), data)&#10;"/>
<po column="1" line="1703" message="Trees_StoreCurrentData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1703:1&#10;(STrees_StoreCurrentData(Trees_Set(heap~, tree), data) = Trees_Set(heap, RESULT))&#10;" number="366" object="" resource="ADTSL" toString="Trees_StoreCurrentData: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1703:1&#10;(STrees_StoreCurrentData(Trees_Set(heap~, tree), data) = Trees_Set(heap, RESULT))&#10;"/>
<po column="35" line="1721" message="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1721:35&#10;(((tree.treePtr) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasLeftChild(heap, (tree.current)))&#10;" number="367" object="" resource="ADTSL" toString="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1721:35&#10;(((tree.treePtr) &lt;&gt; NIL) =&gt;&#10;  pre_Trees_HasLeftChild(heap, (tree.current)))&#10;"/>
<po column="36" line="1722" message="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1722:36&#10;(((tree.treePtr) &lt;&gt; NIL) =&gt;&#10;  (((direction = &lt;ToLeft&gt;) =&gt; Trees_HasLeftChild(heap, (tree.current))) =&gt;&#10;    pre_Trees_HasRightChild(heap, (tree.current))))&#10;" number="368" object="" resource="ADTSL" toString="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1722:36&#10;(((tree.treePtr) &lt;&gt; NIL) =&gt;&#10;  (((direction = &lt;ToLeft&gt;) =&gt; Trees_HasLeftChild(heap, (tree.current))) =&gt;&#10;    pre_Trees_HasRightChild(heap, (tree.current))))&#10;"/>
<po column="6" line="1723" message="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1723:6&#10;pre_STrees_MoveInDir(Trees_Set(heap~, tree), direction)&#10;" number="369" object="" resource="ADTSL" toString="Trees_MoveInDir: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1723:6&#10;pre_STrees_MoveInDir(Trees_Set(heap~, tree), direction)&#10;"/>
<po column="1" line="1712" message="Trees_MoveInDir: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1712:1&#10;(STrees_MoveInDir(Trees_Set(heap~, tree), direction) = Trees_Set(heap, RESULT))&#10;" number="370" object="" resource="ADTSL" toString="Trees_MoveInDir: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1712:1&#10;(STrees_MoveInDir(Trees_Set(heap~, tree), direction) = Trees_Set(heap, RESULT))&#10;"/>
<po column="1" line="1712" message="Trees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1712:1&#10;is_(RESULT, Trees_Tree)&#10;" number="371" object="" resource="ADTSL" toString="Trees_MoveInDir: subtype obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1712:1&#10;is_(RESULT, Trees_Tree)&#10;"/>
<po column="9" line="1730" message="Trees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1730:9&#10;pre_Trees_IsRoot(heap, (tree.current))&#10;" number="372" object="" resource="ADTSL" toString="Trees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1730:9&#10;pre_Trees_IsRoot(heap, (tree.current))&#10;"/>
<po column="6" line="1731" message="Trees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1731:6&#10;pre_STrees_MoveToParent(Trees_Set(heap~, tree))&#10;" number="373" object="" resource="ADTSL" toString="Trees_MoveToParent: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1731:6&#10;pre_STrees_MoveToParent(Trees_Set(heap~, tree))&#10;"/>
<po column="1" line="1727" message="Trees_MoveToParent: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1727:1&#10;(STrees_MoveToParent(Trees_Set(heap~, tree)) = Trees_Set(heap, RESULT))&#10;" number="374" object="" resource="ADTSL" toString="Trees_MoveToParent: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1727:1&#10;(STrees_MoveToParent(Trees_Set(heap~, tree)) = Trees_Set(heap, RESULT))&#10;"/>
<po column="1" line="1734" message="Trees_Size: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1734:1&#10;(STrees_Size(Trees_Set(heap~, tree)) = RESULT)&#10;" number="375" object="" resource="ADTSL" toString="Trees_Size: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1734:1&#10;(STrees_Size(Trees_Set(heap~, tree)) = RESULT)&#10;"/>
<po column="1" line="1752" message="Trees_Traverse: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1752:1&#10;(STrees_Traverse(Trees_Set(heap~, tree), traversal) = Trees_Set(heap, RESULT))&#10;" number="376" object="" resource="ADTSL" toString="Trees_Traverse: operation post condition obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1752:1&#10;(STrees_Traverse(Trees_Set(heap~, tree), traversal) = Trees_Set(heap, RESULT))&#10;"/>
<po column="29" line="1763" message="Trees_TraverseSubtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1763:29&#10;pre_(traversal, DATA(subtree))&#10;" number="377" object="" resource="ADTSL" toString="Trees_TraverseSubtree: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1763:29&#10;pre_(traversal, DATA(subtree))&#10;"/>
<po column="16" line="1884" message="InsertResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1884:16&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('b', 2), STrees_MkNode('c', 3), STrees_MkNode('d', 4), STrees_MkNode('e', 5), STrees_MkNode('f', 6), STrees_MkNode('g', 7), STrees_MkNode('h', 8), STrees_MkNode('i', 9), STrees_MkNode('j', 10), STrees_MkNode('k', 11), STrees_MkNode('l', 12), STrees_MkNode('m', 13), STrees_MkNode('n', 14), STrees_MkNode('o', 15), STrees_MkNode('p', 16), STrees_MkNode('q', 17), STrees_MkNode('r', 18), STrees_MkNode('s', 19), STrees_MkNode('t', 20), STrees_MkNode('u', 21), STrees_MkNode('v', 22), STrees_MkNode('w', 23), STrees_MkNode('x', 24), STrees_MkNode('y', 25), STrees_MkNode('z', 26)})&#10;" number="378" object="" resource="ADTSL" toString="InsertResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1884:16&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('b', 2), STrees_MkNode('c', 3), STrees_MkNode('d', 4), STrees_MkNode('e', 5), STrees_MkNode('f', 6), STrees_MkNode('g', 7), STrees_MkNode('h', 8), STrees_MkNode('i', 9), STrees_MkNode('j', 10), STrees_MkNode('k', 11), STrees_MkNode('l', 12), STrees_MkNode('m', 13), STrees_MkNode('n', 14), STrees_MkNode('o', 15), STrees_MkNode('p', 16), STrees_MkNode('q', 17), STrees_MkNode('r', 18), STrees_MkNode('s', 19), STrees_MkNode('t', 20), STrees_MkNode('u', 21), STrees_MkNode('v', 22), STrees_MkNode('w', 23), STrees_MkNode('x', 24), STrees_MkNode('y', 25), STrees_MkNode('z', 26)})&#10;"/>
<po column="16" line="1915" message="DeleteResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1915:16&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('d', 2), STrees_MkNode('c', 3), STrees_MkNode('h', 4), STrees_MkNode('i', 5), STrees_MkNode('f', 6), STrees_MkNode('o', 7), STrees_MkNode('p', 8), STrees_MkNode('r', 10), STrees_MkNode('s', 11), STrees_MkNode('l', 12), STrees_MkNode('z', 13), STrees_MkNode('j', 23), STrees_MkNode('x', 24), STrees_MkNode('y', 25), STrees_MkNode('t', 46), STrees_MkNode('u', 47), STrees_MkNode('k', 95), STrees_MkNode('v', 190), STrees_MkNode('w', 191)})&#10;" number="379" object="" resource="ADTSL" toString="DeleteResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1915:16&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('d', 2), STrees_MkNode('c', 3), STrees_MkNode('h', 4), STrees_MkNode('i', 5), STrees_MkNode('f', 6), STrees_MkNode('o', 7), STrees_MkNode('p', 8), STrees_MkNode('r', 10), STrees_MkNode('s', 11), STrees_MkNode('l', 12), STrees_MkNode('z', 13), STrees_MkNode('j', 23), STrees_MkNode('x', 24), STrees_MkNode('y', 25), STrees_MkNode('t', 46), STrees_MkNode('u', 47), STrees_MkNode('k', 95), STrees_MkNode('v', 190), STrees_MkNode('w', 191)})&#10;"/>
<po column="18" line="1939" message="TraverseResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1939:18&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('a', 2), STrees_MkNode('a', 3), STrees_MkNode('a', 4), STrees_MkNode('a', 5), STrees_MkNode('a', 6), STrees_MkNode('b', 7), STrees_MkNode('b', 8), STrees_MkNode('b', 10), STrees_MkNode('b', 11), STrees_MkNode('b', 12), STrees_MkNode('b', 13), STrees_MkNode('a', 23), STrees_MkNode('b', 24), STrees_MkNode('b', 25), STrees_MkNode('b', 46), STrees_MkNode('b', 47), STrees_MkNode('b', 95), STrees_MkNode('b', 190), STrees_MkNode('b', 191)})&#10;" number="380" object="" resource="ADTSL" toString="TraverseResult: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1939:18&#10;pre_STrees_MkTree({STrees_MkNode('a', 1), STrees_MkNode('a', 2), STrees_MkNode('a', 3), STrees_MkNode('a', 4), STrees_MkNode('a', 5), STrees_MkNode('a', 6), STrees_MkNode('b', 7), STrees_MkNode('b', 8), STrees_MkNode('b', 10), STrees_MkNode('b', 11), STrees_MkNode('b', 12), STrees_MkNode('b', 13), STrees_MkNode('a', 23), STrees_MkNode('b', 24), STrees_MkNode('b', 25), STrees_MkNode('b', 46), STrees_MkNode('b', 47), STrees_MkNode('b', 95), STrees_MkNode('b', 190), STrees_MkNode('b', 191)})&#10;"/>
<po column="15" line="1984" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1984:15&#10;pre_STrees_Insert(stree, 'a', &lt;ToRoot&gt;)&#10;" number="381" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1984:15&#10;pre_STrees_Insert(stree, 'a', &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="1986" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1986:15&#10;pre_STrees_Insert(stree, 'b', &lt;ToLeft&gt;)&#10;" number="382" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1986:15&#10;pre_STrees_Insert(stree, 'b', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="1989" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1989:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="383" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1989:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="1990" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1990:15&#10;pre_STrees_Insert(stree, 'c', &lt;ToRight&gt;)&#10;" number="384" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1990:15&#10;pre_STrees_Insert(stree, 'c', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="1992" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1992:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="385" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1992:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="1993" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1993:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="386" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1993:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="1994" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1994:15&#10;pre_STrees_Insert(stree, 'd', &lt;ToLeft&gt;)&#10;" number="387" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1994:15&#10;pre_STrees_Insert(stree, 'd', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="1996" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1996:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="388" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1996:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="1997" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1997:15&#10;pre_STrees_Insert(stree, 'e', &lt;ToRight&gt;)&#10;" number="389" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1997:15&#10;pre_STrees_Insert(stree, 'e', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="1999" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1999:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;" number="390" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 1999:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="2000" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2000:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="391" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2000:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2001" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2001:15&#10;pre_STrees_Insert(stree, 'f', &lt;ToLeft&gt;)&#10;" number="392" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2001:15&#10;pre_STrees_Insert(stree, 'f', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2003" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2003:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="393" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2003:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2004" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2004:15&#10;pre_STrees_Insert(stree, 'g', &lt;ToRight&gt;)&#10;" number="394" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2004:15&#10;pre_STrees_Insert(stree, 'g', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2006" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2006:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;" number="395" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2006:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="2007" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2007:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="396" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2007:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2008" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2008:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="397" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2008:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2009" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2009:15&#10;pre_STrees_Insert(stree, 'h', &lt;ToLeft&gt;)&#10;" number="398" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2009:15&#10;pre_STrees_Insert(stree, 'h', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2011" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2011:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="399" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2011:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2012" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2012:15&#10;pre_STrees_Insert(stree, 'i', &lt;ToRight&gt;)&#10;" number="400" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2012:15&#10;pre_STrees_Insert(stree, 'i', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2014" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2014:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;" number="401" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2014:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;"/>
<po column="15" line="2015" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2015:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="402" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2015:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2016" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2016:15&#10;pre_STrees_Insert(stree, 'j', &lt;ToLeft&gt;)&#10;" number="403" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2016:15&#10;pre_STrees_Insert(stree, 'j', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2018" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2018:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="404" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2018:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2019" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2019:15&#10;pre_STrees_Insert(stree, 'k', &lt;ToRight&gt;)&#10;" number="405" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2019:15&#10;pre_STrees_Insert(stree, 'k', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2021" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2021:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;" number="406" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2021:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="2022" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2022:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="407" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2022:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2023" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2023:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="408" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2023:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2024" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2024:15&#10;pre_STrees_Insert(stree, 'l', &lt;ToLeft&gt;)&#10;" number="409" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2024:15&#10;pre_STrees_Insert(stree, 'l', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2026" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2026:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="410" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2026:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2027" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2027:15&#10;pre_STrees_Insert(stree, 'm', &lt;ToRight&gt;)&#10;" number="411" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2027:15&#10;pre_STrees_Insert(stree, 'm', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2029" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2029:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;" number="412" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2029:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;"/>
<po column="15" line="2030" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2030:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="413" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2030:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2031" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2031:15&#10;pre_STrees_Insert(stree, 'n', &lt;ToLeft&gt;)&#10;" number="414" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2031:15&#10;pre_STrees_Insert(stree, 'n', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2033" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2033:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="415" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2033:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2035" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2035:15&#10;pre_STrees_Insert(stree, 'o', &lt;ToRight&gt;)&#10;" number="416" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2035:15&#10;pre_STrees_Insert(stree, 'o', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2037" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2037:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;" number="417" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2037:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="2038" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2038:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="418" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2038:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2039" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2039:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="419" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2039:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2040" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2040:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="420" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2040:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2041" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2041:15&#10;pre_STrees_Insert(stree, 'p', &lt;ToLeft&gt;)&#10;" number="421" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2041:15&#10;pre_STrees_Insert(stree, 'p', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2043" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2043:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="422" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2043:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2044" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2044:15&#10;pre_STrees_Insert(stree, 'q', &lt;ToRight&gt;)&#10;" number="423" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2044:15&#10;pre_STrees_Insert(stree, 'q', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2046" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2046:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;" number="424" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2046:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;"/>
<po column="15" line="2047" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2047:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="425" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2047:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2048" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2048:15&#10;pre_STrees_Insert(stree, 'r', &lt;ToLeft&gt;)&#10;" number="426" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2048:15&#10;pre_STrees_Insert(stree, 'r', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2050" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2050:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="427" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2050:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2051" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2051:15&#10;pre_STrees_Insert(stree, 's', &lt;ToRight&gt;)&#10;" number="428" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2051:15&#10;pre_STrees_Insert(stree, 's', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2053" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2053:15&#10;pre_STrees_MoveToAnscestor(stree, 3)&#10;" number="429" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2053:15&#10;pre_STrees_MoveToAnscestor(stree, 3)&#10;"/>
<po column="15" line="2054" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2054:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="430" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2054:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2055" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2055:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="431" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2055:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2056" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2056:15&#10;pre_STrees_Insert(stree, 't', &lt;ToLeft&gt;)&#10;" number="432" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2056:15&#10;pre_STrees_Insert(stree, 't', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2058" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2058:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="433" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2058:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2059" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2059:15&#10;pre_STrees_Insert(stree, 'u', &lt;ToRight&gt;)&#10;" number="434" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2059:15&#10;pre_STrees_Insert(stree, 'u', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2061" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2061:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;" number="435" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2061:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;"/>
<po column="15" line="2062" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2062:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="436" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2062:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2063" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2063:15&#10;pre_STrees_Insert(stree, 'v', &lt;ToLeft&gt;)&#10;" number="437" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2063:15&#10;pre_STrees_Insert(stree, 'v', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2065" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2065:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="438" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2065:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2066" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2066:15&#10;pre_STrees_Insert(stree, 'w', &lt;ToRight&gt;)&#10;" number="439" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2066:15&#10;pre_STrees_Insert(stree, 'w', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2068" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2068:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;" number="440" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2068:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRoot&gt;)&#10;"/>
<po column="15" line="2069" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2069:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="441" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2069:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2070" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2070:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="442" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2070:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2071" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2071:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;" number="443" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2071:15&#10;pre_STrees_MoveInDir(stree, &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2072" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2072:15&#10;pre_STrees_Insert(stree, 'x', &lt;ToLeft&gt;)&#10;" number="444" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2072:15&#10;pre_STrees_Insert(stree, 'x', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2074" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2074:15&#10;pre_STrees_MoveToParent(stree)&#10;" number="445" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2074:15&#10;pre_STrees_MoveToParent(stree)&#10;"/>
<po column="15" line="2075" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2075:15&#10;pre_STrees_Insert(stree, 'y', &lt;ToRight&gt;)&#10;" number="446" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2075:15&#10;pre_STrees_Insert(stree, 'y', &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2077" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2077:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;" number="447" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2077:15&#10;pre_STrees_MoveToAnscestor(stree, 2)&#10;"/>
<po column="15" line="2078" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2078:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;" number="448" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2078:15&#10;pre_STrees_MoveInDir(stree, &lt;ToRight&gt;)&#10;"/>
<po column="15" line="2079" message="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2079:15&#10;pre_STrees_Insert(stree, 'z', &lt;ToLeft&gt;)&#10;" number="449" object="" resource="ADTSL" toString="TestSTreesInsert: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2079:15&#10;pre_STrees_Insert(stree, 'z', &lt;ToLeft&gt;)&#10;"/>
<po column="15" line="2088" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2088:15&#10;pre_STrees_MoveToNode(stree, 14)&#10;" number="450" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2088:15&#10;pre_STrees_MoveToNode(stree, 14)&#10;"/>
<po column="15" line="2089" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2089:15&#10;pre_STrees_Delete(stree)&#10;" number="451" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2089:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2091" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2091:15&#10;pre_STrees_MoveToNode(stree, 17)&#10;" number="452" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2091:15&#10;pre_STrees_MoveToNode(stree, 17)&#10;"/>
<po column="15" line="2092" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2092:15&#10;pre_STrees_Delete(stree)&#10;" number="453" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2092:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2094" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2094:15&#10;pre_STrees_MoveToNode(stree, 13)&#10;" number="454" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2094:15&#10;pre_STrees_MoveToNode(stree, 13)&#10;"/>
<po column="15" line="2095" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2095:15&#10;pre_STrees_Delete(stree)&#10;" number="455" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2095:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2097" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2097:15&#10;pre_STrees_MoveToNode(stree, 7)&#10;" number="456" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2097:15&#10;pre_STrees_MoveToNode(stree, 7)&#10;"/>
<po column="15" line="2098" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2098:15&#10;pre_STrees_Delete(stree)&#10;" number="457" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2098:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2100" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2100:15&#10;pre_STrees_MoveToNode(stree, 5)&#10;" number="458" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2100:15&#10;pre_STrees_MoveToNode(stree, 5)&#10;"/>
<po column="15" line="2101" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2101:15&#10;pre_STrees_Delete(stree)&#10;" number="459" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2101:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2103" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2103:15&#10;pre_STrees_MoveToNode(stree, 2)&#10;" number="460" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2103:15&#10;pre_STrees_MoveToNode(stree, 2)&#10;"/>
<po column="15" line="2104" message="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2104:15&#10;pre_STrees_Delete(stree)&#10;" number="461" object="" resource="ADTSL" toString="TestSTreesDelete: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2104:15&#10;pre_STrees_Delete(stree)&#10;"/>
<po column="15" line="2128" message="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2128:15&#10;pre_STrees_MoveToNode(stree, 3)&#10;" number="462" object="" resource="ADTSL" toString="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2128:15&#10;pre_STrees_MoveToNode(stree, 3)&#10;"/>
<po column="16" line="2135" message="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2135:16&#10;pre_STrees_GetData(stree, 13)&#10;" number="463" object="" resource="ADTSL" toString="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2135:16&#10;pre_STrees_GetData(stree, 13)&#10;"/>
<po column="15" line="2137" message="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2137:15&#10;pre_STrees_SetCurrentNode(stree, STrees_MkNode('z', 13))&#10;" number="464" object="" resource="ADTSL" toString="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2137:15&#10;pre_STrees_SetCurrentNode(stree, STrees_MkNode('z', 13))&#10;"/>
<po column="15" line="2142" message="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2142:15&#10;pre_STrees_StoreCurrentData(stree, 'Z')&#10;" number="465" object="" resource="ADTSL" toString="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2142:15&#10;pre_STrees_StoreCurrentData(stree, 'Z')&#10;"/>
<po column="16" line="2143" message="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2143:16&#10;pre_STrees_GetCurrentData(stree)&#10;" number="466" object="" resource="ADTSL" toString="TestSTrees: function apply obligation in 'DEFAULT' (src\test\resources\modules\ADTSL) at line 2143:16&#10;pre_STrees_GetCurrentData(stree)&#10;"/>
</result>
</testResult>
