//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public abstract class IOmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp


// ***** VDMTOOLS START Name=vdm_init_IOmlVisitor KEEP=NO
  private void vdm_init_IOmlVisitor () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_IOmlVisitor


// ***** VDMTOOLS START Name=IOmlVisitor KEEP=NO
  public IOmlVisitor () throws CGException {
    vdm_init_IOmlVisitor();
  }
// ***** VDMTOOLS END Name=IOmlVisitor


// ***** VDMTOOLS START Name=visitDocument#1|IOmlDocument KEEP=NO
  abstract public void visitDocument (final IOmlDocument var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDocument#1|IOmlDocument


// ***** VDMTOOLS START Name=visitLexem#1|IOmlLexem KEEP=NO
  abstract public void visitLexem (final IOmlLexem var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLexem#1|IOmlLexem


// ***** VDMTOOLS START Name=visitIsofclassExpression#1|IOmlIsofclassExpression KEEP=NO
  abstract public void visitIsofclassExpression (final IOmlIsofclassExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIsofclassExpression#1|IOmlIsofclassExpression


// ***** VDMTOOLS START Name=visitTrapStatement#1|IOmlTrapStatement KEEP=NO
  abstract public void visitTrapStatement (final IOmlTrapStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTrapStatement#1|IOmlTrapStatement


// ***** VDMTOOLS START Name=visitCasesStatement#1|IOmlCasesStatement KEEP=NO
  abstract public void visitCasesStatement (final IOmlCasesStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCasesStatement#1|IOmlCasesStatement


// ***** VDMTOOLS START Name=visitFunctionBody#1|IOmlFunctionBody KEEP=NO
  abstract public void visitFunctionBody (final IOmlFunctionBody var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionBody#1|IOmlFunctionBody


// ***** VDMTOOLS START Name=visitClass#1|IOmlClass KEEP=NO
  abstract public void visitClass (final IOmlClass var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClass#1|IOmlClass


// ***** VDMTOOLS START Name=visitSpecifications#1|IOmlSpecifications KEEP=NO
  abstract public void visitSpecifications (final IOmlSpecifications var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSpecifications#1|IOmlSpecifications


// ***** VDMTOOLS START Name=visitSeq0Type#1|IOmlSeq0Type KEEP=NO
  abstract public void visitSeq0Type (final IOmlSeq0Type var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSeq0Type#1|IOmlSeq0Type


// ***** VDMTOOLS START Name=visitBinaryExpression#1|IOmlBinaryExpression KEEP=NO
  abstract public void visitBinaryExpression (final IOmlBinaryExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBinaryExpression#1|IOmlBinaryExpression


// ***** VDMTOOLS START Name=visitValueShape#1|IOmlValueShape KEEP=NO
  abstract public void visitValueShape (final IOmlValueShape var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitValueShape#1|IOmlValueShape


// ***** VDMTOOLS START Name=visitMutexPredicate#1|IOmlMutexPredicate KEEP=NO
  abstract public void visitMutexPredicate (final IOmlMutexPredicate var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMutexPredicate#1|IOmlMutexPredicate


// ***** VDMTOOLS START Name=visitOperationDefinitions#1|IOmlOperationDefinitions KEEP=NO
  abstract public void visitOperationDefinitions (final IOmlOperationDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationDefinitions#1|IOmlOperationDefinitions


// ***** VDMTOOLS START Name=visitFieldSelect#1|IOmlFieldSelect KEEP=NO
  abstract public void visitFieldSelect (final IOmlFieldSelect var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFieldSelect#1|IOmlFieldSelect


// ***** VDMTOOLS START Name=visitReturnStatement#1|IOmlReturnStatement KEEP=NO
  abstract public void visitReturnStatement (final IOmlReturnStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitReturnStatement#1|IOmlReturnStatement


// ***** VDMTOOLS START Name=visitActExpression#1|IOmlActExpression KEEP=NO
  abstract public void visitActExpression (final IOmlActExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitActExpression#1|IOmlActExpression


// ***** VDMTOOLS START Name=visitInstanceVariableDefinitions#1|IOmlInstanceVariableDefinitions KEEP=NO
  abstract public void visitInstanceVariableDefinitions (final IOmlInstanceVariableDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInstanceVariableDefinitions#1|IOmlInstanceVariableDefinitions


// ***** VDMTOOLS START Name=visitIntType#1|IOmlIntType KEEP=NO
  abstract public void visitIntType (final IOmlIntType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIntType#1|IOmlIntType


// ***** VDMTOOLS START Name=visitThreadIdExpression#1|IOmlThreadIdExpression KEEP=NO
  abstract public void visitThreadIdExpression (final IOmlThreadIdExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitThreadIdExpression#1|IOmlThreadIdExpression


// ***** VDMTOOLS START Name=visitLetStatement#1|IOmlLetStatement KEEP=NO
  abstract public void visitLetStatement (final IOmlLetStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLetStatement#1|IOmlLetStatement


// ***** VDMTOOLS START Name=visitFinExpression#1|IOmlFinExpression KEEP=NO
  abstract public void visitFinExpression (final IOmlFinExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFinExpression#1|IOmlFinExpression


// ***** VDMTOOLS START Name=visitDefStatement#1|IOmlDefStatement KEEP=NO
  abstract public void visitDefStatement (final IOmlDefStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDefStatement#1|IOmlDefStatement


// ***** VDMTOOLS START Name=visitSequenceForLoop#1|IOmlSequenceForLoop KEEP=NO
  abstract public void visitSequenceForLoop (final IOmlSequenceForLoop var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSequenceForLoop#1|IOmlSequenceForLoop


// ***** VDMTOOLS START Name=visitTrapDefinition#1|IOmlTrapDefinition KEEP=NO
  abstract public void visitTrapDefinition (final IOmlTrapDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTrapDefinition#1|IOmlTrapDefinition


// ***** VDMTOOLS START Name=visitFunctionDefinition#1|IOmlFunctionDefinition KEEP=NO
  abstract public void visitFunctionDefinition (final IOmlFunctionDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionDefinition#1|IOmlFunctionDefinition


// ***** VDMTOOLS START Name=visitSamebaseclassExpression#1|IOmlSamebaseclassExpression KEEP=NO
  abstract public void visitSamebaseclassExpression (final IOmlSamebaseclassExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSamebaseclassExpression#1|IOmlSamebaseclassExpression


// ***** VDMTOOLS START Name=visitSkipStatement#1|IOmlSkipStatement KEEP=NO
  abstract public void visitSkipStatement (final IOmlSkipStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSkipStatement#1|IOmlSkipStatement


// ***** VDMTOOLS START Name=visitPatternIdentifier#1|IOmlPatternIdentifier KEEP=NO
  abstract public void visitPatternIdentifier (final IOmlPatternIdentifier var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPatternIdentifier#1|IOmlPatternIdentifier


// ***** VDMTOOLS START Name=visitCompositeType#1|IOmlCompositeType KEEP=NO
  abstract public void visitCompositeType (final IOmlCompositeType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCompositeType#1|IOmlCompositeType


// ***** VDMTOOLS START Name=visitNondeterministicStatement#1|IOmlNondeterministicStatement KEEP=NO
  abstract public void visitNondeterministicStatement (final IOmlNondeterministicStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNondeterministicStatement#1|IOmlNondeterministicStatement


// ***** VDMTOOLS START Name=visitExceptions#1|IOmlExceptions KEEP=NO
  abstract public void visitExceptions (final IOmlExceptions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExceptions#1|IOmlExceptions


// ***** VDMTOOLS START Name=visitNumericLiteral#1|IOmlNumericLiteral KEEP=NO
  abstract public void visitNumericLiteral (final IOmlNumericLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNumericLiteral#1|IOmlNumericLiteral


// ***** VDMTOOLS START Name=visitNilLiteral#1|IOmlNilLiteral KEEP=NO
  abstract public void visitNilLiteral (final IOmlNilLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNilLiteral#1|IOmlNilLiteral


// ***** VDMTOOLS START Name=visitMapEnumeration#1|IOmlMapEnumeration KEEP=NO
  abstract public void visitMapEnumeration (final IOmlMapEnumeration var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMapEnumeration#1|IOmlMapEnumeration


// ***** VDMTOOLS START Name=visitCasesStatementAlternative#1|IOmlCasesStatementAlternative KEEP=NO
  abstract public void visitCasesStatementAlternative (final IOmlCasesStatementAlternative var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCasesStatementAlternative#1|IOmlCasesStatementAlternative


// ***** VDMTOOLS START Name=visitLetBeExpression#1|IOmlLetBeExpression KEEP=NO
  abstract public void visitLetBeExpression (final IOmlLetBeExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLetBeExpression#1|IOmlLetBeExpression


// ***** VDMTOOLS START Name=visitFunctionTypeInstantiation#1|IOmlFunctionTypeInstantiation KEEP=NO
  abstract public void visitFunctionTypeInstantiation (final IOmlFunctionTypeInstantiation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionTypeInstantiation#1|IOmlFunctionTypeInstantiation


// ***** VDMTOOLS START Name=visitIndexForLoop#1|IOmlIndexForLoop KEEP=NO
  abstract public void visitIndexForLoop (final IOmlIndexForLoop var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIndexForLoop#1|IOmlIndexForLoop


// ***** VDMTOOLS START Name=visitPeriodicThread#1|IOmlPeriodicThread KEEP=NO
  abstract public void visitPeriodicThread (final IOmlPeriodicThread var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPeriodicThread#1|IOmlPeriodicThread


// ***** VDMTOOLS START Name=visitQuoteLiteral#1|IOmlQuoteLiteral KEEP=NO
  abstract public void visitQuoteLiteral (final IOmlQuoteLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitQuoteLiteral#1|IOmlQuoteLiteral


// ***** VDMTOOLS START Name=visitOldName#1|IOmlOldName KEEP=NO
  abstract public void visitOldName (final IOmlOldName var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOldName#1|IOmlOldName


// ***** VDMTOOLS START Name=visitMuExpression#1|IOmlMuExpression KEEP=NO
  abstract public void visitMuExpression (final IOmlMuExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMuExpression#1|IOmlMuExpression


// ***** VDMTOOLS START Name=visitForAllExpression#1|IOmlForAllExpression KEEP=NO
  abstract public void visitForAllExpression (final IOmlForAllExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitForAllExpression#1|IOmlForAllExpression


// ***** VDMTOOLS START Name=visitPermissionPredicate#1|IOmlPermissionPredicate KEEP=NO
  abstract public void visitPermissionPredicate (final IOmlPermissionPredicate var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPermissionPredicate#1|IOmlPermissionPredicate


// ***** VDMTOOLS START Name=visitPartialFunctionType#1|IOmlPartialFunctionType KEEP=NO
  abstract public void visitPartialFunctionType (final IOmlPartialFunctionType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPartialFunctionType#1|IOmlPartialFunctionType


// ***** VDMTOOLS START Name=visitProductType#1|IOmlProductType KEEP=NO
  abstract public void visitProductType (final IOmlProductType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitProductType#1|IOmlProductType


// ***** VDMTOOLS START Name=visitDefExpression#1|IOmlDefExpression KEEP=NO
  abstract public void visitDefExpression (final IOmlDefExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDefExpression#1|IOmlDefExpression


// ***** VDMTOOLS START Name=visitTimeExpression#1|IOmlTimeExpression KEEP=NO
  abstract public void visitTimeExpression (final IOmlTimeExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTimeExpression#1|IOmlTimeExpression


// ***** VDMTOOLS START Name=visitTokenExpression#1|IOmlTokenExpression KEEP=NO
  abstract public void visitTokenExpression (final IOmlTokenExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTokenExpression#1|IOmlTokenExpression


// ***** VDMTOOLS START Name=visitLetBeStatement#1|IOmlLetBeStatement KEEP=NO
  abstract public void visitLetBeStatement (final IOmlLetBeStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLetBeStatement#1|IOmlLetBeStatement


// ***** VDMTOOLS START Name=visitObjectFieldReference#1|IOmlObjectFieldReference KEEP=NO
  abstract public void visitObjectFieldReference (final IOmlObjectFieldReference var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitObjectFieldReference#1|IOmlObjectFieldReference


// ***** VDMTOOLS START Name=visitError#1|IOmlError KEEP=NO
  abstract public void visitError (final IOmlError var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitError#1|IOmlError


// ***** VDMTOOLS START Name=visitWaitingExpression#1|IOmlWaitingExpression KEEP=NO
  abstract public void visitWaitingExpression (final IOmlWaitingExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitWaitingExpression#1|IOmlWaitingExpression


// ***** VDMTOOLS START Name=visitRealLiteral#1|IOmlRealLiteral KEEP=NO
  abstract public void visitRealLiteral (final IOmlRealLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRealLiteral#1|IOmlRealLiteral


// ***** VDMTOOLS START Name=visitUnaryExpression#1|IOmlUnaryExpression KEEP=NO
  abstract public void visitUnaryExpression (final IOmlUnaryExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUnaryExpression#1|IOmlUnaryExpression


// ***** VDMTOOLS START Name=visitTypeDefinition#1|IOmlTypeDefinition KEEP=NO
  abstract public void visitTypeDefinition (final IOmlTypeDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeDefinition#1|IOmlTypeDefinition


// ***** VDMTOOLS START Name=visitRealType#1|IOmlRealType KEEP=NO
  abstract public void visitRealType (final IOmlRealType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRealType#1|IOmlRealType


// ***** VDMTOOLS START Name=visitSetEnumeration#1|IOmlSetEnumeration KEEP=NO
  abstract public void visitSetEnumeration (final IOmlSetEnumeration var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetEnumeration#1|IOmlSetEnumeration


// ***** VDMTOOLS START Name=visitTuplePattern#1|IOmlTuplePattern KEEP=NO
  abstract public void visitTuplePattern (final IOmlTuplePattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTuplePattern#1|IOmlTuplePattern


// ***** VDMTOOLS START Name=visitRatType#1|IOmlRatType KEEP=NO
  abstract public void visitRatType (final IOmlRatType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRatType#1|IOmlRatType


// ***** VDMTOOLS START Name=visitBracketedType#1|IOmlBracketedType KEEP=NO
  abstract public void visitBracketedType (final IOmlBracketedType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBracketedType#1|IOmlBracketedType


// ***** VDMTOOLS START Name=visitTypeDefinitions#1|IOmlTypeDefinitions KEEP=NO
  abstract public void visitTypeDefinitions (final IOmlTypeDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeDefinitions#1|IOmlTypeDefinitions


// ***** VDMTOOLS START Name=visitIotaExpression#1|IOmlIotaExpression KEEP=NO
  abstract public void visitIotaExpression (final IOmlIotaExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIotaExpression#1|IOmlIotaExpression


// ***** VDMTOOLS START Name=visitTextLiteral#1|IOmlTextLiteral KEEP=NO
  abstract public void visitTextLiteral (final IOmlTextLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTextLiteral#1|IOmlTextLiteral


// ***** VDMTOOLS START Name=visitThreadDefinition#1|IOmlThreadDefinition KEEP=NO
  abstract public void visitThreadDefinition (final IOmlThreadDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitThreadDefinition#1|IOmlThreadDefinition


// ***** VDMTOOLS START Name=visitSameclassExpression#1|IOmlSameclassExpression KEEP=NO
  abstract public void visitSameclassExpression (final IOmlSameclassExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSameclassExpression#1|IOmlSameclassExpression


// ***** VDMTOOLS START Name=visitName#1|IOmlName KEEP=NO
  abstract public void visitName (final IOmlName var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitName#1|IOmlName


// ***** VDMTOOLS START Name=visitAtomicStatement#1|IOmlAtomicStatement KEEP=NO
  abstract public void visitAtomicStatement (final IOmlAtomicStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAtomicStatement#1|IOmlAtomicStatement


// ***** VDMTOOLS START Name=visitOperationTrailer#1|IOmlOperationTrailer KEEP=NO
  abstract public void visitOperationTrailer (final IOmlOperationTrailer var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationTrailer#1|IOmlOperationTrailer


// ***** VDMTOOLS START Name=visitFunctionTypeSelect#1|IOmlFunctionTypeSelect KEEP=NO
  abstract public void visitFunctionTypeSelect (final IOmlFunctionTypeSelect var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionTypeSelect#1|IOmlFunctionTypeSelect


// ***** VDMTOOLS START Name=visitInheritanceClause#1|IOmlInheritanceClause KEEP=NO
  abstract public void visitInheritanceClause (final IOmlInheritanceClause var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInheritanceClause#1|IOmlInheritanceClause


// ***** VDMTOOLS START Name=visitBooleanLiteral#1|IOmlBooleanLiteral KEEP=NO
  abstract public void visitBooleanLiteral (final IOmlBooleanLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBooleanLiteral#1|IOmlBooleanLiteral


// ***** VDMTOOLS START Name=visitSetEnumPattern#1|IOmlSetEnumPattern KEEP=NO
  abstract public void visitSetEnumPattern (final IOmlSetEnumPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetEnumPattern#1|IOmlSetEnumPattern


// ***** VDMTOOLS START Name=visitExitStatement#1|IOmlExitStatement KEEP=NO
  abstract public void visitExitStatement (final IOmlExitStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExitStatement#1|IOmlExitStatement


// ***** VDMTOOLS START Name=visitElseIfExpression#1|IOmlElseIfExpression KEEP=NO
  abstract public void visitElseIfExpression (final IOmlElseIfExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitElseIfExpression#1|IOmlElseIfExpression


// ***** VDMTOOLS START Name=visitMaplet#1|IOmlMaplet KEEP=NO
  abstract public void visitMaplet (final IOmlMaplet var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMaplet#1|IOmlMaplet


// ***** VDMTOOLS START Name=visitField#1|IOmlField KEEP=NO
  abstract public void visitField (final IOmlField var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitField#1|IOmlField


// ***** VDMTOOLS START Name=visitSetUnionPattern#1|IOmlSetUnionPattern KEEP=NO
  abstract public void visitSetUnionPattern (final IOmlSetUnionPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetUnionPattern#1|IOmlSetUnionPattern


// ***** VDMTOOLS START Name=visitIdentifierTypePair#1|IOmlIdentifierTypePair KEEP=NO
  abstract public void visitIdentifierTypePair (final IOmlIdentifierTypePair var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIdentifierTypePair#1|IOmlIdentifierTypePair


// ***** VDMTOOLS START Name=visitQuoteType#1|IOmlQuoteType KEEP=NO
  abstract public void visitQuoteType (final IOmlQuoteType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitQuoteType#1|IOmlQuoteType


// ***** VDMTOOLS START Name=visitInjectiveMapType#1|IOmlInjectiveMapType KEEP=NO
  abstract public void visitInjectiveMapType (final IOmlInjectiveMapType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInjectiveMapType#1|IOmlInjectiveMapType


// ***** VDMTOOLS START Name=visitClassTypeInstantiation#1|IOmlClassTypeInstantiation KEEP=NO
  abstract public void visitClassTypeInstantiation (final IOmlClassTypeInstantiation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClassTypeInstantiation#1|IOmlClassTypeInstantiation


// ***** VDMTOOLS START Name=visitSymbolicLiteralPattern#1|IOmlSymbolicLiteralPattern KEEP=NO
  abstract public void visitSymbolicLiteralPattern (final IOmlSymbolicLiteralPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSymbolicLiteralPattern#1|IOmlSymbolicLiteralPattern


// ***** VDMTOOLS START Name=visitMatchValue#1|IOmlMatchValue KEEP=NO
  abstract public void visitMatchValue (final IOmlMatchValue var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMatchValue#1|IOmlMatchValue


// ***** VDMTOOLS START Name=visitCyclesStatement#1|IOmlCyclesStatement KEEP=NO
  abstract public void visitCyclesStatement (final IOmlCyclesStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCyclesStatement#1|IOmlCyclesStatement


// ***** VDMTOOLS START Name=visitTypeName#1|IOmlTypeName KEEP=NO
  abstract public void visitTypeName (final IOmlTypeName var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeName#1|IOmlTypeName


// ***** VDMTOOLS START Name=visitIfStatement#1|IOmlIfStatement KEEP=NO
  abstract public void visitIfStatement (final IOmlIfStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIfStatement#1|IOmlIfStatement


// ***** VDMTOOLS START Name=visitFunctionDefinitions#1|IOmlFunctionDefinitions KEEP=NO
  abstract public void visitFunctionDefinitions (final IOmlFunctionDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionDefinitions#1|IOmlFunctionDefinitions


// ***** VDMTOOLS START Name=visitSubsequenceExpression#1|IOmlSubsequenceExpression KEEP=NO
  abstract public void visitSubsequenceExpression (final IOmlSubsequenceExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSubsequenceExpression#1|IOmlSubsequenceExpression


// ***** VDMTOOLS START Name=visitSequenceEnumeration#1|IOmlSequenceEnumeration KEEP=NO
  abstract public void visitSequenceEnumeration (final IOmlSequenceEnumeration var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSequenceEnumeration#1|IOmlSequenceEnumeration


// ***** VDMTOOLS START Name=visitParameter#1|IOmlParameter KEEP=NO
  abstract public void visitParameter (final IOmlParameter var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitParameter#1|IOmlParameter


// ***** VDMTOOLS START Name=visitInstanceVariable#1|IOmlInstanceVariable KEEP=NO
  abstract public void visitInstanceVariable (final IOmlInstanceVariable var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInstanceVariable#1|IOmlInstanceVariable


// ***** VDMTOOLS START Name=visitOperationDefinition#1|IOmlOperationDefinition KEEP=NO
  abstract public void visitOperationDefinition (final IOmlOperationDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationDefinition#1|IOmlOperationDefinition


// ***** VDMTOOLS START Name=visitAssignmentDefinition#1|IOmlAssignmentDefinition KEEP=NO
  abstract public void visitAssignmentDefinition (final IOmlAssignmentDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAssignmentDefinition#1|IOmlAssignmentDefinition


// ***** VDMTOOLS START Name=visitSynchronizationDefinitions#1|IOmlSynchronizationDefinitions KEEP=NO
  abstract public void visitSynchronizationDefinitions (final IOmlSynchronizationDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSynchronizationDefinitions#1|IOmlSynchronizationDefinitions


// ***** VDMTOOLS START Name=visitCasesExpressionAlternative#1|IOmlCasesExpressionAlternative KEEP=NO
  abstract public void visitCasesExpressionAlternative (final IOmlCasesExpressionAlternative var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCasesExpressionAlternative#1|IOmlCasesExpressionAlternative


// ***** VDMTOOLS START Name=visitElseIfStatement#1|IOmlElseIfStatement KEEP=NO
  abstract public void visitElseIfStatement (final IOmlElseIfStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitElseIfStatement#1|IOmlElseIfStatement


// ***** VDMTOOLS START Name=visitSetForLoop#1|IOmlSetForLoop KEEP=NO
  abstract public void visitSetForLoop (final IOmlSetForLoop var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetForLoop#1|IOmlSetForLoop


// ***** VDMTOOLS START Name=visitDurationStatement#1|IOmlDurationStatement KEEP=NO
  abstract public void visitDurationStatement (final IOmlDurationStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDurationStatement#1|IOmlDurationStatement


// ***** VDMTOOLS START Name=visitVarInformation#1|IOmlVarInformation KEEP=NO
  abstract public void visitVarInformation (final IOmlVarInformation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitVarInformation#1|IOmlVarInformation


// ***** VDMTOOLS START Name=visitLetExpression#1|IOmlLetExpression KEEP=NO
  abstract public void visitLetExpression (final IOmlLetExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLetExpression#1|IOmlLetExpression


// ***** VDMTOOLS START Name=visitProcedureThread#1|IOmlProcedureThread KEEP=NO
  abstract public void visitProcedureThread (final IOmlProcedureThread var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitProcedureThread#1|IOmlProcedureThread


// ***** VDMTOOLS START Name=visitExplicitOperation#1|IOmlExplicitOperation KEEP=NO
  abstract public void visitExplicitOperation (final IOmlExplicitOperation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExplicitOperation#1|IOmlExplicitOperation


// ***** VDMTOOLS START Name=visitOperationBody#1|IOmlOperationBody KEEP=NO
  abstract public void visitOperationBody (final IOmlOperationBody var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationBody#1|IOmlOperationBody


// ***** VDMTOOLS START Name=visitIsofbaseclassExpression#1|IOmlIsofbaseclassExpression KEEP=NO
  abstract public void visitIsofbaseclassExpression (final IOmlIsofbaseclassExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIsofbaseclassExpression#1|IOmlIsofbaseclassExpression


// ***** VDMTOOLS START Name=visitSequenceComprehension#1|IOmlSequenceComprehension KEEP=NO
  abstract public void visitSequenceComprehension (final IOmlSequenceComprehension var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSequenceComprehension#1|IOmlSequenceComprehension


// ***** VDMTOOLS START Name=visitTypeBind#1|IOmlTypeBind KEEP=NO
  abstract public void visitTypeBind (final IOmlTypeBind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeBind#1|IOmlTypeBind


// ***** VDMTOOLS START Name=visitInstanceVariableInvariant#1|IOmlInstanceVariableInvariant KEEP=NO
  abstract public void visitInstanceVariableInvariant (final IOmlInstanceVariableInvariant var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInstanceVariableInvariant#1|IOmlInstanceVariableInvariant


// ***** VDMTOOLS START Name=visitTypelessExplicitFunction#1|IOmlTypelessExplicitFunction KEEP=NO
  abstract public void visitTypelessExplicitFunction (final IOmlTypelessExplicitFunction var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypelessExplicitFunction#1|IOmlTypelessExplicitFunction


// ***** VDMTOOLS START Name=visitUndefinedExpression#1|IOmlUndefinedExpression KEEP=NO
  abstract public void visitUndefinedExpression (final IOmlUndefinedExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUndefinedExpression#1|IOmlUndefinedExpression


// ***** VDMTOOLS START Name=visitEqualsDefinition#1|IOmlEqualsDefinition KEEP=NO
  abstract public void visitEqualsDefinition (final IOmlEqualsDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitEqualsDefinition#1|IOmlEqualsDefinition


// ***** VDMTOOLS START Name=visitAssignStatement#1|IOmlAssignStatement KEEP=NO
  abstract public void visitAssignStatement (final IOmlAssignStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAssignStatement#1|IOmlAssignStatement


// ***** VDMTOOLS START Name=visitErrorStatement#1|IOmlErrorStatement KEEP=NO
  abstract public void visitErrorStatement (final IOmlErrorStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitErrorStatement#1|IOmlErrorStatement


// ***** VDMTOOLS START Name=visitCallStatement#1|IOmlCallStatement KEEP=NO
  abstract public void visitCallStatement (final IOmlCallStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCallStatement#1|IOmlCallStatement


// ***** VDMTOOLS START Name=visitFieldReference#1|IOmlFieldReference KEEP=NO
  abstract public void visitFieldReference (final IOmlFieldReference var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFieldReference#1|IOmlFieldReference


// ***** VDMTOOLS START Name=visitMapComprehension#1|IOmlMapComprehension KEEP=NO
  abstract public void visitMapComprehension (final IOmlMapComprehension var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMapComprehension#1|IOmlMapComprehension


// ***** VDMTOOLS START Name=visitNat1Type#1|IOmlNat1Type KEEP=NO
  abstract public void visitNat1Type (final IOmlNat1Type var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNat1Type#1|IOmlNat1Type


// ***** VDMTOOLS START Name=visitExtendedExplicitOperation#1|IOmlExtendedExplicitOperation KEEP=NO
  abstract public void visitExtendedExplicitOperation (final IOmlExtendedExplicitOperation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExtendedExplicitOperation#1|IOmlExtendedExplicitOperation


// ***** VDMTOOLS START Name=visitPreconditionExpression#1|IOmlPreconditionExpression KEEP=NO
  abstract public void visitPreconditionExpression (final IOmlPreconditionExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPreconditionExpression#1|IOmlPreconditionExpression


// ***** VDMTOOLS START Name=visitSeqConcPattern#1|IOmlSeqConcPattern KEEP=NO
  abstract public void visitSeqConcPattern (final IOmlSeqConcPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSeqConcPattern#1|IOmlSeqConcPattern


// ***** VDMTOOLS START Name=visitExtendedExplicitFunction#1|IOmlExtendedExplicitFunction KEEP=NO
  abstract public void visitExtendedExplicitFunction (final IOmlExtendedExplicitFunction var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExtendedExplicitFunction#1|IOmlExtendedExplicitFunction


// ***** VDMTOOLS START Name=visitStateDesignatorName#1|IOmlStateDesignatorName KEEP=NO
  abstract public void visitStateDesignatorName (final IOmlStateDesignatorName var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStateDesignatorName#1|IOmlStateDesignatorName


// ***** VDMTOOLS START Name=visitAlwaysStatement#1|IOmlAlwaysStatement KEEP=NO
  abstract public void visitAlwaysStatement (final IOmlAlwaysStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAlwaysStatement#1|IOmlAlwaysStatement


// ***** VDMTOOLS START Name=visitImplicitFunction#1|IOmlImplicitFunction KEEP=NO
  abstract public void visitImplicitFunction (final IOmlImplicitFunction var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitImplicitFunction#1|IOmlImplicitFunction


// ***** VDMTOOLS START Name=visitRecursiveTrapStatement#1|IOmlRecursiveTrapStatement KEEP=NO
  abstract public void visitRecursiveTrapStatement (final IOmlRecursiveTrapStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRecursiveTrapStatement#1|IOmlRecursiveTrapStatement


// ***** VDMTOOLS START Name=visitTupleConstructor#1|IOmlTupleConstructor KEEP=NO
  abstract public void visitTupleConstructor (final IOmlTupleConstructor var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTupleConstructor#1|IOmlTupleConstructor


// ***** VDMTOOLS START Name=visitLambdaExpression#1|IOmlLambdaExpression KEEP=NO
  abstract public void visitLambdaExpression (final IOmlLambdaExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLambdaExpression#1|IOmlLambdaExpression


// ***** VDMTOOLS START Name=visitExternals#1|IOmlExternals KEEP=NO
  abstract public void visitExternals (final IOmlExternals var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExternals#1|IOmlExternals


// ***** VDMTOOLS START Name=visitEmptyType#1|IOmlEmptyType KEEP=NO
  abstract public void visitEmptyType (final IOmlEmptyType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitEmptyType#1|IOmlEmptyType


// ***** VDMTOOLS START Name=visitTypeVariable#1|IOmlTypeVariable KEEP=NO
  abstract public void visitTypeVariable (final IOmlTypeVariable var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeVariable#1|IOmlTypeVariable


// ***** VDMTOOLS START Name=visitObjectDesignatorExpression#1|IOmlObjectDesignatorExpression KEEP=NO
  abstract public void visitObjectDesignatorExpression (final IOmlObjectDesignatorExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitObjectDesignatorExpression#1|IOmlObjectDesignatorExpression


// ***** VDMTOOLS START Name=visitSetRangeExpression#1|IOmlSetRangeExpression KEEP=NO
  abstract public void visitSetRangeExpression (final IOmlSetRangeExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetRangeExpression#1|IOmlSetRangeExpression


// ***** VDMTOOLS START Name=visitIfExpression#1|IOmlIfExpression KEEP=NO
  abstract public void visitIfExpression (final IOmlIfExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIfExpression#1|IOmlIfExpression


// ***** VDMTOOLS START Name=visitComplexType#1|IOmlComplexType KEEP=NO
  abstract public void visitComplexType (final IOmlComplexType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitComplexType#1|IOmlComplexType


// ***** VDMTOOLS START Name=visitSetType#1|IOmlSetType KEEP=NO
  abstract public void visitSetType (final IOmlSetType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetType#1|IOmlSetType


// ***** VDMTOOLS START Name=visitValueDefinition#1|IOmlValueDefinition KEEP=NO
  abstract public void visitValueDefinition (final IOmlValueDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitValueDefinition#1|IOmlValueDefinition


// ***** VDMTOOLS START Name=visitDontCarePattern#1|IOmlDontCarePattern KEEP=NO
  abstract public void visitDontCarePattern (final IOmlDontCarePattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDontCarePattern#1|IOmlDontCarePattern


// ***** VDMTOOLS START Name=visitApplyExpression#1|IOmlApplyExpression KEEP=NO
  abstract public void visitApplyExpression (final IOmlApplyExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitApplyExpression#1|IOmlApplyExpression


// ***** VDMTOOLS START Name=visitFunctionTrailer#1|IOmlFunctionTrailer KEEP=NO
  abstract public void visitFunctionTrailer (final IOmlFunctionTrailer var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionTrailer#1|IOmlFunctionTrailer


// ***** VDMTOOLS START Name=visitExistsUniqueExpression#1|IOmlExistsUniqueExpression KEEP=NO
  abstract public void visitExistsUniqueExpression (final IOmlExistsUniqueExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExistsUniqueExpression#1|IOmlExistsUniqueExpression


// ***** VDMTOOLS START Name=visitNatType#1|IOmlNatType KEEP=NO
  abstract public void visitNatType (final IOmlNatType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNatType#1|IOmlNatType


// ***** VDMTOOLS START Name=visitRecordConstructor#1|IOmlRecordConstructor KEEP=NO
  abstract public void visitRecordConstructor (final IOmlRecordConstructor var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRecordConstructor#1|IOmlRecordConstructor


// ***** VDMTOOLS START Name=visitOptionalType#1|IOmlOptionalType KEEP=NO
  abstract public void visitOptionalType (final IOmlOptionalType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOptionalType#1|IOmlOptionalType


// ***** VDMTOOLS START Name=visitExplicitFunction#1|IOmlExplicitFunction KEEP=NO
  abstract public void visitExplicitFunction (final IOmlExplicitFunction var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExplicitFunction#1|IOmlExplicitFunction


// ***** VDMTOOLS START Name=visitTokenType#1|IOmlTokenType KEEP=NO
  abstract public void visitTokenType (final IOmlTokenType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTokenType#1|IOmlTokenType


// ***** VDMTOOLS START Name=visitWhileLoop#1|IOmlWhileLoop KEEP=NO
  abstract public void visitWhileLoop (final IOmlWhileLoop var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitWhileLoop#1|IOmlWhileLoop


// ***** VDMTOOLS START Name=visitUnionType#1|IOmlUnionType KEEP=NO
  abstract public void visitUnionType (final IOmlUnionType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUnionType#1|IOmlUnionType


// ***** VDMTOOLS START Name=visitInvariant#1|IOmlInvariant KEEP=NO
  abstract public void visitInvariant (final IOmlInvariant var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInvariant#1|IOmlInvariant


// ***** VDMTOOLS START Name=visitPatternBindExpression#1|IOmlPatternBindExpression KEEP=NO
  abstract public void visitPatternBindExpression (final IOmlPatternBindExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPatternBindExpression#1|IOmlPatternBindExpression


// ***** VDMTOOLS START Name=visitRecordModifier#1|IOmlRecordModifier KEEP=NO
  abstract public void visitRecordModifier (final IOmlRecordModifier var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRecordModifier#1|IOmlRecordModifier


// ***** VDMTOOLS START Name=visitSeq1Type#1|IOmlSeq1Type KEEP=NO
  abstract public void visitSeq1Type (final IOmlSeq1Type var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSeq1Type#1|IOmlSeq1Type


// ***** VDMTOOLS START Name=visitCharType#1|IOmlCharType KEEP=NO
  abstract public void visitCharType (final IOmlCharType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCharType#1|IOmlCharType


// ***** VDMTOOLS START Name=visitOperationType#1|IOmlOperationType KEEP=NO
  abstract public void visitOperationType (final IOmlOperationType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationType#1|IOmlOperationType


// ***** VDMTOOLS START Name=visitCharacterLiteral#1|IOmlCharacterLiteral KEEP=NO
  abstract public void visitCharacterLiteral (final IOmlCharacterLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCharacterLiteral#1|IOmlCharacterLiteral


// ***** VDMTOOLS START Name=visitSimpleType#1|IOmlSimpleType KEEP=NO
  abstract public void visitSimpleType (final IOmlSimpleType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSimpleType#1|IOmlSimpleType


// ***** VDMTOOLS START Name=visitSetBind#1|IOmlSetBind KEEP=NO
  abstract public void visitSetBind (final IOmlSetBind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetBind#1|IOmlSetBind


// ***** VDMTOOLS START Name=visitValueDefinitions#1|IOmlValueDefinitions KEEP=NO
  abstract public void visitValueDefinitions (final IOmlValueDefinitions var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitValueDefinitions#1|IOmlValueDefinitions


// ***** VDMTOOLS START Name=visitGeneralMapType#1|IOmlGeneralMapType KEEP=NO
  abstract public void visitGeneralMapType (final IOmlGeneralMapType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitGeneralMapType#1|IOmlGeneralMapType


// ***** VDMTOOLS START Name=visitDclStatement#1|IOmlDclStatement KEEP=NO
  abstract public void visitDclStatement (final IOmlDclStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDclStatement#1|IOmlDclStatement


// ***** VDMTOOLS START Name=visitSeqEnumPattern#1|IOmlSeqEnumPattern KEEP=NO
  abstract public void visitSeqEnumPattern (final IOmlSeqEnumPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSeqEnumPattern#1|IOmlSeqEnumPattern


// ***** VDMTOOLS START Name=visitBracketedExpression#1|IOmlBracketedExpression KEEP=NO
  abstract public void visitBracketedExpression (final IOmlBracketedExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBracketedExpression#1|IOmlBracketedExpression


// ***** VDMTOOLS START Name=visitAccessDefinition#1|IOmlAccessDefinition KEEP=NO
  abstract public void visitAccessDefinition (final IOmlAccessDefinition var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAccessDefinition#1|IOmlAccessDefinition


// ***** VDMTOOLS START Name=visitActiveExpression#1|IOmlActiveExpression KEEP=NO
  abstract public void visitActiveExpression (final IOmlActiveExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitActiveExpression#1|IOmlActiveExpression


// ***** VDMTOOLS START Name=visitNewExpression#1|IOmlNewExpression KEEP=NO
  abstract public void visitNewExpression (final IOmlNewExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNewExpression#1|IOmlNewExpression


// ***** VDMTOOLS START Name=visitBlockStatement#1|IOmlBlockStatement KEEP=NO
  abstract public void visitBlockStatement (final IOmlBlockStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBlockStatement#1|IOmlBlockStatement


// ***** VDMTOOLS START Name=visitImplicitOperation#1|IOmlImplicitOperation KEEP=NO
  abstract public void visitImplicitOperation (final IOmlImplicitOperation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitImplicitOperation#1|IOmlImplicitOperation


// ***** VDMTOOLS START Name=visitMapOrSequenceReference#1|IOmlMapOrSequenceReference KEEP=NO
  abstract public void visitMapOrSequenceReference (final IOmlMapOrSequenceReference var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMapOrSequenceReference#1|IOmlMapOrSequenceReference


// ***** VDMTOOLS START Name=visitObjectApply#1|IOmlObjectApply KEEP=NO
  abstract public void visitObjectApply (final IOmlObjectApply var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitObjectApply#1|IOmlObjectApply


// ***** VDMTOOLS START Name=visitPatternTypePair#1|IOmlPatternTypePair KEEP=NO
  abstract public void visitPatternTypePair (final IOmlPatternTypePair var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPatternTypePair#1|IOmlPatternTypePair


// ***** VDMTOOLS START Name=visitExistsExpression#1|IOmlExistsExpression KEEP=NO
  abstract public void visitExistsExpression (final IOmlExistsExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExistsExpression#1|IOmlExistsExpression


// ***** VDMTOOLS START Name=visitStartStatement#1|IOmlStartStatement KEEP=NO
  abstract public void visitStartStatement (final IOmlStartStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStartStatement#1|IOmlStartStatement


// ***** VDMTOOLS START Name=visitRecordPattern#1|IOmlRecordPattern KEEP=NO
  abstract public void visitRecordPattern (final IOmlRecordPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitRecordPattern#1|IOmlRecordPattern


// ***** VDMTOOLS START Name=visitSymbolicLiteralExpression#1|IOmlSymbolicLiteralExpression KEEP=NO
  abstract public void visitSymbolicLiteralExpression (final IOmlSymbolicLiteralExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSymbolicLiteralExpression#1|IOmlSymbolicLiteralExpression


// ***** VDMTOOLS START Name=visitSelfExpression#1|IOmlSelfExpression KEEP=NO
  abstract public void visitSelfExpression (final IOmlSelfExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSelfExpression#1|IOmlSelfExpression


// ***** VDMTOOLS START Name=visitIsExpression#1|IOmlIsExpression KEEP=NO
  abstract public void visitIsExpression (final IOmlIsExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIsExpression#1|IOmlIsExpression


// ***** VDMTOOLS START Name=visitSetComprehension#1|IOmlSetComprehension KEEP=NO
  abstract public void visitSetComprehension (final IOmlSetComprehension var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSetComprehension#1|IOmlSetComprehension


// ***** VDMTOOLS START Name=visitCasesExpression#1|IOmlCasesExpression KEEP=NO
  abstract public void visitCasesExpression (final IOmlCasesExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCasesExpression#1|IOmlCasesExpression


// ***** VDMTOOLS START Name=visitMutexAllPredicate#1|IOmlMutexAllPredicate KEEP=NO
  abstract public void visitMutexAllPredicate (final IOmlMutexAllPredicate var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMutexAllPredicate#1|IOmlMutexAllPredicate


// ***** VDMTOOLS START Name=visitReqExpression#1|IOmlReqExpression KEEP=NO
  abstract public void visitReqExpression (final IOmlReqExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitReqExpression#1|IOmlReqExpression


// ***** VDMTOOLS START Name=visitSpecificationStatement#1|IOmlSpecificationStatement KEEP=NO
  abstract public void visitSpecificationStatement (final IOmlSpecificationStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSpecificationStatement#1|IOmlSpecificationStatement


// ***** VDMTOOLS START Name=visitBoolType#1|IOmlBoolType KEEP=NO
  abstract public void visitBoolType (final IOmlBoolType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBoolType#1|IOmlBoolType


// ***** VDMTOOLS START Name=visitTotalFunctionType#1|IOmlTotalFunctionType KEEP=NO
  abstract public void visitTotalFunctionType (final IOmlTotalFunctionType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTotalFunctionType#1|IOmlTotalFunctionType


// ***** VDMTOOLS START Name=visitContextInfo#1|IOmlContextInfo KEEP=NO
  abstract public void visitContextInfo (final IOmlContextInfo var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitContextInfo#1|IOmlContextInfo


// ***** VDMTOOLS START Name=visitNode#1|IOmlNode KEEP=NO
  abstract public void visitNode (final IOmlNode var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNode#1|IOmlNode


// ***** VDMTOOLS START Name=visitType#1|IOmlType KEEP=NO
  abstract public void visitType (final IOmlType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitType#1|IOmlType


// ***** VDMTOOLS START Name=visitFunctionShape#1|IOmlFunctionShape KEEP=NO
  abstract public void visitFunctionShape (final IOmlFunctionShape var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitFunctionShape#1|IOmlFunctionShape


// ***** VDMTOOLS START Name=visitStateDesignator#1|IOmlStateDesignator KEEP=NO
  abstract public void visitStateDesignator (final IOmlStateDesignator var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStateDesignator#1|IOmlStateDesignator


// ***** VDMTOOLS START Name=visitBind#1|IOmlBind KEEP=NO
  abstract public void visitBind (final IOmlBind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBind#1|IOmlBind


// ***** VDMTOOLS START Name=visitObjectDesignator#1|IOmlObjectDesignator KEEP=NO
  abstract public void visitObjectDesignator (final IOmlObjectDesignator var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitObjectDesignator#1|IOmlObjectDesignator


// ***** VDMTOOLS START Name=visitMode#1|IOmlMode KEEP=NO
  abstract public void visitMode (final IOmlMode var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMode#1|IOmlMode


// ***** VDMTOOLS START Name=visitOperationShape#1|IOmlOperationShape KEEP=NO
  abstract public void visitOperationShape (final IOmlOperationShape var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperationShape#1|IOmlOperationShape


// ***** VDMTOOLS START Name=visitDefinitionBlock#1|IOmlDefinitionBlock KEEP=NO
  abstract public void visitDefinitionBlock (final IOmlDefinitionBlock var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDefinitionBlock#1|IOmlDefinitionBlock


// ***** VDMTOOLS START Name=visitStatement#1|IOmlStatement KEEP=NO
  abstract public void visitStatement (final IOmlStatement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStatement#1|IOmlStatement


// ***** VDMTOOLS START Name=visitThreadSpecification#1|IOmlThreadSpecification KEEP=NO
  abstract public void visitThreadSpecification (final IOmlThreadSpecification var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitThreadSpecification#1|IOmlThreadSpecification


// ***** VDMTOOLS START Name=visitSyncPredicate#1|IOmlSyncPredicate KEEP=NO
  abstract public void visitSyncPredicate (final IOmlSyncPredicate var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitSyncPredicate#1|IOmlSyncPredicate


// ***** VDMTOOLS START Name=visitBinaryOperator#1|IOmlBinaryOperator KEEP=NO
  abstract public void visitBinaryOperator (final IOmlBinaryOperator var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBinaryOperator#1|IOmlBinaryOperator


// ***** VDMTOOLS START Name=visitExpression#1|IOmlExpression KEEP=NO
  abstract public void visitExpression (final IOmlExpression var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitExpression#1|IOmlExpression


// ***** VDMTOOLS START Name=visitLiteral#1|IOmlLiteral KEEP=NO
  abstract public void visitLiteral (final IOmlLiteral var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLiteral#1|IOmlLiteral


// ***** VDMTOOLS START Name=visitInstanceVariableShape#1|IOmlInstanceVariableShape KEEP=NO
  abstract public void visitInstanceVariableShape (final IOmlInstanceVariableShape var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInstanceVariableShape#1|IOmlInstanceVariableShape


// ***** VDMTOOLS START Name=visitScope#1|IOmlScope KEEP=NO
  abstract public void visitScope (final IOmlScope var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitScope#1|IOmlScope


// ***** VDMTOOLS START Name=visitUnaryOperator#1|IOmlUnaryOperator KEEP=NO
  abstract public void visitUnaryOperator (final IOmlUnaryOperator var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUnaryOperator#1|IOmlUnaryOperator


// ***** VDMTOOLS START Name=visitPattern#1|IOmlPattern KEEP=NO
  abstract public void visitPattern (final IOmlPattern var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPattern#1|IOmlPattern


// ***** VDMTOOLS START Name=visitPatternBind#1|IOmlPatternBind KEEP=NO
  abstract public void visitPatternBind (final IOmlPatternBind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitPatternBind#1|IOmlPatternBind


// ***** VDMTOOLS START Name=visitTypeShape#1|IOmlTypeShape KEEP=NO
  abstract public void visitTypeShape (final IOmlTypeShape var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTypeShape#1|IOmlTypeShape

}
;
