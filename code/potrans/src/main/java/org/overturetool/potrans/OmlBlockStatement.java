//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlBlockStatement extends IOmlBlockStatement {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivDclStatementList KEEP=NO
  private Vector ivDclStatementList = null;
// ***** VDMTOOLS END Name=ivDclStatementList

// ***** VDMTOOLS START Name=ivStatementList KEEP=NO
  private Vector ivStatementList = null;
// ***** VDMTOOLS END Name=ivStatementList


// ***** VDMTOOLS START Name=vdm_init_OmlBlockStatement KEEP=NO
  private void vdm_init_OmlBlockStatement () throws CGException {
    try {

      ivDclStatementList = new Vector();
      ivStatementList = new Vector();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlBlockStatement


// ***** VDMTOOLS START Name=OmlBlockStatement KEEP=NO
  public OmlBlockStatement () throws CGException {
    vdm_init_OmlBlockStatement();
  }
// ***** VDMTOOLS END Name=OmlBlockStatement


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("BlockStatement");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitBlockStatement((IOmlBlockStatement) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlBlockStatement#2|Vector|Vector KEEP=NO
  public OmlBlockStatement (final Vector p1, final Vector p2) throws CGException {

    vdm_init_OmlBlockStatement();
    {

      setDclStatementList(p1);
      setStatementList(p2);
    }
  }
// ***** VDMTOOLS END Name=OmlBlockStatement#2|Vector|Vector


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("dcl_statement_list");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setDclStatementList((Vector) data.get(fname));
    }
    {

      String fname = new String("statement_list");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setStatementList((Vector) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getDclStatementList KEEP=NO
  public Vector getDclStatementList () throws CGException {
    return ivDclStatementList;
  }
// ***** VDMTOOLS END Name=getDclStatementList


// ***** VDMTOOLS START Name=setDclStatementList#1|Vector KEEP=NO
  public void setDclStatementList (final Vector parg) throws CGException {
    ivDclStatementList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setDclStatementList#1|Vector


// ***** VDMTOOLS START Name=addDclStatementList#1|IOmlNode KEEP=NO
  public void addDclStatementList (final IOmlNode parg) throws CGException {
    ivDclStatementList.add(parg);
  }
// ***** VDMTOOLS END Name=addDclStatementList#1|IOmlNode


// ***** VDMTOOLS START Name=getStatementList KEEP=NO
  public Vector getStatementList () throws CGException {
    return ivStatementList;
  }
// ***** VDMTOOLS END Name=getStatementList


// ***** VDMTOOLS START Name=setStatementList#1|Vector KEEP=NO
  public void setStatementList (final Vector parg) throws CGException {
    ivStatementList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setStatementList#1|Vector


// ***** VDMTOOLS START Name=addStatementList#1|IOmlNode KEEP=NO
  public void addStatementList (final IOmlNode parg) throws CGException {
    ivStatementList.add(parg);
  }
// ***** VDMTOOLS END Name=addStatementList#1|IOmlNode

}
;
