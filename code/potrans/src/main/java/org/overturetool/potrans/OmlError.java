//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlError extends IOmlError {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIdentifier KEEP=NO
  private String ivIdentifier = null;
// ***** VDMTOOLS END Name=ivIdentifier

// ***** VDMTOOLS START Name=ivLhs KEEP=NO
  private IOmlExpression ivLhs = null;
// ***** VDMTOOLS END Name=ivLhs

// ***** VDMTOOLS START Name=ivRhs KEEP=NO
  private IOmlExpression ivRhs = null;
// ***** VDMTOOLS END Name=ivRhs


// ***** VDMTOOLS START Name=vdm_init_OmlError KEEP=NO
  private void vdm_init_OmlError () throws CGException {
    try {

      ivIdentifier = UTIL.ConvertToString(new String());
      ivLhs = null;
      ivRhs = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlError


// ***** VDMTOOLS START Name=OmlError KEEP=NO
  public OmlError () throws CGException {
    vdm_init_OmlError();
  }
// ***** VDMTOOLS END Name=OmlError


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("Error");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitError((IOmlError) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlError#3|String|IOmlExpression|IOmlExpression KEEP=NO
  public OmlError (final String p1, final IOmlExpression p2, final IOmlExpression p3) throws CGException {

    vdm_init_OmlError();
    {

      setIdentifier(p1);
      setLhs((IOmlExpression) p2);
      setRhs((IOmlExpression) p3);
    }
  }
// ***** VDMTOOLS END Name=OmlError#3|String|IOmlExpression|IOmlExpression


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("identifier");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIdentifier(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("lhs");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setLhs((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("rhs");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setRhs((IOmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getIdentifier KEEP=NO
  public String getIdentifier () throws CGException {
    return ivIdentifier;
  }
// ***** VDMTOOLS END Name=getIdentifier


// ***** VDMTOOLS START Name=setIdentifier#1|String KEEP=NO
  public void setIdentifier (final String parg) throws CGException {
    ivIdentifier = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifier#1|String


// ***** VDMTOOLS START Name=getLhs KEEP=NO
  public IOmlExpression getLhs () throws CGException {
    return (IOmlExpression) ivLhs;
  }
// ***** VDMTOOLS END Name=getLhs


// ***** VDMTOOLS START Name=setLhs#1|IOmlExpression KEEP=NO
  public void setLhs (final IOmlExpression parg) throws CGException {
    ivLhs = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setLhs#1|IOmlExpression


// ***** VDMTOOLS START Name=getRhs KEEP=NO
  public IOmlExpression getRhs () throws CGException {
    return (IOmlExpression) ivRhs;
  }
// ***** VDMTOOLS END Name=getRhs


// ***** VDMTOOLS START Name=setRhs#1|IOmlExpression KEEP=NO
  public void setRhs (final IOmlExpression parg) throws CGException {
    ivRhs = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setRhs#1|IOmlExpression

}
;
