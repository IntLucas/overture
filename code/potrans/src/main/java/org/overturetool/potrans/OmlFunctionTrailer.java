//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlFunctionTrailer extends IOmlFunctionTrailer {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivPreExpression KEEP=NO
  private IOmlExpression ivPreExpression = null;
// ***** VDMTOOLS END Name=ivPreExpression

// ***** VDMTOOLS START Name=ivPostExpression KEEP=NO
  private IOmlExpression ivPostExpression = null;
// ***** VDMTOOLS END Name=ivPostExpression


// ***** VDMTOOLS START Name=vdm_init_OmlFunctionTrailer KEEP=NO
  private void vdm_init_OmlFunctionTrailer () throws CGException {
    try {

      ivPreExpression = null;
      ivPostExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlFunctionTrailer


// ***** VDMTOOLS START Name=OmlFunctionTrailer KEEP=NO
  public OmlFunctionTrailer () throws CGException {
    vdm_init_OmlFunctionTrailer();
  }
// ***** VDMTOOLS END Name=OmlFunctionTrailer


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("FunctionTrailer");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitFunctionTrailer((IOmlFunctionTrailer) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlFunctionTrailer#2|IOmlExpression|IOmlExpression KEEP=NO
  public OmlFunctionTrailer (final IOmlExpression p1, final IOmlExpression p2) throws CGException {

    vdm_init_OmlFunctionTrailer();
    {

      setPreExpression((IOmlExpression) p1);
      setPostExpression((IOmlExpression) p2);
    }
  }
// ***** VDMTOOLS END Name=OmlFunctionTrailer#2|IOmlExpression|IOmlExpression


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("pre_expression");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setPreExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("post_expression");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setPostExpression((IOmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getPreExpression KEEP=NO
  public IOmlExpression getPreExpression () throws CGException {
    return (IOmlExpression) ivPreExpression;
  }
// ***** VDMTOOLS END Name=getPreExpression


// ***** VDMTOOLS START Name=hasPreExpression KEEP=NO
  public Boolean hasPreExpression () throws CGException {
    return new Boolean(!UTIL.equals(ivPreExpression, null));
  }
// ***** VDMTOOLS END Name=hasPreExpression


// ***** VDMTOOLS START Name=setPreExpression#1|IOmlExpression KEEP=NO
  public void setPreExpression (final IOmlExpression parg) throws CGException {
    ivPreExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setPreExpression#1|IOmlExpression


// ***** VDMTOOLS START Name=getPostExpression KEEP=NO
  public IOmlExpression getPostExpression () throws CGException {
    return (IOmlExpression) ivPostExpression;
  }
// ***** VDMTOOLS END Name=getPostExpression


// ***** VDMTOOLS START Name=hasPostExpression KEEP=NO
  public Boolean hasPostExpression () throws CGException {
    return new Boolean(!UTIL.equals(ivPostExpression, null));
  }
// ***** VDMTOOLS END Name=hasPostExpression


// ***** VDMTOOLS START Name=setPostExpression#1|IOmlExpression KEEP=NO
  public void setPostExpression (final IOmlExpression parg) throws CGException {
    ivPostExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setPostExpression#1|IOmlExpression

}
;
