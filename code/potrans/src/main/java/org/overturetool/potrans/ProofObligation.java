//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class ProofObligation {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=po KEEP=NO
  private HolExpression po = null;
// ***** VDMTOOLS END Name=po

// ***** VDMTOOLS START Name=classif KEEP=NO
  private Object classif = null;
// ***** VDMTOOLS END Name=classif


// ***** VDMTOOLS START Name=vdm_init_ProofObligation KEEP=NO
  private void vdm_init_ProofObligation () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_ProofObligation


// ***** VDMTOOLS START Name=ProofObligation KEEP=NO
  public ProofObligation () throws CGException {
    vdm_init_ProofObligation();
  }
// ***** VDMTOOLS END Name=ProofObligation


// ***** VDMTOOLS START Name=ProofObligation#2|HolExpression|Object KEEP=NO
  public ProofObligation (final HolExpression newPo, final Object newClass) throws CGException {

    vdm_init_ProofObligation();
    {

      po = (HolExpression) UTIL.clone(newPo);
      classif = UTIL.clone(newClass);
    }
  }
// ***** VDMTOOLS END Name=ProofObligation#2|HolExpression|Object


// ***** VDMTOOLS START Name=ProofObligation#2|IOmlExpression|Object KEEP=NO
  public ProofObligation (final IOmlExpression newPo, final Object newClass) throws CGException {

    vdm_init_ProofObligation();
    {

      HolExpression rhs_3 = null;
      VdmHolTranslator obj_4 = null;
      obj_4 = (VdmHolTranslator) new VdmHolTranslator();
      rhs_3 = (HolExpression) obj_4.translateExpression(newPo);
      po = (HolExpression) UTIL.clone(rhs_3);
      classif = UTIL.clone(newClass);
    }
  }
// ***** VDMTOOLS END Name=ProofObligation#2|IOmlExpression|Object


// ***** VDMTOOLS START Name=getHolProverExpression KEEP=NO
  public MLExpression getHolProverExpression () throws CGException {

    NonHolExpression rexpr_1 = null;
    String arg_2 = null;
    String var1_3 = null;
    String var2_5 = null;
    var2_5 = po.print();
    var1_3 = new String("TAC_PROOF(([]:(term list), ``").concat(var2_5);
    arg_2 = var1_3.concat(new String("``), VDM_GENERIC_TAC)"));
    rexpr_1 = new NonHolExpression(arg_2);
    return (MLExpression) rexpr_1;
  }
// ***** VDMTOOLS END Name=getHolProverExpression


// ***** VDMTOOLS START Name=getExpression KEEP=NO
  public HolExpression getExpression () throws CGException {
    return (HolExpression) po;
  }
// ***** VDMTOOLS END Name=getExpression

}
;
