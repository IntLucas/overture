//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 11-Jun-2008 by the VDM++ to JAVA Code Generator
// (v8.0.1b - Mon 28-Jan-2008 10:17:36)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.ast.imp;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class OmlExtendedExplicitFunction extends OmlFunctionShape implements IOmlExtendedExplicitFunction {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIdentifier KEEP=NO
  private String ivIdentifier = null;
// ***** VDMTOOLS END Name=ivIdentifier

// ***** VDMTOOLS START Name=ivTypeVariableList KEEP=NO
  private Vector ivTypeVariableList = null;
// ***** VDMTOOLS END Name=ivTypeVariableList

// ***** VDMTOOLS START Name=ivPatternTypePairList KEEP=NO
  private Vector ivPatternTypePairList = null;
// ***** VDMTOOLS END Name=ivPatternTypePairList

// ***** VDMTOOLS START Name=ivIdentifierTypePairList KEEP=NO
  private Vector ivIdentifierTypePairList = null;
// ***** VDMTOOLS END Name=ivIdentifierTypePairList

// ***** VDMTOOLS START Name=ivBody KEEP=NO
  private IOmlFunctionBody ivBody = null;
// ***** VDMTOOLS END Name=ivBody

// ***** VDMTOOLS START Name=ivTrailer KEEP=NO
  private IOmlFunctionTrailer ivTrailer = null;
// ***** VDMTOOLS END Name=ivTrailer


// ***** VDMTOOLS START Name=OmlExtendedExplicitFunction KEEP=NO
  public OmlExtendedExplicitFunction () throws CGException {
    try {

      ivIdentifier = UTIL.ConvertToString(new String());
      ivTypeVariableList = new Vector();
      ivPatternTypePairList = new Vector();
      ivIdentifierTypePairList = new Vector();
      ivBody = null;
      ivTrailer = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=OmlExtendedExplicitFunction


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("ExtendedExplicitFunction");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitExtendedExplicitFunction((IOmlExtendedExplicitFunction) this);
  }
// ***** VDMTOOLS END Name=accept


// ***** VDMTOOLS START Name=OmlExtendedExplicitFunction KEEP=NO
  public OmlExtendedExplicitFunction (final String p1, final Vector p2, final Vector p3, final Vector p4, final IOmlFunctionBody p5, final IOmlFunctionTrailer p6) throws CGException {

    try {

      ivIdentifier = UTIL.ConvertToString(new String());
      ivTypeVariableList = new Vector();
      ivPatternTypePairList = new Vector();
      ivIdentifierTypePairList = new Vector();
      ivBody = null;
      ivTrailer = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setIdentifier(p1);
      setTypeVariableList(p2);
      setPatternTypePairList(p3);
      setIdentifierTypePairList(p4);
      setBody((IOmlFunctionBody) p5);
      setTrailer((IOmlFunctionTrailer) p6);
    }
  }
// ***** VDMTOOLS END Name=OmlExtendedExplicitFunction


// ***** VDMTOOLS START Name=OmlExtendedExplicitFunction KEEP=NO
  public OmlExtendedExplicitFunction (final String p1, final Vector p2, final Vector p3, final Vector p4, final IOmlFunctionBody p5, final IOmlFunctionTrailer p6, final Long line, final Long column) throws CGException {

    try {

      ivIdentifier = UTIL.ConvertToString(new String());
      ivTypeVariableList = new Vector();
      ivPatternTypePairList = new Vector();
      ivIdentifierTypePairList = new Vector();
      ivBody = null;
      ivTrailer = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      setIdentifier(p1);
      setTypeVariableList(p2);
      setPatternTypePairList(p3);
      setIdentifierTypePairList(p4);
      setBody((IOmlFunctionBody) p5);
      setTrailer((IOmlFunctionTrailer) p6);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=OmlExtendedExplicitFunction


// ***** VDMTOOLS START Name=init KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("identifier");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIdentifier(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("type_variable_list");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setTypeVariableList((Vector) data.get(fname));
    }
    {

      String fname = new String("pattern_type_pair_list");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setPatternTypePairList((Vector) data.get(fname));
    }
    {

      String fname = new String("identifier_type_pair_list");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setIdentifierTypePairList((Vector) data.get(fname));
    }
    {

      String fname = new String("body");
      Boolean cond_40 = null;
      cond_40 = new Boolean(data.containsKey(fname));
      if (cond_40.booleanValue()) 
        setBody((IOmlFunctionBody) data.get(fname));
    }
    {

      String fname = new String("trailer");
      Boolean cond_49 = null;
      cond_49 = new Boolean(data.containsKey(fname));
      if (cond_49.booleanValue()) 
        setTrailer((IOmlFunctionTrailer) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init


// ***** VDMTOOLS START Name=getIdentifier KEEP=NO
  public String getIdentifier () throws CGException {
    return ivIdentifier;
  }
// ***** VDMTOOLS END Name=getIdentifier


// ***** VDMTOOLS START Name=setIdentifier KEEP=NO
  public void setIdentifier (final String parg) throws CGException {
    ivIdentifier = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifier


// ***** VDMTOOLS START Name=getTypeVariableList KEEP=NO
  public Vector getTypeVariableList () throws CGException {
    return ivTypeVariableList;
  }
// ***** VDMTOOLS END Name=getTypeVariableList


// ***** VDMTOOLS START Name=setTypeVariableList KEEP=NO
  public void setTypeVariableList (final Vector parg) throws CGException {
    ivTypeVariableList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setTypeVariableList


// ***** VDMTOOLS START Name=addTypeVariableList KEEP=NO
  public void addTypeVariableList (final IOmlNode parg) throws CGException {
    ivTypeVariableList.add(parg);
  }
// ***** VDMTOOLS END Name=addTypeVariableList


// ***** VDMTOOLS START Name=getPatternTypePairList KEEP=NO
  public Vector getPatternTypePairList () throws CGException {
    return ivPatternTypePairList;
  }
// ***** VDMTOOLS END Name=getPatternTypePairList


// ***** VDMTOOLS START Name=setPatternTypePairList KEEP=NO
  public void setPatternTypePairList (final Vector parg) throws CGException {
    ivPatternTypePairList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setPatternTypePairList


// ***** VDMTOOLS START Name=addPatternTypePairList KEEP=NO
  public void addPatternTypePairList (final IOmlNode parg) throws CGException {
    ivPatternTypePairList.add(parg);
  }
// ***** VDMTOOLS END Name=addPatternTypePairList


// ***** VDMTOOLS START Name=getIdentifierTypePairList KEEP=NO
  public Vector getIdentifierTypePairList () throws CGException {
    return ivIdentifierTypePairList;
  }
// ***** VDMTOOLS END Name=getIdentifierTypePairList


// ***** VDMTOOLS START Name=setIdentifierTypePairList KEEP=NO
  public void setIdentifierTypePairList (final Vector parg) throws CGException {
    ivIdentifierTypePairList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifierTypePairList


// ***** VDMTOOLS START Name=addIdentifierTypePairList KEEP=NO
  public void addIdentifierTypePairList (final IOmlNode parg) throws CGException {
    ivIdentifierTypePairList.add(parg);
  }
// ***** VDMTOOLS END Name=addIdentifierTypePairList


// ***** VDMTOOLS START Name=getBody KEEP=NO
  public IOmlFunctionBody getBody () throws CGException {
    return (IOmlFunctionBody) ivBody;
  }
// ***** VDMTOOLS END Name=getBody

  

// ***** VDMTOOLS START Name=setBody KEEP=NO
  public void setBody (final IOmlFunctionBody parg) throws CGException {
    ivBody = (IOmlFunctionBody) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setBody


// ***** VDMTOOLS START Name=getTrailer KEEP=NO
  public IOmlFunctionTrailer getTrailer () throws CGException {
    return (IOmlFunctionTrailer) ivTrailer;
  }
// ***** VDMTOOLS END Name=getTrailer


// ***** VDMTOOLS START Name=setTrailer KEEP=NO
  public void setTrailer (final IOmlFunctionTrailer parg) throws CGException {
    ivTrailer = (IOmlFunctionTrailer) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setTrailer
  public String toString() {
	  
	  String str = new String();
	  String body = new String();
	  String trailer = new String();
	  String tplist = new String();
	  String params = new String();
	  String res = new String();
	  
	  body = this.ivBody.toString();
	  trailer = this.ivTrailer.toString();
	  
	  //type variable identifier: [@A],...
	  int i, sizei = this.ivTypeVariableList.size();
	  
	  if(sizei > 0) {
		  tplist += "[";
		  for(i = 0; i < sizei-1; i++) {
			  tplist += ((OmlTypeVariable) this.ivTypeVariableList.get(i)).toString() + ",";
		  }
		  tplist += ((OmlTypeVariable) this.ivTypeVariableList.get(sizei-1)).toString() + ",";
		  tplist += "]";
	  }
	  
	  //parameters
	  int j, sizej = this.ivPatternTypePairList.size();
	  
	  if(sizej>0) {
		  
		  for(j = 0; j < sizej-1; j++) { 
			  params += ((OmlPatternTypePair) this.ivPatternTypePairList.get(j)).toString() + ",";
		  }
		  params += ((OmlPatternTypePair) this.ivPatternTypePairList.get(sizej-1)).toString();
	  }
	  
	  //return type
	  int k, sizek = this.ivIdentifierTypePairList.size();
	  
	  if(sizek>0) {
		  
		  for(k = 0; k < sizek-1; k++) { 
			  res += ((OmlIdentifierTypePair) this.ivIdentifierTypePairList.get(k)).toString() + ",";
		  }
		  res += ((OmlIdentifierTypePair) this.ivIdentifierTypePairList.get(sizek-1)).toString();
	  }
	  
	  return this.ivIdentifier + " " + tplist + " " + "(" + params + ") " + 
	         res + "\n" + "\t== " + body + "\n\t" + trailer + ";\n\n";

  }
}
;
