\section{Interface to VDMTools' Interpreter}

The \texttt{ToolBox} class represent an interface to VDMTools enabling
interpretation of test cases automatically generated using the
combinational test generation approach. Probably it will subsequently
be necessary to change the \texttt{OmlSpecifications} in its AST
format to simply be a set of names of the files in which these are
stored such that these can be loaded into VDMTools.

\begin{vdm_al}
class ToolBox

types
public String = seq of char;

public InterpreterResult :: 
	successfull : bool
	output : seq of char
--inv x == x.verdict in set {0,1,2,3}; 

instance variables
protected isInilized : bool := false;
protected specsFiles: set of DEF`Identifier;

operations

public ToolBox : set of DEF`Identifier ==> ToolBox
ToolBox(sp) ==
( 
  specsFiles := sp;
);

public InitToolbox: () ==> ()
InitToolbox() ==
  is subclass responsibility;
  
public IsPreError: InterpreterResult ==> bool
IsPreError(res) ==
  is subclass responsibility;

public runTraceTestCase : String * seq of String ==> seq of InterpreterResult
runTraceTestCase(className, expressions) ==
(
  if not isInilized
  then
  (
    InitToolbox();
    isInilized := true;
  );
  return runTestCase(className, expressions);
);


protected runTestCase : String * seq of String ==> seq of InterpreterResult
runTestCase(className, expressions) ==
  is subclass responsibility;
  
  
public static ResultsToStrings : seq of InterpreterResult ==> seq of String
ResultsToStrings(res) ==
  return [res(i).output | i in set inds res];



end ToolBox
\end{vdm_al}
