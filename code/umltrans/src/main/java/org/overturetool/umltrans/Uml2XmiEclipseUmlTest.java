//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-09 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.quotes.*;
import junit.framework.TestCase;

import org.overturetool.ast.imp.*;
import org.overturetool.ast.itf.*;
// ***** VDMTOOLS END Name=imports



public class Uml2XmiEclipseUmlTest extends TestCase {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=testSpec KEEP=NO
  private IOmlSpecifications testSpec = null;
// ***** VDMTOOLS END Name=testSpec


// ***** VDMTOOLS START Name=vdm_init_Uml2XmiEclipseUmlTest KEEP=NO
  private void vdm_init_Uml2XmiEclipseUmlTest () throws CGException {
    try {
      testSpec = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Uml2XmiEclipseUmlTest


// ***** VDMTOOLS START Name=Uml2XmiEclipseUmlTest KEEP=NO
  public Uml2XmiEclipseUmlTest () throws CGException {

    super(new String("Uml2XmiEclipseUmlTest"));
    vdm_init_Uml2XmiEclipseUmlTest();
  }
// ***** VDMTOOLS END Name=Uml2XmiEclipseUmlTest


// ***** VDMTOOLS START Name=SetUp KEEP=NO
  protected void SetUp () throws CGException {;
  }
// ***** VDMTOOLS END Name=SetUp


// ***** VDMTOOLS START Name=test01 KEEP=NO
  public void test01 () throws CGException {

    Vdm2Uml vu = new Vdm2Uml();
    Uml2XmiEclipseUml xmi = new Uml2XmiEclipseUml();
    String fileName = new String("ClassAbstractOperation.uml");
    IOmlSpecifications rhs_1 = null;
    OmlDocument obj_2 = null;
    obj_2 = new TestData().ClassAbstractOperation;
    rhs_1 = (IOmlSpecifications) obj_2.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_1);
    IUmlModel par_6 = null;
    par_6 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_6);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassAssociation.uml")));
    IOmlSpecifications rhs_11 = null;
    OmlDocument obj_12 = null;
    obj_12 = new TestData().ClassAssociation;
    rhs_11 = (IOmlSpecifications) obj_12.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_11);
    IUmlModel par_16 = null;
    par_16 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_16);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassAssociationN.uml")));
    IOmlSpecifications rhs_21 = null;
    OmlDocument obj_22 = null;
    obj_22 = new TestData().ClassAssociationN;
    rhs_21 = (IOmlSpecifications) obj_22.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_21);
    IUmlModel par_26 = null;
    par_26 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_26);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassInheritance.uml")));
    IOmlSpecifications rhs_31 = null;
    OmlDocument obj_32 = null;
    obj_32 = new TestData().ClassInheritance;
    rhs_31 = (IOmlSpecifications) obj_32.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_31);
    IUmlModel par_36 = null;
    par_36 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_36);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassInstanceUnionType.uml")));
    IOmlSpecifications rhs_41 = null;
    OmlDocument obj_42 = null;
    obj_42 = new TestData().ClassInstanceUnionType;
    rhs_41 = (IOmlSpecifications) obj_42.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_41);
    IUmlModel par_46 = null;
    par_46 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_46);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassSimpleOperation.uml")));
    IOmlSpecifications rhs_51 = null;
    OmlDocument obj_52 = null;
    obj_52 = new TestData().ClassSimpleOperation;
    rhs_51 = (IOmlSpecifications) obj_52.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_51);
    IUmlModel par_56 = null;
    par_56 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_56);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassTemplates.uml")));
    IOmlSpecifications rhs_61 = null;
    OmlDocument obj_62 = null;
    obj_62 = new TestData().ClassTemplates;
    rhs_61 = (IOmlSpecifications) obj_62.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_61);
    IUmlModel par_66 = null;
    par_66 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_66);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassWithMap.uml")));
    IOmlSpecifications rhs_71 = null;
    OmlDocument obj_72 = null;
    obj_72 = new TestData().ClassWithMap;
    rhs_71 = (IOmlSpecifications) obj_72.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_71);
    IUmlModel par_76 = null;
    par_76 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_76);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassWithTypes.uml")));
    IOmlSpecifications rhs_81 = null;
    OmlDocument obj_82 = null;
    obj_82 = new TestData().ClassWithTypes;
    rhs_81 = (IOmlSpecifications) obj_82.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_81);
    IUmlModel par_86 = null;
    par_86 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_86);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassWithValues.uml")));
    IOmlSpecifications rhs_91 = null;
    OmlDocument obj_92 = null;
    obj_92 = new TestData().ClassWithValues;
    rhs_91 = (IOmlSpecifications) obj_92.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_91);
    IUmlModel par_96 = null;
    par_96 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_96);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassSimpleFunction.uml")));
    IOmlSpecifications rhs_101 = null;
    OmlDocument obj_102 = null;
    obj_102 = new TestData().ClassSimpleFunction;
    rhs_101 = (IOmlSpecifications) obj_102.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_101);
    IUmlModel par_106 = null;
    par_106 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_106);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassActive.uml")));
    IOmlSpecifications rhs_111 = null;
    OmlDocument obj_112 = null;
    obj_112 = new TestData().ClassActive;
    rhs_111 = (IOmlSpecifications) obj_112.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_111);
    IUmlModel par_116 = null;
    par_116 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_116);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    xmi = (Uml2XmiEclipseUml) UTIL.clone(new Uml2XmiEclipseUml());
    fileName = UTIL.ConvertToString(UTIL.clone(new String("ClassInstanceVar.uml")));
    IOmlSpecifications rhs_121 = null;
    OmlDocument obj_122 = null;
    obj_122 = new TestData().ClassInstanceVar;
    rhs_121 = (IOmlSpecifications) obj_122.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_121);
    IUmlModel par_126 = null;
    par_126 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    xmi.Save(fileName, (IUmlModel) par_126);
    assertTrue(new Boolean(true));
  }
// ***** VDMTOOLS END Name=test01


// ***** VDMTOOLS START Name=TearDown KEEP=NO
  protected void TearDown () throws CGException {}
// ***** VDMTOOLS END Name=TearDown

}
;
