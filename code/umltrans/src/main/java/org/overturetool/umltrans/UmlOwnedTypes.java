//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.quotes.*;
// ***** VDMTOOLS END Name=imports



public class UmlOwnedTypes extends IUmlOwnedTypes {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivTypeList KEEP=NO
  private HashSet ivTypeList = new HashSet();
// ***** VDMTOOLS END Name=ivTypeList


// ***** VDMTOOLS START Name=vdm_init_UmlOwnedTypes KEEP=NO
  private void vdm_init_UmlOwnedTypes () throws CGException {
    try {
      ivTypeList = new HashSet();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_UmlOwnedTypes


// ***** VDMTOOLS START Name=UmlOwnedTypes KEEP=NO
  public UmlOwnedTypes () throws CGException {
    vdm_init_UmlOwnedTypes();
  }
// ***** VDMTOOLS END Name=UmlOwnedTypes


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("OwnedTypes");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IUmlVisitor KEEP=NO
  public void accept (final IUmlVisitor pVisitor) throws CGException {
    pVisitor.visitOwnedTypes((IUmlOwnedTypes) this);
  }
// ***** VDMTOOLS END Name=accept#1|IUmlVisitor


// ***** VDMTOOLS START Name=UmlOwnedTypes#1|HashSet KEEP=NO
  public UmlOwnedTypes (final HashSet p1) throws CGException {

    vdm_init_UmlOwnedTypes();
    setTypeList(p1);
  }
// ***** VDMTOOLS END Name=UmlOwnedTypes#1|HashSet


// ***** VDMTOOLS START Name=UmlOwnedTypes#3|HashSet|Integer|Integer KEEP=NO
  public UmlOwnedTypes (final HashSet p1, final Integer line, final Integer column) throws CGException {

    vdm_init_UmlOwnedTypes();
    {

      setTypeList(p1);
      setPosition(line, column);
    }
  }
// ***** VDMTOOLS END Name=UmlOwnedTypes#3|HashSet|Integer|Integer


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    String fname = new String("typeList");
    Boolean cond_4 = null;
    cond_4 = new Boolean(data.containsKey(fname));
    if (cond_4.booleanValue()) 
      setTypeList((HashSet) data.get(fname));
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getTypeList KEEP=NO
  public HashSet getTypeList () throws CGException {
    return ivTypeList;
  }
// ***** VDMTOOLS END Name=getTypeList


// ***** VDMTOOLS START Name=setTypeList#1|HashSet KEEP=NO
  public void setTypeList (final HashSet parg) throws CGException {
    ivTypeList = (HashSet) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setTypeList#1|HashSet


// ***** VDMTOOLS START Name=addTypeList#1|IUmlNode KEEP=NO
  public void addTypeList (final IUmlNode parg) throws CGException {
    ivTypeList.add(parg);
  }
// ***** VDMTOOLS END Name=addTypeList#1|IUmlNode

}
;
