//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-09 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Wed 29-Oct-2008 09:29:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import java.util.HashSet;

import jp.co.csk.vdm.toolbox.VDM.CGException;
import jp.co.csk.vdm.toolbox.VDM.UTIL;
import junit.framework.TestCase;

import org.overturetool.ast.imp.OmlDocument;
import org.overturetool.ast.itf.IOmlSpecifications;

// ***** VDMTOOLS END Name=imports



public class Vdm2UmlTest extends TestCase {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=testSpec KEEP=NO
  private IOmlSpecifications testSpec = null;
// ***** VDMTOOLS END Name=testSpec


// ***** VDMTOOLS START Name=vdm_init_Vdm2UmlTest KEEP=NO
  private void vdm_init_Vdm2UmlTest () throws CGException {
    try {
      testSpec = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Vdm2UmlTest


// ***** VDMTOOLS START Name=Vdm2UmlTest KEEP=NO
  public Vdm2UmlTest () throws CGException {

    super(new String("Uml2XmiEclipseUmlTest"));
    vdm_init_Vdm2UmlTest();
  }
// ***** VDMTOOLS END Name=Vdm2UmlTest


// ***** VDMTOOLS START Name=SetUp KEEP=NO
  protected void SetUp () throws CGException {;
  }
// ***** VDMTOOLS END Name=SetUp


// ***** VDMTOOLS START Name=test01 KEEP=NO
  public void test01 () throws CGException {

    Vdm2Uml vu = new Vdm2Uml();
    IOmlSpecifications rhs_1 = null;
    OmlDocument obj_2 = null;
    obj_2 = new TestData().ClassAbstractOperation;
    rhs_1 = (IOmlSpecifications) obj_2.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_1);
    Boolean tmpArg_v_5 = null;
    Long var1_6 = null;
    HashSet unArg_7 = new HashSet();
    IUmlModel obj_8 = null;
    obj_8 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_7 = obj_8.getDefinitions();
    var1_6 = new Long(unArg_7.size());
    tmpArg_v_5 = new Boolean((var1_6.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_5);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_12 = null;
    OmlDocument obj_13 = null;
    obj_13 = new TestData().ClassAssociation;
    rhs_12 = (IOmlSpecifications) obj_13.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_12);
    Boolean tmpArg_v_16 = null;
    Long var1_17 = null;
    HashSet unArg_18 = new HashSet();
    IUmlModel obj_19 = null;
    obj_19 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_18 = obj_19.getDefinitions();
    var1_17 = new Long(unArg_18.size());
    tmpArg_v_16 = new Boolean((var1_17.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_16);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_23 = null;
    OmlDocument obj_24 = null;
    obj_24 = new TestData().ClassAssociationN;
    rhs_23 = (IOmlSpecifications) obj_24.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_23);
    Boolean tmpArg_v_27 = null;
    Long var1_28 = null;
    HashSet unArg_29 = new HashSet();
    IUmlModel obj_30 = null;
    obj_30 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_29 = obj_30.getDefinitions();
    var1_28 = new Long(unArg_29.size());
    tmpArg_v_27 = new Boolean((var1_28.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_27);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_34 = null;
    OmlDocument obj_35 = null;
    obj_35 = new TestData().ClassInheritance;
    rhs_34 = (IOmlSpecifications) obj_35.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_34);
    Boolean tmpArg_v_38 = null;
    Long var1_39 = null;
    HashSet unArg_40 = new HashSet();
    IUmlModel obj_41 = null;
    obj_41 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_40 = obj_41.getDefinitions();
    var1_39 = new Long(unArg_40.size());
    tmpArg_v_38 = new Boolean((var1_39.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_38);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_45 = null;
    OmlDocument obj_46 = null;
    obj_46 = new TestData().ClassInstanceUnionType;
    rhs_45 = (IOmlSpecifications) obj_46.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_45);
    Boolean tmpArg_v_49 = null;
    Long var1_50 = null;
    HashSet unArg_51 = new HashSet();
    IUmlModel obj_52 = null;
    obj_52 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_51 = obj_52.getDefinitions();
    var1_50 = new Long(unArg_51.size());
    tmpArg_v_49 = new Boolean((var1_50.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_49);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_56 = null;
    OmlDocument obj_57 = null;
    obj_57 = new TestData().ClassSimpleOperation;
    rhs_56 = (IOmlSpecifications) obj_57.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_56);
    Boolean tmpArg_v_60 = null;
    Long var1_61 = null;
    HashSet unArg_62 = new HashSet();
    IUmlModel obj_63 = null;
    obj_63 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_62 = obj_63.getDefinitions();
    var1_61 = new Long(unArg_62.size());
    tmpArg_v_60 = new Boolean((var1_61.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_60);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_67 = null;
    OmlDocument obj_68 = null;
    obj_68 = new TestData().ClassTemplates;
    rhs_67 = (IOmlSpecifications) obj_68.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_67);
    Boolean tmpArg_v_71 = null;
    Long var1_72 = null;
    HashSet unArg_73 = new HashSet();
    IUmlModel obj_74 = null;
    obj_74 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_73 = obj_74.getDefinitions();
    var1_72 = new Long(unArg_73.size());
    tmpArg_v_71 = new Boolean((var1_72.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_71);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_78 = null;
    OmlDocument obj_79 = null;
    obj_79 = new TestData().ClassWithMap;
    rhs_78 = (IOmlSpecifications) obj_79.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_78);
    Boolean tmpArg_v_82 = null;
    Long var1_83 = null;
    HashSet unArg_84 = new HashSet();
    IUmlModel obj_85 = null;
    obj_85 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_84 = obj_85.getDefinitions();
    var1_83 = new Long(unArg_84.size());
    tmpArg_v_82 = new Boolean((var1_83.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_82);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_89 = null;
    OmlDocument obj_90 = null;
    obj_90 = new TestData().ClassWithTypes;
    rhs_89 = (IOmlSpecifications) obj_90.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_89);
    Boolean tmpArg_v_93 = null;
    Long var1_94 = null;
    HashSet unArg_95 = new HashSet();
    IUmlModel obj_96 = null;
    obj_96 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_95 = obj_96.getDefinitions();
    var1_94 = new Long(unArg_95.size());
    tmpArg_v_93 = new Boolean((var1_94.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_93);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_100 = null;
    OmlDocument obj_101 = null;
    obj_101 = new TestData().ClassWithValues;
    rhs_100 = (IOmlSpecifications) obj_101.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_100);
    Boolean tmpArg_v_104 = null;
    Long var1_105 = null;
    HashSet unArg_106 = new HashSet();
    IUmlModel obj_107 = null;
    obj_107 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_106 = obj_107.getDefinitions();
    var1_105 = new Long(unArg_106.size());
    tmpArg_v_104 = new Boolean((var1_105.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_104);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_111 = null;
    OmlDocument obj_112 = null;
    obj_112 = new TestData().ClassSimpleFunction;
    rhs_111 = (IOmlSpecifications) obj_112.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_111);
    Boolean tmpArg_v_115 = null;
    Long var1_116 = null;
    HashSet unArg_117 = new HashSet();
    IUmlModel obj_118 = null;
    obj_118 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_117 = obj_118.getDefinitions();
    var1_116 = new Long(unArg_117.size());
    tmpArg_v_115 = new Boolean((var1_116.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_115);
    vu = (Vdm2Uml) UTIL.clone(new Vdm2Uml());
    IOmlSpecifications rhs_122 = null;
    OmlDocument obj_123 = null;
    obj_123 = new TestData().ClassInstanceVar;
    rhs_122 = (IOmlSpecifications) obj_123.getSpecifications();
    testSpec = (IOmlSpecifications) UTIL.clone(rhs_122);
    Boolean tmpArg_v_126 = null;
    Long var1_127 = null;
    HashSet unArg_128 = new HashSet();
    IUmlModel obj_129 = null;
    obj_129 = (IUmlModel) vu.init((IOmlSpecifications) testSpec);
    unArg_128 = obj_129.getDefinitions();
    var1_127 = new Long(unArg_128.size());
    tmpArg_v_126 = new Boolean((var1_127.intValue()) > (new Long(0).intValue()));
    assertTrue(tmpArg_v_126);
  }
// ***** VDMTOOLS END Name=test01


// ***** VDMTOOLS START Name=TearDown KEEP=NO
  protected void TearDown () throws CGException {}
// ***** VDMTOOLS END Name=TearDown

}
;
