//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2009-01-24 by the VDM++ to JAVA Code Generator
// (v8.2b - Fri 23-Jan-2009 13:05:50)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.umltrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public abstract class IUmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp


// ***** VDMTOOLS START Name=vdm_init_IUmlVisitor KEEP=NO
  private void vdm_init_IUmlVisitor () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_IUmlVisitor


// ***** VDMTOOLS START Name=IUmlVisitor KEEP=NO
  public IUmlVisitor () throws CGException {
    vdm_init_IUmlVisitor();
  }
// ***** VDMTOOLS END Name=IUmlVisitor


// ***** VDMTOOLS START Name=visitDocument#1|IUmlDocument KEEP=NO
  abstract public void visitDocument (final IUmlDocument var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDocument#1|IUmlDocument


// ***** VDMTOOLS START Name=visitLexem#1|IUmlLexem KEEP=NO
  abstract public void visitLexem (final IUmlLexem var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLexem#1|IUmlLexem


// ***** VDMTOOLS START Name=visitParameters#1|IUmlParameters KEEP=NO
  abstract public void visitParameters (final IUmlParameters var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitParameters#1|IUmlParameters


// ***** VDMTOOLS START Name=visitOperation#1|IUmlOperation KEEP=NO
  abstract public void visitOperation (final IUmlOperation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOperation#1|IUmlOperation


// ***** VDMTOOLS START Name=visitModel#1|IUmlModel KEEP=NO
  abstract public void visitModel (final IUmlModel var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitModel#1|IUmlModel


// ***** VDMTOOLS START Name=visitAssociation#1|IUmlAssociation KEEP=NO
  abstract public void visitAssociation (final IUmlAssociation var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitAssociation#1|IUmlAssociation


// ***** VDMTOOLS START Name=visitLifeLine#1|IUmlLifeLine KEEP=NO
  abstract public void visitLifeLine (final IUmlLifeLine var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLifeLine#1|IUmlLifeLine


// ***** VDMTOOLS START Name=visitNestedClassifiers#1|IUmlNestedClassifiers KEEP=NO
  abstract public void visitNestedClassifiers (final IUmlNestedClassifiers var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNestedClassifiers#1|IUmlNestedClassifiers


// ***** VDMTOOLS START Name=visitConstraint#1|IUmlConstraint KEEP=NO
  abstract public void visitConstraint (final IUmlConstraint var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitConstraint#1|IUmlConstraint


// ***** VDMTOOLS START Name=visitIntegerType#1|IUmlIntegerType KEEP=NO
  abstract public void visitIntegerType (final IUmlIntegerType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitIntegerType#1|IUmlIntegerType


// ***** VDMTOOLS START Name=visitCallEvent#1|IUmlCallEvent KEEP=NO
  abstract public void visitCallEvent (final IUmlCallEvent var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCallEvent#1|IUmlCallEvent


// ***** VDMTOOLS START Name=visitOwnedOperations#1|IUmlOwnedOperations KEEP=NO
  abstract public void visitOwnedOperations (final IUmlOwnedOperations var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOwnedOperations#1|IUmlOwnedOperations


// ***** VDMTOOLS START Name=visitProperty#1|IUmlProperty KEEP=NO
  abstract public void visitProperty (final IUmlProperty var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitProperty#1|IUmlProperty


// ***** VDMTOOLS START Name=visitCombinedFragment#1|IUmlCombinedFragment KEEP=NO
  abstract public void visitCombinedFragment (final IUmlCombinedFragment var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCombinedFragment#1|IUmlCombinedFragment


// ***** VDMTOOLS START Name=visitClassNameType#1|IUmlClassNameType KEEP=NO
  abstract public void visitClassNameType (final IUmlClassNameType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClassNameType#1|IUmlClassNameType


// ***** VDMTOOLS START Name=visitMos#1|IUmlMos KEEP=NO
  abstract public void visitMos (final IUmlMos var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMos#1|IUmlMos


// ***** VDMTOOLS START Name=visitInteractionConstraint#1|IUmlInteractionConstraint KEEP=NO
  abstract public void visitInteractionConstraint (final IUmlInteractionConstraint var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInteractionConstraint#1|IUmlInteractionConstraint


// ***** VDMTOOLS START Name=visitBoolType#1|IUmlBoolType KEEP=NO
  abstract public void visitBoolType (final IUmlBoolType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBoolType#1|IUmlBoolType


// ***** VDMTOOLS START Name=visitTemplateSignature#1|IUmlTemplateSignature KEEP=NO
  abstract public void visitTemplateSignature (final IUmlTemplateSignature var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTemplateSignature#1|IUmlTemplateSignature


// ***** VDMTOOLS START Name=visitParameter#1|IUmlParameter KEEP=NO
  abstract public void visitParameter (final IUmlParameter var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitParameter#1|IUmlParameter


// ***** VDMTOOLS START Name=visitInteraction#1|IUmlInteraction KEEP=NO
  abstract public void visitInteraction (final IUmlInteraction var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInteraction#1|IUmlInteraction


// ***** VDMTOOLS START Name=visitTemplateParameter#1|IUmlTemplateParameter KEEP=NO
  abstract public void visitTemplateParameter (final IUmlTemplateParameter var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitTemplateParameter#1|IUmlTemplateParameter


// ***** VDMTOOLS START Name=visitLiteralInteger#1|IUmlLiteralInteger KEEP=NO
  abstract public void visitLiteralInteger (final IUmlLiteralInteger var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLiteralInteger#1|IUmlLiteralInteger


// ***** VDMTOOLS START Name=visitMessage#1|IUmlMessage KEEP=NO
  abstract public void visitMessage (final IUmlMessage var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMessage#1|IUmlMessage


// ***** VDMTOOLS START Name=visitCharType#1|IUmlCharType KEEP=NO
  abstract public void visitCharType (final IUmlCharType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCharType#1|IUmlCharType


// ***** VDMTOOLS START Name=visitMultiplicityElement#1|IUmlMultiplicityElement KEEP=NO
  abstract public void visitMultiplicityElement (final IUmlMultiplicityElement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMultiplicityElement#1|IUmlMultiplicityElement


// ***** VDMTOOLS START Name=visitStringType#1|IUmlStringType KEEP=NO
  abstract public void visitStringType (final IUmlStringType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitStringType#1|IUmlStringType


// ***** VDMTOOLS START Name=visitBes#1|IUmlBes KEEP=NO
  abstract public void visitBes (final IUmlBes var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitBes#1|IUmlBes


// ***** VDMTOOLS START Name=visitVoidType#1|IUmlVoidType KEEP=NO
  abstract public void visitVoidType (final IUmlVoidType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitVoidType#1|IUmlVoidType


// ***** VDMTOOLS START Name=visitInteractionOperand#1|IUmlInteractionOperand KEEP=NO
  abstract public void visitInteractionOperand (final IUmlInteractionOperand var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInteractionOperand#1|IUmlInteractionOperand


// ***** VDMTOOLS START Name=visitClass#1|IUmlClass KEEP=NO
  abstract public void visitClass (final IUmlClass var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitClass#1|IUmlClass


// ***** VDMTOOLS START Name=visitCollaboration#1|IUmlCollaboration KEEP=NO
  abstract public void visitCollaboration (final IUmlCollaboration var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitCollaboration#1|IUmlCollaboration


// ***** VDMTOOLS START Name=visitLiteralString#1|IUmlLiteralString KEEP=NO
  abstract public void visitLiteralString (final IUmlLiteralString var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitLiteralString#1|IUmlLiteralString


// ***** VDMTOOLS START Name=visitOwnedProperties#1|IUmlOwnedProperties KEEP=NO
  abstract public void visitOwnedProperties (final IUmlOwnedProperties var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitOwnedProperties#1|IUmlOwnedProperties


// ***** VDMTOOLS START Name=visitUnlimitedNatural#1|IUmlUnlimitedNatural KEEP=NO
  abstract public void visitUnlimitedNatural (final IUmlUnlimitedNatural var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitUnlimitedNatural#1|IUmlUnlimitedNatural


// ***** VDMTOOLS START Name=visitContextInfo#1|IUmlContextInfo KEEP=NO
  abstract public void visitContextInfo (final IUmlContextInfo var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitContextInfo#1|IUmlContextInfo


// ***** VDMTOOLS START Name=visitNode#1|IUmlNode KEEP=NO
  abstract public void visitNode (final IUmlNode var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitNode#1|IUmlNode


// ***** VDMTOOLS START Name=visitParameterDirectionKind#1|IUmlParameterDirectionKind KEEP=NO
  abstract public void visitParameterDirectionKind (final IUmlParameterDirectionKind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitParameterDirectionKind#1|IUmlParameterDirectionKind


// ***** VDMTOOLS START Name=visitMessageKind#1|IUmlMessageKind KEEP=NO
  abstract public void visitMessageKind (final IUmlMessageKind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMessageKind#1|IUmlMessageKind


// ***** VDMTOOLS START Name=visitType#1|IUmlType KEEP=NO
  abstract public void visitType (final IUmlType var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitType#1|IUmlType


// ***** VDMTOOLS START Name=visitValueSpecification#1|IUmlValueSpecification KEEP=NO
  abstract public void visitValueSpecification (final IUmlValueSpecification var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitValueSpecification#1|IUmlValueSpecification


// ***** VDMTOOLS START Name=visitDefinitionBlock#1|IUmlDefinitionBlock KEEP=NO
  abstract public void visitDefinitionBlock (final IUmlDefinitionBlock var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitDefinitionBlock#1|IUmlDefinitionBlock


// ***** VDMTOOLS START Name=visitMessageSort#1|IUmlMessageSort KEEP=NO
  abstract public void visitMessageSort (final IUmlMessageSort var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitMessageSort#1|IUmlMessageSort


// ***** VDMTOOLS START Name=visitInteractionOperatorKind#1|IUmlInteractionOperatorKind KEEP=NO
  abstract public void visitInteractionOperatorKind (final IUmlInteractionOperatorKind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInteractionOperatorKind#1|IUmlInteractionOperatorKind


// ***** VDMTOOLS START Name=visitInteractionFragment#1|IUmlInteractionFragment KEEP=NO
  abstract public void visitInteractionFragment (final IUmlInteractionFragment var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitInteractionFragment#1|IUmlInteractionFragment


// ***** VDMTOOLS START Name=visitVisibilityKind#1|IUmlVisibilityKind KEEP=NO
  abstract public void visitVisibilityKind (final IUmlVisibilityKind var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitVisibilityKind#1|IUmlVisibilityKind


// ***** VDMTOOLS START Name=visitModelElement#1|IUmlModelElement KEEP=NO
  abstract public void visitModelElement (final IUmlModelElement var_1_1) throws CGException ;
// ***** VDMTOOLS END Name=visitModelElement#1|IUmlModelElement

}
;
