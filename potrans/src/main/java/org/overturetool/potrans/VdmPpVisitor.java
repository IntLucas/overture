//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class VdmPpVisitor extends OmlVisitor {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=result KEEP=NO
  public String result = null;
// ***** VDMTOOLS END Name=result

// ***** VDMTOOLS START Name=lvl KEEP=NO
  private Integer lvl = null;
// ***** VDMTOOLS END Name=lvl

// ***** VDMTOOLS START Name=nl KEEP=NO
  private static final String nl = new String("\015\n");
// ***** VDMTOOLS END Name=nl

// ***** VDMTOOLS START Name=prefix KEEP=NO
  private static final String prefix = new String("new Oml");
// ***** VDMTOOLS END Name=prefix

// ***** VDMTOOLS START Name=digits KEEP=NO
  public static final String digits = new String("0123456789");
// ***** VDMTOOLS END Name=digits


// ***** VDMTOOLS START Name=vdm_init_VdmPpVisitor KEEP=NO
  private void vdm_init_VdmPpVisitor () throws CGException {
    try {

      result = UTIL.ConvertToString(new String());
      lvl = new Integer(0);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_VdmPpVisitor


// ***** VDMTOOLS START Name=VdmPpVisitor KEEP=NO
  public VdmPpVisitor () throws CGException {
    vdm_init_VdmPpVisitor();
  }
// ***** VDMTOOLS END Name=VdmPpVisitor


// ***** VDMTOOLS START Name=nat2char#1|Integer KEEP=NO
  private String nat2char (final Integer n) throws CGException {
    if (new Boolean((n.intValue()) > (new Integer(10).intValue())).booleanValue()) {

      String rexpr_11 = null;
      rexpr_11 = nat2char(new Integer((int) (n.intValue() / new Integer(10).intValue()))).concat(nat2char(new Integer(n.intValue() % new Integer(10).intValue())));
      return rexpr_11;
    }
    else {

      String rexpr_5 = null;
      Character e_seq_6 = null;
      if ((1 <= new Integer(n.intValue() + new Integer(1).intValue()).intValue()) && (new Integer(n.intValue() + new Integer(1).intValue()).intValue() <= digits.length())) 
        e_seq_6 = new Character(digits.charAt(new Integer(n.intValue() + new Integer(1).intValue()).intValue() - 1));
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      rexpr_5 = new String();
      rexpr_5 = rexpr_5 + e_seq_6;
      return rexpr_5;
    }
  }
// ***** VDMTOOLS END Name=nat2char#1|Integer


// ***** VDMTOOLS START Name=pushNL KEEP=NO
  private void pushNL () throws CGException {
    lvl = UTIL.NumberToInt(UTIL.clone(new Integer(lvl.intValue() + new Integer(2).intValue())));
  }
// ***** VDMTOOLS END Name=pushNL


// ***** VDMTOOLS START Name=popNL KEEP=NO
  private void popNL () throws CGException {
    lvl = UTIL.NumberToInt(UTIL.clone(new Integer(lvl.intValue() - new Integer(2).intValue())));
  }
// ***** VDMTOOLS END Name=popNL


// ***** VDMTOOLS START Name=getNL KEEP=NO
  private String getNL () throws CGException {

    String res = nl;
    Integer cnt = lvl;
    while ( new Boolean((cnt.intValue()) > (new Integer(0).intValue())).booleanValue()){

      String rhs_4 = null;
      rhs_4 = res.concat(new String(" "));
      res = UTIL.ConvertToString(UTIL.clone(rhs_4));
      cnt = UTIL.NumberToInt(UTIL.clone(new Integer(cnt.intValue() - new Integer(1).intValue())));
    }
    return res;
  }
// ***** VDMTOOLS END Name=getNL


// ***** VDMTOOLS START Name=printBoolField#1|Boolean KEEP=NO
  private void printBoolField (final Boolean pval) throws CGException {

    String rhs_2 = null;
    if (pval.booleanValue()) 
      rhs_2 = new String("true");
    else 
      rhs_2 = new String("false");
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printBoolField#1|Boolean


// ***** VDMTOOLS START Name=printCharField#1|Character KEEP=NO
  private void printCharField (final Character pval) throws CGException {

    String rhs_2 = null;
    rhs_2 = new String();
    rhs_2 = rhs_2 + pval;
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printCharField#1|Character


// ***** VDMTOOLS START Name=printNatField#1|Integer KEEP=NO
  private void printNatField (final Integer n) throws CGException {

    String rhs_2 = null;
    String var1_3 = null;
    var1_3 = new String("\"").concat(nat2char(n));
    rhs_2 = var1_3.concat(new String("\""));
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printNatField#1|Integer


// ***** VDMTOOLS START Name=printRealField#1|Double KEEP=NO
  private void printRealField (final Double var_1_1) throws CGException {
    result = UTIL.ConvertToString(UTIL.clone(new String("REAL_FIELD")));
  }
// ***** VDMTOOLS END Name=printRealField#1|Double


// ***** VDMTOOLS START Name=printNodeField#1|IOmlNode KEEP=NO
  private void printNodeField (final IOmlNode pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=printNodeField#1|IOmlNode


// ***** VDMTOOLS START Name=printStringField#1|String KEEP=NO
  private void printStringField (final String str) throws CGException {

    String rhs_2 = null;
    String var1_3 = null;
    var1_3 = new String("\"").concat(str);
    rhs_2 = var1_3.concat(new String("\""));
    result = UTIL.ConvertToString(UTIL.clone(rhs_2));
  }
// ***** VDMTOOLS END Name=printStringField#1|String


// ***** VDMTOOLS START Name=printSeqofField#1|Vector KEEP=NO
  private void printSeqofField (final Vector pval) throws CGException {

    String str = new String("[");
    Integer cnt = new Integer(pval.size());
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Integer(0).intValue())).booleanValue()){

      Object tmpArg_v_11 = null;
      if ((1 <= new Integer(new Integer(new Integer(pval.size()).intValue() - cnt.intValue()).intValue() + new Integer(1).intValue()).intValue()) && (new Integer(new Integer(new Integer(pval.size()).intValue() - cnt.intValue()).intValue() + new Integer(1).intValue()).intValue() <= pval.size())) 
        tmpArg_v_11 = pval.get(new Integer(new Integer(new Integer(pval.size()).intValue() - cnt.intValue()).intValue() + new Integer(1).intValue()).intValue() - 1);
      else 
        UTIL.RunTime("Run-Time Error:Illegal index");
      printField(tmpArg_v_11);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
      if (new Boolean((cnt.intValue()) > (new Integer(1).intValue())).booleanValue()) {

        String rhs_25 = null;
        String var1_26 = null;
        var1_26 = str.concat(new String(","));
        rhs_25 = var1_26.concat(getNL());
        str = UTIL.ConvertToString(UTIL.clone(rhs_25));
      }
      cnt = UTIL.NumberToInt(UTIL.clone(new Integer(cnt.intValue() - new Integer(1).intValue())));
    }
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSeqofField#1|Vector


// ***** VDMTOOLS START Name=printSetofField#1|HashSet KEEP=NO
  private void printSetofField (final HashSet pval) throws CGException {

    String str = new String("{");
    Integer cnt = new Integer(pval.size());
    HashSet pvs = pval;
    pushNL();
    String rhs_4 = null;
    rhs_4 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    while ( new Boolean((cnt.intValue()) > (new Integer(0).intValue())).booleanValue()){

      HashSet tmpSet_10 = new HashSet();
      tmpSet_10 = pvs;
      Object pv = null;
      boolean succ_12 = false;
      for (Iterator enm_14 = tmpSet_10.iterator(); enm_14.hasNext() && !succ_12; ) {

        Object tmpElem_13 = enm_14.next();
        succ_12 = true;
        pv = tmpElem_13;
      }
      if (!succ_12) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_17 = null;
        rhs_17 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_17));
        HashSet rhs_20 = new HashSet();
        HashSet var2_22 = new HashSet();
        var2_22 = new HashSet();
        var2_22.add(pv);
        rhs_20 = (HashSet) pvs.clone();
        rhs_20.removeAll(var2_22);
        pvs = (HashSet) UTIL.clone(rhs_20);
        if (new Boolean((cnt.intValue()) > (new Integer(1).intValue())).booleanValue()) {

          String rhs_27 = null;
          String var1_28 = null;
          var1_28 = str.concat(new String(","));
          rhs_27 = var1_28.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_27));
        }
        cnt = UTIL.NumberToInt(UTIL.clone(new Integer(cnt.intValue() - new Integer(1).intValue())));
      }
    }
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printSetofField#1|HashSet


// ***** VDMTOOLS START Name=printMapField#1|HashMap KEEP=NO
  private void printMapField (final HashMap pval) throws CGException {

    String str = new String("{");
    Integer cnt = null;
    HashSet unArg_2 = new HashSet();
    unArg_2.clear();
    unArg_2.addAll(pval.keySet());
    cnt = new Integer(unArg_2.size());
    HashSet pvs = new HashSet();
    pvs.clear();
    pvs.addAll(pval.keySet());
    pushNL();
    String rhs_6 = null;
    rhs_6 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    while ( new Boolean((cnt.intValue()) > (new Integer(0).intValue())).booleanValue()){

      HashSet tmpSet_12 = new HashSet();
      tmpSet_12 = pvs;
      Object pv = null;
      boolean succ_14 = false;
      for (Iterator enm_16 = tmpSet_12.iterator(); enm_16.hasNext() && !succ_14; ) {

        Object tmpElem_15 = enm_16.next();
        succ_14 = true;
        pv = tmpElem_15;
      }
      if (!succ_14) 
        UTIL.RunTime("Run-Time Error:The binding environment was empty");
      {

        printField(pv);
        String rhs_19 = null;
        String var1_20 = null;
        var1_20 = str.concat(result);
        rhs_19 = var1_20.concat(new String(" |-> "));
        str = UTIL.ConvertToString(UTIL.clone(rhs_19));
        printField(pval.get(pv));
        String rhs_28 = null;
        rhs_28 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_28));
        HashSet rhs_31 = new HashSet();
        HashSet var2_33 = new HashSet();
        var2_33 = new HashSet();
        var2_33.add(pv);
        rhs_31 = (HashSet) pvs.clone();
        rhs_31.removeAll(var2_33);
        pvs = (HashSet) UTIL.clone(rhs_31);
        if (new Boolean((cnt.intValue()) > (new Integer(1).intValue())).booleanValue()) {

          String rhs_38 = null;
          String var1_39 = null;
          var1_39 = str.concat(new String(","));
          rhs_38 = var1_39.concat(getNL());
          str = UTIL.ConvertToString(UTIL.clone(rhs_38));
        }
        cnt = UTIL.NumberToInt(UTIL.clone(new Integer(cnt.intValue() - new Integer(1).intValue())));
      }
    }
    popNL();
    String rhs_47 = null;
    String var1_48 = null;
    var1_48 = str.concat(getNL());
    rhs_47 = var1_48.concat(new String("}"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printMapField#1|HashMap


// ***** VDMTOOLS START Name=printField#1|Object KEEP=NO
  private void printField (final Object fld) throws CGException {
    if (new Boolean((fld instanceof Boolean)).booleanValue()) 
      printBoolField((Boolean) fld);
    else 
      if (new Boolean((fld instanceof Character)).booleanValue()) 
        printCharField((Character) fld);
      else {
        if (new Boolean(UTIL.IsInteger(fld) && ((Number) fld).intValue() >= 0).booleanValue()) 
          printNatField(UTIL.NumberToInt(fld));
        else {
          if (new Boolean(UTIL.IsReal(fld)).booleanValue()) 
            printRealField(UTIL.NumberToReal(fld));
          else {

            Boolean cond_6 = null;
            cond_6 = new Boolean(fld instanceof IOmlNode);
            if (cond_6.booleanValue()) 
              printNodeField((IOmlNode) fld);
            else {
              printStringField(UTIL.ConvertToString(fld));
            }
          }
        }
      }
  }
// ***** VDMTOOLS END Name=printField#1|Object


// ***** VDMTOOLS START Name=printPositionInfo#1|IOmlNode KEEP=NO
  private void printPositionInfo (final IOmlNode pNode) throws CGException {

    String str = new String(".setLexemIndex(");
    Integer tmpArg_v_3 = null;
    tmpArg_v_3 = pNode.getLeftMostLexemIndex();
    printNatField(tmpArg_v_3);
    String rhs_4 = null;
    String var1_5 = null;
    var1_5 = str.concat(result);
    rhs_4 = var1_5.concat(new String(").setLexemIndex("));
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    Integer tmpArg_v_10 = null;
    tmpArg_v_10 = pNode.getRightMostLexemIndex();
    printNatField(tmpArg_v_10);
    String rhs_11 = null;
    String var1_12 = null;
    var1_12 = str.concat(result);
    rhs_11 = var1_12.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=printPositionInfo#1|IOmlNode


// ***** VDMTOOLS START Name=visitNode#1|IOmlNode KEEP=NO
  public void visitNode (final IOmlNode pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitNode#1|IOmlNode


// ***** VDMTOOLS START Name=visitDocument#1|IOmlDocument KEEP=NO
  public void visitDocument (final IOmlDocument pcmp) throws CGException {

    String str = new String("new OmlDocument(");
    pushNL();
    String tmpArg_v_4 = null;
    tmpArg_v_4 = pcmp.getFilename();
    printStringField(tmpArg_v_4);
    String rhs_5 = null;
    String var1_6 = null;
    String var1_7 = null;
    var1_7 = str.concat(result);
    var1_6 = var1_7.concat(new String(","));
    rhs_5 = var1_6.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_5));
    Boolean cond_12 = null;
    cond_12 = pcmp.hasSpecifications();
    if (cond_12.booleanValue()) {

      IOmlSpecifications tmpArg_v_14 = null;
      tmpArg_v_14 = (IOmlSpecifications) pcmp.getSpecifications();
      visitSpecifications((IOmlSpecifications) tmpArg_v_14);
    }
    Boolean cond_15 = null;
    cond_15 = pcmp.hasExpression();
    if (cond_15.booleanValue()) {

      IOmlExpression tmpArg_v_17 = null;
      tmpArg_v_17 = (IOmlExpression) pcmp.getExpression();
      visitExpression((IOmlExpression) tmpArg_v_17);
    }
    String rhs_18 = null;
    String var1_19 = null;
    String var1_20 = null;
    var1_20 = str.concat(result);
    var1_19 = var1_20.concat(new String(","));
    rhs_18 = var1_19.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    String rhs_25 = null;
    rhs_25 = str.concat(new String("["));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    pushNL();
    {

      Vector lexems = null;
      lexems = pcmp.getLexems();
      if (new Boolean((new Integer(lexems.size()).intValue()) > (new Integer(0).intValue())).booleanValue()) {

        String rhs_35 = null;
        rhs_35 = str.concat(getNL());
        str = UTIL.ConvertToString(UTIL.clone(rhs_35));
        for (int ilb_43 = 1; ilb_43 <= new Integer(new Integer(lexems.size()).intValue() - new Integer(1).intValue()).intValue(); ilb_43++) {

          Integer idx = new Integer(ilb_43);
          {

            IOmlLexem tmpArg_v_45 = null;
            if ((1 <= idx.intValue()) && (idx.intValue() <= lexems.size())) 
              tmpArg_v_45 = (IOmlLexem) lexems.get(idx.intValue() - 1);
            else 
              UTIL.RunTime("Run-Time Error:Illegal index");
            visitLexem((IOmlLexem) tmpArg_v_45);
            String rhs_48 = null;
            String var1_49 = null;
            String var1_50 = null;
            var1_50 = str.concat(result);
            var1_49 = var1_50.concat(new String(","));
            rhs_48 = var1_49.concat(getNL());
            str = UTIL.ConvertToString(UTIL.clone(rhs_48));
          }
        }
        IOmlLexem tmpArg_v_56 = null;
        if ((1 <= new Integer(lexems.size()).intValue()) && (new Integer(lexems.size()).intValue() <= lexems.size())) 
          tmpArg_v_56 = (IOmlLexem) lexems.get(new Integer(lexems.size()).intValue() - 1);
        else 
          UTIL.RunTime("Run-Time Error:Illegal index");
        visitLexem((IOmlLexem) tmpArg_v_56);
        String rhs_60 = null;
        rhs_60 = str.concat(result);
        str = UTIL.ConvertToString(UTIL.clone(rhs_60));
      }
    }
    popNL();
    String rhs_64 = null;
    String var1_65 = null;
    var1_65 = str.concat(getNL());
    rhs_64 = var1_65.concat(new String("]"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_64));
    popNL();
    String rhs_70 = null;
    String var1_71 = null;
    var1_71 = str.concat(getNL());
    rhs_70 = var1_71.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_70));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDocument#1|IOmlDocument


// ***** VDMTOOLS START Name=visitLexem#1|IOmlLexem KEEP=NO
  public void visitLexem (final IOmlLexem pcmp) throws CGException {

    String str = new String("new OmlLexem(");
    Integer tmpArg_v_3 = null;
    tmpArg_v_3 = pcmp.getLine();
    printNatField(tmpArg_v_3);
    String rhs_4 = null;
    String var1_5 = null;
    var1_5 = str.concat(result);
    rhs_4 = var1_5.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_4));
    Integer tmpArg_v_10 = null;
    tmpArg_v_10 = pcmp.getColumn();
    printNatField(tmpArg_v_10);
    String rhs_11 = null;
    String var1_12 = null;
    var1_12 = str.concat(result);
    rhs_11 = var1_12.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Integer tmpArg_v_17 = null;
    tmpArg_v_17 = pcmp.getLexval();
    printNatField(tmpArg_v_17);
    String rhs_18 = null;
    String var1_19 = null;
    var1_19 = str.concat(result);
    rhs_18 = var1_19.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_18));
    String tmpArg_v_24 = null;
    tmpArg_v_24 = pcmp.getText();
    printStringField(tmpArg_v_24);
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(result);
    rhs_25 = var1_26.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Integer tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getIndex();
    printNatField(tmpArg_v_31);
    String rhs_32 = null;
    String var1_33 = null;
    var1_33 = str.concat(result);
    rhs_32 = var1_33.concat(new String(","));
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Integer tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getType();
    printNatField(tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLexem#1|IOmlLexem


// ***** VDMTOOLS START Name=visitIsofclassExpression#1|IOmlIsofclassExpression KEEP=NO
  public void visitIsofclassExpression (final IOmlIsofclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsofclassExpression#1|IOmlIsofclassExpression


// ***** VDMTOOLS START Name=visitTrapStatement#1|IOmlTrapStatement KEEP=NO
  public void visitTrapStatement (final IOmlTrapStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getWithPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlStatement tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTrapStatement#1|IOmlTrapStatement


// ***** VDMTOOLS START Name=visitCasesStatement#1|IOmlCasesStatement KEEP=NO
  public void visitCasesStatement (final IOmlCasesStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getMatchExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getAlternativeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasOthersStatement();
    if (cond_28.booleanValue()) {

      IOmlStatement tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlStatement) pcmp.getOthersStatement();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesStatement#1|IOmlCasesStatement


// ***** VDMTOOLS START Name=visitFunctionBody#1|IOmlFunctionBody KEEP=NO
  public void visitFunctionBody (final IOmlFunctionBody pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasFunctionBody();
    if (cond_10.booleanValue()) {

      IOmlExpression tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExpression) pcmp.getFunctionBody();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getNotYetSpecified();
    printBoolField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getSubclassResponsibility();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionBody#1|IOmlFunctionBody


// ***** VDMTOOLS START Name=visitClass#1|IOmlClass KEEP=NO
  public void visitClass (final IOmlClass pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInheritanceClause();
    if (cond_28.booleanValue()) {

      IOmlInheritanceClause tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInheritanceClause) pcmp.getInheritanceClause();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    String var1_33 = null;
    String var1_34 = null;
    var1_34 = str.concat(result);
    var1_33 = var1_34.concat(new String(","));
    rhs_32 = var1_33.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    Vector tmpArg_v_40 = null;
    tmpArg_v_40 = pcmp.getClassBody();
    printSeqofField(tmpArg_v_40);
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    Boolean tmpArg_v_49 = null;
    tmpArg_v_49 = pcmp.getSystemSpec();
    printBoolField(tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    Boolean cond_59 = null;
    cond_59 = pcmp.hasPositionInfo();
    if (cond_59.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_62 = null;
      rhs_62 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_62));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClass#1|IOmlClass


// ***** VDMTOOLS START Name=visitSpecifications#1|IOmlSpecifications KEEP=NO
  public void visitSpecifications (final IOmlSpecifications pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getClassList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecifications#1|IOmlSpecifications


// ***** VDMTOOLS START Name=visitSeq0Type#1|IOmlSeq0Type KEEP=NO
  public void visitSeq0Type (final IOmlSeq0Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeq0Type#1|IOmlSeq0Type


// ***** VDMTOOLS START Name=visitBinaryExpression#1|IOmlBinaryExpression KEEP=NO
  public void visitBinaryExpression (final IOmlBinaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlBinaryOperator tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlBinaryOperator) pcmp.getOperator();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryExpression#1|IOmlBinaryExpression


// ***** VDMTOOLS START Name=visitValueShape#1|IOmlValueShape KEEP=NO
  public void visitValueShape (final IOmlValueShape pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasType();
    if (cond_19.booleanValue()) {

      IOmlType tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlType) pcmp.getType();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlExpression tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueShape#1|IOmlValueShape


// ***** VDMTOOLS START Name=visitMutexPredicate#1|IOmlMutexPredicate KEEP=NO
  public void visitMutexPredicate (final IOmlMutexPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMutexPredicate#1|IOmlMutexPredicate


// ***** VDMTOOLS START Name=visitOperationDefinitions#1|IOmlOperationDefinitions KEEP=NO
  public void visitOperationDefinitions (final IOmlOperationDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getOperationList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinitions#1|IOmlOperationDefinitions


// ***** VDMTOOLS START Name=visitFieldSelect#1|IOmlFieldSelect KEEP=NO
  public void visitFieldSelect (final IOmlFieldSelect pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFieldSelect#1|IOmlFieldSelect


// ***** VDMTOOLS START Name=visitReturnStatement#1|IOmlReturnStatement KEEP=NO
  public void visitReturnStatement (final IOmlReturnStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasExpression();
    if (cond_6.booleanValue()) {

      IOmlExpression tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    rhs_10 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    String rhs_13 = null;
    rhs_13 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_13));
    Boolean cond_16 = null;
    cond_16 = pcmp.hasPositionInfo();
    if (cond_16.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitReturnStatement#1|IOmlReturnStatement


// ***** VDMTOOLS START Name=visitActExpression#1|IOmlActExpression KEEP=NO
  public void visitActExpression (final IOmlActExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitActExpression#1|IOmlActExpression


// ***** VDMTOOLS START Name=visitInstanceVariableDefinitions#1|IOmlInstanceVariableDefinitions KEEP=NO
  public void visitInstanceVariableDefinitions (final IOmlInstanceVariableDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVariablesList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariableDefinitions#1|IOmlInstanceVariableDefinitions


// ***** VDMTOOLS START Name=visitIntType#1|IOmlIntType KEEP=NO
  public void visitIntType (final IOmlIntType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIntType#1|IOmlIntType


// ***** VDMTOOLS START Name=visitThreadIdExpression#1|IOmlThreadIdExpression KEEP=NO
  public void visitThreadIdExpression (final IOmlThreadIdExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThreadIdExpression#1|IOmlThreadIdExpression


// ***** VDMTOOLS START Name=visitLetStatement#1|IOmlLetStatement KEEP=NO
  public void visitLetStatement (final IOmlLetStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetStatement#1|IOmlLetStatement


// ***** VDMTOOLS START Name=visitFinExpression#1|IOmlFinExpression KEEP=NO
  public void visitFinExpression (final IOmlFinExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFinExpression#1|IOmlFinExpression


// ***** VDMTOOLS START Name=visitDefStatement#1|IOmlDefStatement KEEP=NO
  public void visitDefStatement (final IOmlDefStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDefStatement#1|IOmlDefStatement


// ***** VDMTOOLS START Name=visitSequenceForLoop#1|IOmlSequenceForLoop KEEP=NO
  public void visitSequenceForLoop (final IOmlSequenceForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getInReverse();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlStatement tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    Boolean cond_48 = null;
    cond_48 = pcmp.hasPositionInfo();
    if (cond_48.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_51 = null;
      rhs_51 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_51));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceForLoop#1|IOmlSequenceForLoop


// ***** VDMTOOLS START Name=visitTrapDefinition#1|IOmlTrapDefinition KEEP=NO
  public void visitTrapDefinition (final IOmlTrapDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTrapDefinition#1|IOmlTrapDefinition


// ***** VDMTOOLS START Name=visitFunctionDefinition#1|IOmlFunctionDefinition KEEP=NO
  public void visitFunctionDefinition (final IOmlFunctionDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlFunctionShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlFunctionShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionDefinition#1|IOmlFunctionDefinition


// ***** VDMTOOLS START Name=visitSamebaseclassExpression#1|IOmlSamebaseclassExpression KEEP=NO
  public void visitSamebaseclassExpression (final IOmlSamebaseclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSamebaseclassExpression#1|IOmlSamebaseclassExpression


// ***** VDMTOOLS START Name=visitSkipStatement#1|IOmlSkipStatement KEEP=NO
  public void visitSkipStatement (final IOmlSkipStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSkipStatement#1|IOmlSkipStatement


// ***** VDMTOOLS START Name=visitPatternIdentifier#1|IOmlPatternIdentifier KEEP=NO
  public void visitPatternIdentifier (final IOmlPatternIdentifier pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternIdentifier#1|IOmlPatternIdentifier


// ***** VDMTOOLS START Name=visitCompositeType#1|IOmlCompositeType KEEP=NO
  public void visitCompositeType (final IOmlCompositeType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getFieldList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCompositeType#1|IOmlCompositeType


// ***** VDMTOOLS START Name=visitNondeterministicStatement#1|IOmlNondeterministicStatement KEEP=NO
  public void visitNondeterministicStatement (final IOmlNondeterministicStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getStatementList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNondeterministicStatement#1|IOmlNondeterministicStatement


// ***** VDMTOOLS START Name=visitExceptions#1|IOmlExceptions KEEP=NO
  public void visitExceptions (final IOmlExceptions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getErrorList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExceptions#1|IOmlExceptions


// ***** VDMTOOLS START Name=visitNumericLiteral#1|IOmlNumericLiteral KEEP=NO
  public void visitNumericLiteral (final IOmlNumericLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Integer tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNumericLiteral#1|IOmlNumericLiteral


// ***** VDMTOOLS START Name=visitNilLiteral#1|IOmlNilLiteral KEEP=NO
  public void visitNilLiteral (final IOmlNilLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNilLiteral#1|IOmlNilLiteral


// ***** VDMTOOLS START Name=visitMapEnumeration#1|IOmlMapEnumeration KEEP=NO
  public void visitMapEnumeration (final IOmlMapEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getMapletList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapEnumeration#1|IOmlMapEnumeration


// ***** VDMTOOLS START Name=visitCasesStatementAlternative#1|IOmlCasesStatementAlternative KEEP=NO
  public void visitCasesStatementAlternative (final IOmlCasesStatementAlternative pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesStatementAlternative#1|IOmlCasesStatementAlternative


// ***** VDMTOOLS START Name=visitLetBeExpression#1|IOmlLetBeExpression KEEP=NO
  public void visitLetBeExpression (final IOmlLetBeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasBest();
    if (cond_19.booleanValue()) {

      IOmlExpression tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlExpression) pcmp.getBest();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlExpression tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetBeExpression#1|IOmlLetBeExpression


// ***** VDMTOOLS START Name=visitFunctionTypeInstantiation#1|IOmlFunctionTypeInstantiation KEEP=NO
  public void visitFunctionTypeInstantiation (final IOmlFunctionTypeInstantiation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTypeInstantiation#1|IOmlFunctionTypeInstantiation


// ***** VDMTOOLS START Name=visitIndexForLoop#1|IOmlIndexForLoop KEEP=NO
  public void visitIndexForLoop (final IOmlIndexForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getInitExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getLimitExpression();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean cond_37 = null;
    cond_37 = pcmp.hasByExpression();
    if (cond_37.booleanValue()) {

      IOmlExpression tmpArg_v_40 = null;
      tmpArg_v_40 = (IOmlExpression) pcmp.getByExpression();
      printNodeField((IOmlNode) tmpArg_v_40);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_41 = null;
    String var1_42 = null;
    String var1_43 = null;
    var1_43 = str.concat(result);
    var1_42 = var1_43.concat(new String(","));
    rhs_41 = var1_42.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    IOmlStatement tmpArg_v_49 = null;
    tmpArg_v_49 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_49);
    String rhs_50 = null;
    rhs_50 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_50));
    popNL();
    String rhs_54 = null;
    String var1_55 = null;
    var1_55 = str.concat(getNL());
    rhs_54 = var1_55.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_54));
    Boolean cond_59 = null;
    cond_59 = pcmp.hasPositionInfo();
    if (cond_59.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_62 = null;
      rhs_62 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_62));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIndexForLoop#1|IOmlIndexForLoop


// ***** VDMTOOLS START Name=visitPeriodicThread#1|IOmlPeriodicThread KEEP=NO
  public void visitPeriodicThread (final IOmlPeriodicThread pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getArgs();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPeriodicThread#1|IOmlPeriodicThread


// ***** VDMTOOLS START Name=visitQuoteLiteral#1|IOmlQuoteLiteral KEEP=NO
  public void visitQuoteLiteral (final IOmlQuoteLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitQuoteLiteral#1|IOmlQuoteLiteral


// ***** VDMTOOLS START Name=visitOldName#1|IOmlOldName KEEP=NO
  public void visitOldName (final IOmlOldName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOldName#1|IOmlOldName


// ***** VDMTOOLS START Name=visitMuExpression#1|IOmlMuExpression KEEP=NO
  public void visitMuExpression (final IOmlMuExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getModifierList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMuExpression#1|IOmlMuExpression


// ***** VDMTOOLS START Name=visitForAllExpression#1|IOmlForAllExpression KEEP=NO
  public void visitForAllExpression (final IOmlForAllExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitForAllExpression#1|IOmlForAllExpression


// ***** VDMTOOLS START Name=visitPermissionPredicate#1|IOmlPermissionPredicate KEEP=NO
  public void visitPermissionPredicate (final IOmlPermissionPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPermissionPredicate#1|IOmlPermissionPredicate


// ***** VDMTOOLS START Name=visitPartialFunctionType#1|IOmlPartialFunctionType KEEP=NO
  public void visitPartialFunctionType (final IOmlPartialFunctionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPartialFunctionType#1|IOmlPartialFunctionType


// ***** VDMTOOLS START Name=visitProductType#1|IOmlProductType KEEP=NO
  public void visitProductType (final IOmlProductType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getLhsType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRhsType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitProductType#1|IOmlProductType


// ***** VDMTOOLS START Name=visitDefExpression#1|IOmlDefExpression KEEP=NO
  public void visitDefExpression (final IOmlDefExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDefExpression#1|IOmlDefExpression


// ***** VDMTOOLS START Name=visitTimeExpression#1|IOmlTimeExpression KEEP=NO
  public void visitTimeExpression (final IOmlTimeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTimeExpression#1|IOmlTimeExpression


// ***** VDMTOOLS START Name=visitTokenExpression#1|IOmlTokenExpression KEEP=NO
  public void visitTokenExpression (final IOmlTokenExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTokenExpression#1|IOmlTokenExpression


// ***** VDMTOOLS START Name=visitLetBeStatement#1|IOmlLetBeStatement KEEP=NO
  public void visitLetBeStatement (final IOmlLetBeStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean cond_19 = null;
    cond_19 = pcmp.hasBest();
    if (cond_19.booleanValue()) {

      IOmlExpression tmpArg_v_22 = null;
      tmpArg_v_22 = (IOmlExpression) pcmp.getBest();
      printNodeField((IOmlNode) tmpArg_v_22);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    IOmlStatement tmpArg_v_31 = null;
    tmpArg_v_31 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetBeStatement#1|IOmlLetBeStatement


// ***** VDMTOOLS START Name=visitObjectFieldReference#1|IOmlObjectFieldReference KEEP=NO
  public void visitObjectFieldReference (final IOmlObjectFieldReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlObjectDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlName tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectFieldReference#1|IOmlObjectFieldReference


// ***** VDMTOOLS START Name=visitError#1|IOmlError KEEP=NO
  public void visitError (final IOmlError pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getLhs();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getRhs();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitError#1|IOmlError


// ***** VDMTOOLS START Name=visitWaitingExpression#1|IOmlWaitingExpression KEEP=NO
  public void visitWaitingExpression (final IOmlWaitingExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitWaitingExpression#1|IOmlWaitingExpression


// ***** VDMTOOLS START Name=visitRealLiteral#1|IOmlRealLiteral KEEP=NO
  public void visitRealLiteral (final IOmlRealLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Double tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printRealField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRealLiteral#1|IOmlRealLiteral


// ***** VDMTOOLS START Name=visitUnaryExpression#1|IOmlUnaryExpression KEEP=NO
  public void visitUnaryExpression (final IOmlUnaryExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlUnaryOperator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlUnaryOperator) pcmp.getOperator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryExpression#1|IOmlUnaryExpression


// ***** VDMTOOLS START Name=visitTypeDefinition#1|IOmlTypeDefinition KEEP=NO
  public void visitTypeDefinition (final IOmlTypeDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlTypeShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlTypeShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeDefinition#1|IOmlTypeDefinition


// ***** VDMTOOLS START Name=visitRealType#1|IOmlRealType KEEP=NO
  public void visitRealType (final IOmlRealType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRealType#1|IOmlRealType


// ***** VDMTOOLS START Name=visitSetEnumeration#1|IOmlSetEnumeration KEEP=NO
  public void visitSetEnumeration (final IOmlSetEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetEnumeration#1|IOmlSetEnumeration


// ***** VDMTOOLS START Name=visitTuplePattern#1|IOmlTuplePattern KEEP=NO
  public void visitTuplePattern (final IOmlTuplePattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTuplePattern#1|IOmlTuplePattern


// ***** VDMTOOLS START Name=visitRatType#1|IOmlRatType KEEP=NO
  public void visitRatType (final IOmlRatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRatType#1|IOmlRatType


// ***** VDMTOOLS START Name=visitBracketedType#1|IOmlBracketedType KEEP=NO
  public void visitBracketedType (final IOmlBracketedType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBracketedType#1|IOmlBracketedType


// ***** VDMTOOLS START Name=visitTypeDefinitions#1|IOmlTypeDefinitions KEEP=NO
  public void visitTypeDefinitions (final IOmlTypeDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getTypeList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeDefinitions#1|IOmlTypeDefinitions


// ***** VDMTOOLS START Name=visitIotaExpression#1|IOmlIotaExpression KEEP=NO
  public void visitIotaExpression (final IOmlIotaExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIotaExpression#1|IOmlIotaExpression


// ***** VDMTOOLS START Name=visitTextLiteral#1|IOmlTextLiteral KEEP=NO
  public void visitTextLiteral (final IOmlTextLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTextLiteral#1|IOmlTextLiteral


// ***** VDMTOOLS START Name=visitThreadDefinition#1|IOmlThreadDefinition KEEP=NO
  public void visitThreadDefinition (final IOmlThreadDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasThreadSpecification();
    if (cond_6.booleanValue()) {

      IOmlThreadSpecification tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlThreadSpecification) pcmp.getThreadSpecification();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    rhs_10 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    String rhs_13 = null;
    rhs_13 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_13));
    Boolean cond_16 = null;
    cond_16 = pcmp.hasPositionInfo();
    if (cond_16.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitThreadDefinition#1|IOmlThreadDefinition


// ***** VDMTOOLS START Name=visitSameclassExpression#1|IOmlSameclassExpression KEEP=NO
  public void visitSameclassExpression (final IOmlSameclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLhsExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRhsExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSameclassExpression#1|IOmlSameclassExpression


// ***** VDMTOOLS START Name=visitName#1|IOmlName KEEP=NO
  public void visitName (final IOmlName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasClassIdentifier();
    if (cond_10.booleanValue()) {

      String tmpArg_v_13 = null;
      tmpArg_v_13 = pcmp.getClassIdentifier();
      printStringField(tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    String tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getIdentifier();
    printStringField(tmpArg_v_22);
    String rhs_23 = null;
    rhs_23 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    popNL();
    String rhs_27 = null;
    String var1_28 = null;
    var1_28 = str.concat(getNL());
    rhs_27 = var1_28.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_27));
    Boolean cond_32 = null;
    cond_32 = pcmp.hasPositionInfo();
    if (cond_32.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_35 = null;
      rhs_35 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_35));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitName#1|IOmlName


// ***** VDMTOOLS START Name=visitAtomicStatement#1|IOmlAtomicStatement KEEP=NO
  public void visitAtomicStatement (final IOmlAtomicStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getAssignmentList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAtomicStatement#1|IOmlAtomicStatement


// ***** VDMTOOLS START Name=visitOperationTrailer#1|IOmlOperationTrailer KEEP=NO
  public void visitOperationTrailer (final IOmlOperationTrailer pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasExternals();
    if (cond_10.booleanValue()) {

      IOmlExternals tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExternals) pcmp.getExternals();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPreExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    String var1_26 = null;
    String var1_27 = null;
    var1_27 = str.concat(result);
    var1_26 = var1_27.concat(new String(","));
    rhs_25 = var1_26.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_32 = null;
    cond_32 = pcmp.hasPostExpression();
    if (cond_32.booleanValue()) {

      IOmlExpression tmpArg_v_35 = null;
      tmpArg_v_35 = (IOmlExpression) pcmp.getPostExpression();
      printNodeField((IOmlNode) tmpArg_v_35);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_36 = null;
    String var1_37 = null;
    String var1_38 = null;
    var1_38 = str.concat(result);
    var1_37 = var1_38.concat(new String(","));
    rhs_36 = var1_37.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_43 = null;
    cond_43 = pcmp.hasExceptions();
    if (cond_43.booleanValue()) {

      IOmlExceptions tmpArg_v_46 = null;
      tmpArg_v_46 = (IOmlExceptions) pcmp.getExceptions();
      printNodeField((IOmlNode) tmpArg_v_46);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_47 = null;
    rhs_47 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_47));
    popNL();
    String rhs_51 = null;
    String var1_52 = null;
    var1_52 = str.concat(getNL());
    rhs_51 = var1_52.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_51));
    Boolean cond_56 = null;
    cond_56 = pcmp.hasPositionInfo();
    if (cond_56.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_59 = null;
      rhs_59 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_59));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationTrailer#1|IOmlOperationTrailer


// ***** VDMTOOLS START Name=visitFunctionTypeSelect#1|IOmlFunctionTypeSelect KEEP=NO
  public void visitFunctionTypeSelect (final IOmlFunctionTypeSelect pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlFunctionTypeInstantiation tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlFunctionTypeInstantiation) pcmp.getFunctionTypeInstantiation();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTypeSelect#1|IOmlFunctionTypeSelect


// ***** VDMTOOLS START Name=visitInheritanceClause#1|IOmlInheritanceClause KEEP=NO
  public void visitInheritanceClause (final IOmlInheritanceClause pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifierList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInheritanceClause#1|IOmlInheritanceClause


// ***** VDMTOOLS START Name=visitBooleanLiteral#1|IOmlBooleanLiteral KEEP=NO
  public void visitBooleanLiteral (final IOmlBooleanLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printBoolField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBooleanLiteral#1|IOmlBooleanLiteral


// ***** VDMTOOLS START Name=visitSetEnumPattern#1|IOmlSetEnumPattern KEEP=NO
  public void visitSetEnumPattern (final IOmlSetEnumPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetEnumPattern#1|IOmlSetEnumPattern


// ***** VDMTOOLS START Name=visitExitStatement#1|IOmlExitStatement KEEP=NO
  public void visitExitStatement (final IOmlExitStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Boolean cond_6 = null;
    cond_6 = pcmp.hasExpression();
    if (cond_6.booleanValue()) {

      IOmlExpression tmpArg_v_9 = null;
      tmpArg_v_9 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_9);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_10 = null;
    rhs_10 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_10));
    String rhs_13 = null;
    rhs_13 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_13));
    Boolean cond_16 = null;
    cond_16 = pcmp.hasPositionInfo();
    if (cond_16.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_19 = null;
      rhs_19 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_19));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExitStatement#1|IOmlExitStatement


// ***** VDMTOOLS START Name=visitElseIfExpression#1|IOmlElseIfExpression KEEP=NO
  public void visitElseIfExpression (final IOmlElseIfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getElseifExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getThenExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitElseIfExpression#1|IOmlElseIfExpression


// ***** VDMTOOLS START Name=visitMaplet#1|IOmlMaplet KEEP=NO
  public void visitMaplet (final IOmlMaplet pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getDomExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getRngExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMaplet#1|IOmlMaplet


// ***** VDMTOOLS START Name=visitField#1|IOmlField KEEP=NO
  public void visitField (final IOmlField pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasIdentifier();
    if (cond_10.booleanValue()) {

      String tmpArg_v_13 = null;
      tmpArg_v_13 = pcmp.getIdentifier();
      printStringField(tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IOmlType tmpArg_v_22 = null;
    tmpArg_v_22 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getIgnore();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitField#1|IOmlField


// ***** VDMTOOLS START Name=visitSetUnionPattern#1|IOmlSetUnionPattern KEEP=NO
  public void visitSetUnionPattern (final IOmlSetUnionPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getLhsPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlPattern tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlPattern) pcmp.getRhsPattern();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetUnionPattern#1|IOmlSetUnionPattern


// ***** VDMTOOLS START Name=visitIdentifierTypePair#1|IOmlIdentifierTypePair KEEP=NO
  public void visitIdentifierTypePair (final IOmlIdentifierTypePair pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIdentifierTypePair#1|IOmlIdentifierTypePair


// ***** VDMTOOLS START Name=visitQuoteType#1|IOmlQuoteType KEEP=NO
  public void visitQuoteType (final IOmlQuoteType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlQuoteLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlQuoteLiteral) pcmp.getQuoteLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitQuoteType#1|IOmlQuoteType


// ***** VDMTOOLS START Name=visitInjectiveMapType#1|IOmlInjectiveMapType KEEP=NO
  public void visitInjectiveMapType (final IOmlInjectiveMapType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInjectiveMapType#1|IOmlInjectiveMapType


// ***** VDMTOOLS START Name=visitClassTypeInstantiation#1|IOmlClassTypeInstantiation KEEP=NO
  public void visitClassTypeInstantiation (final IOmlClassTypeInstantiation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitClassTypeInstantiation#1|IOmlClassTypeInstantiation


// ***** VDMTOOLS START Name=visitSymbolicLiteralPattern#1|IOmlSymbolicLiteralPattern KEEP=NO
  public void visitSymbolicLiteralPattern (final IOmlSymbolicLiteralPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlLiteral) pcmp.getLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSymbolicLiteralPattern#1|IOmlSymbolicLiteralPattern


// ***** VDMTOOLS START Name=visitMatchValue#1|IOmlMatchValue KEEP=NO
  public void visitMatchValue (final IOmlMatchValue pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMatchValue#1|IOmlMatchValue


// ***** VDMTOOLS START Name=visitCyclesStatement#1|IOmlCyclesStatement KEEP=NO
  public void visitCyclesStatement (final IOmlCyclesStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getCyclesExpression();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCyclesStatement#1|IOmlCyclesStatement


// ***** VDMTOOLS START Name=visitTypeName#1|IOmlTypeName KEEP=NO
  public void visitTypeName (final IOmlTypeName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlName tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeName#1|IOmlTypeName


// ***** VDMTOOLS START Name=visitIfStatement#1|IOmlIfStatement KEEP=NO
  public void visitIfStatement (final IOmlIfStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getThenStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getElseifStatement();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Boolean cond_37 = null;
    cond_37 = pcmp.hasElseStatement();
    if (cond_37.booleanValue()) {

      IOmlStatement tmpArg_v_40 = null;
      tmpArg_v_40 = (IOmlStatement) pcmp.getElseStatement();
      printNodeField((IOmlNode) tmpArg_v_40);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_41 = null;
    rhs_41 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_41));
    popNL();
    String rhs_45 = null;
    String var1_46 = null;
    var1_46 = str.concat(getNL());
    rhs_45 = var1_46.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    Boolean cond_50 = null;
    cond_50 = pcmp.hasPositionInfo();
    if (cond_50.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_53 = null;
      rhs_53 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_53));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIfStatement#1|IOmlIfStatement


// ***** VDMTOOLS START Name=visitFunctionDefinitions#1|IOmlFunctionDefinitions KEEP=NO
  public void visitFunctionDefinitions (final IOmlFunctionDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getFunctionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionDefinitions#1|IOmlFunctionDefinitions


// ***** VDMTOOLS START Name=visitSubsequenceExpression#1|IOmlSubsequenceExpression KEEP=NO
  public void visitSubsequenceExpression (final IOmlSubsequenceExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getLower();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlExpression tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlExpression) pcmp.getUpper();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSubsequenceExpression#1|IOmlSubsequenceExpression


// ***** VDMTOOLS START Name=visitSequenceEnumeration#1|IOmlSequenceEnumeration KEEP=NO
  public void visitSequenceEnumeration (final IOmlSequenceEnumeration pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceEnumeration#1|IOmlSequenceEnumeration


// ***** VDMTOOLS START Name=visitParameter#1|IOmlParameter KEEP=NO
  public void visitParameter (final IOmlParameter pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitParameter#1|IOmlParameter


// ***** VDMTOOLS START Name=visitInstanceVariable#1|IOmlInstanceVariable KEEP=NO
  public void visitInstanceVariable (final IOmlInstanceVariable pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlAssignmentDefinition tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlAssignmentDefinition) pcmp.getAssignmentDefinition();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariable#1|IOmlInstanceVariable


// ***** VDMTOOLS START Name=visitOperationDefinition#1|IOmlOperationDefinition KEEP=NO
  public void visitOperationDefinition (final IOmlOperationDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlOperationShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlOperationShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationDefinition#1|IOmlOperationDefinition


// ***** VDMTOOLS START Name=visitAssignmentDefinition#1|IOmlAssignmentDefinition KEEP=NO
  public void visitAssignmentDefinition (final IOmlAssignmentDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasExpression();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getExpression();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAssignmentDefinition#1|IOmlAssignmentDefinition


// ***** VDMTOOLS START Name=visitSynchronizationDefinitions#1|IOmlSynchronizationDefinitions KEEP=NO
  public void visitSynchronizationDefinitions (final IOmlSynchronizationDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getSyncList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSynchronizationDefinitions#1|IOmlSynchronizationDefinitions


// ***** VDMTOOLS START Name=visitCasesExpressionAlternative#1|IOmlCasesExpressionAlternative KEEP=NO
  public void visitCasesExpressionAlternative (final IOmlCasesExpressionAlternative pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesExpressionAlternative#1|IOmlCasesExpressionAlternative


// ***** VDMTOOLS START Name=visitElseIfStatement#1|IOmlElseIfStatement KEEP=NO
  public void visitElseIfStatement (final IOmlElseIfStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitElseIfStatement#1|IOmlElseIfStatement


// ***** VDMTOOLS START Name=visitSetForLoop#1|IOmlSetForLoop KEEP=NO
  public void visitSetForLoop (final IOmlSetForLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlStatement tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetForLoop#1|IOmlSetForLoop


// ***** VDMTOOLS START Name=visitDurationStatement#1|IOmlDurationStatement KEEP=NO
  public void visitDurationStatement (final IOmlDurationStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDurationExpression();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDurationStatement#1|IOmlDurationStatement


// ***** VDMTOOLS START Name=visitVarInformation#1|IOmlVarInformation KEEP=NO
  public void visitVarInformation (final IOmlVarInformation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlMode tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlMode) pcmp.getMode();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getNameList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasType();
    if (cond_28.booleanValue()) {

      IOmlType tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlType) pcmp.getType();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitVarInformation#1|IOmlVarInformation


// ***** VDMTOOLS START Name=visitLetExpression#1|IOmlLetExpression KEEP=NO
  public void visitLetExpression (final IOmlLetExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLetExpression#1|IOmlLetExpression


// ***** VDMTOOLS START Name=visitProcedureThread#1|IOmlProcedureThread KEEP=NO
  public void visitProcedureThread (final IOmlProcedureThread pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlStatement tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitProcedureThread#1|IOmlProcedureThread


// ***** VDMTOOLS START Name=visitExplicitOperation#1|IOmlExplicitOperation KEEP=NO
  public void visitExplicitOperation (final IOmlExplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationBody tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlOperationTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    Boolean cond_57 = null;
    cond_57 = pcmp.hasPositionInfo();
    if (cond_57.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_60 = null;
      rhs_60 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_60));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExplicitOperation#1|IOmlExplicitOperation


// ***** VDMTOOLS START Name=visitOperationBody#1|IOmlOperationBody KEEP=NO
  public void visitOperationBody (final IOmlOperationBody pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasStatement();
    if (cond_10.booleanValue()) {

      IOmlStatement tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlStatement) pcmp.getStatement();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean tmpArg_v_22 = null;
    tmpArg_v_22 = pcmp.getNotYetSpecified();
    printBoolField(tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Boolean tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getSubclassResponsibility();
    printBoolField(tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationBody#1|IOmlOperationBody


// ***** VDMTOOLS START Name=visitIsofbaseclassExpression#1|IOmlIsofbaseclassExpression KEEP=NO
  public void visitIsofbaseclassExpression (final IOmlIsofbaseclassExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsofbaseclassExpression#1|IOmlIsofbaseclassExpression


// ***** VDMTOOLS START Name=visitSequenceComprehension#1|IOmlSequenceComprehension KEEP=NO
  public void visitSequenceComprehension (final IOmlSequenceComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlSetBind tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlSetBind) pcmp.getSetBind();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSequenceComprehension#1|IOmlSequenceComprehension


// ***** VDMTOOLS START Name=visitTypeBind#1|IOmlTypeBind KEEP=NO
  public void visitTypeBind (final IOmlTypeBind pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPattern();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeBind#1|IOmlTypeBind


// ***** VDMTOOLS START Name=visitInstanceVariableInvariant#1|IOmlInstanceVariableInvariant KEEP=NO
  public void visitInstanceVariableInvariant (final IOmlInstanceVariableInvariant pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getInvariant();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInstanceVariableInvariant#1|IOmlInstanceVariableInvariant


// ***** VDMTOOLS START Name=visitTypelessExplicitFunction#1|IOmlTypelessExplicitFunction KEEP=NO
  public void visitTypelessExplicitFunction (final IOmlTypelessExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlFunctionBody tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlFunctionTrailer tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    Boolean cond_48 = null;
    cond_48 = pcmp.hasPositionInfo();
    if (cond_48.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_51 = null;
      rhs_51 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_51));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypelessExplicitFunction#1|IOmlTypelessExplicitFunction


// ***** VDMTOOLS START Name=visitUndefinedExpression#1|IOmlUndefinedExpression KEEP=NO
  public void visitUndefinedExpression (final IOmlUndefinedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUndefinedExpression#1|IOmlUndefinedExpression


// ***** VDMTOOLS START Name=visitEqualsDefinition#1|IOmlEqualsDefinition KEEP=NO
  public void visitEqualsDefinition (final IOmlEqualsDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEqualsDefinition#1|IOmlEqualsDefinition


// ***** VDMTOOLS START Name=visitAssignStatement#1|IOmlAssignStatement KEEP=NO
  public void visitAssignStatement (final IOmlAssignStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAssignStatement#1|IOmlAssignStatement


// ***** VDMTOOLS START Name=visitErrorStatement#1|IOmlErrorStatement KEEP=NO
  public void visitErrorStatement (final IOmlErrorStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitErrorStatement#1|IOmlErrorStatement


// ***** VDMTOOLS START Name=visitCallStatement#1|IOmlCallStatement KEEP=NO
  public void visitCallStatement (final IOmlCallStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasObjectDesignator();
    if (cond_10.booleanValue()) {

      IOmlObjectDesignator tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    IOmlName tmpArg_v_22 = null;
    tmpArg_v_22 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_22);
    String rhs_23 = null;
    String var1_24 = null;
    String var1_25 = null;
    var1_25 = str.concat(result);
    var1_24 = var1_25.concat(new String(","));
    rhs_23 = var1_24.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_23));
    Vector tmpArg_v_31 = null;
    tmpArg_v_31 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_31);
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCallStatement#1|IOmlCallStatement


// ***** VDMTOOLS START Name=visitFieldReference#1|IOmlFieldReference KEEP=NO
  public void visitFieldReference (final IOmlFieldReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    String tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getIdentifier();
    printStringField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFieldReference#1|IOmlFieldReference


// ***** VDMTOOLS START Name=visitMapComprehension#1|IOmlMapComprehension KEEP=NO
  public void visitMapComprehension (final IOmlMapComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlMaplet tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlMaplet) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getBindList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapComprehension#1|IOmlMapComprehension


// ***** VDMTOOLS START Name=visitNat1Type#1|IOmlNat1Type KEEP=NO
  public void visitNat1Type (final IOmlNat1Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNat1Type#1|IOmlNat1Type


// ***** VDMTOOLS START Name=visitExtendedExplicitOperation#1|IOmlExtendedExplicitOperation KEEP=NO
  public void visitExtendedExplicitOperation (final IOmlExtendedExplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationBody tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlOperationTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    Boolean cond_57 = null;
    cond_57 = pcmp.hasPositionInfo();
    if (cond_57.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_60 = null;
      rhs_60 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_60));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExtendedExplicitOperation#1|IOmlExtendedExplicitOperation


// ***** VDMTOOLS START Name=visitPreconditionExpression#1|IOmlPreconditionExpression KEEP=NO
  public void visitPreconditionExpression (final IOmlPreconditionExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPreconditionExpression#1|IOmlPreconditionExpression


// ***** VDMTOOLS START Name=visitSeqConcPattern#1|IOmlSeqConcPattern KEEP=NO
  public void visitSeqConcPattern (final IOmlSeqConcPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getLhsPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlPattern tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlPattern) pcmp.getRhsPattern();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeqConcPattern#1|IOmlSeqConcPattern


// ***** VDMTOOLS START Name=visitExtendedExplicitFunction#1|IOmlExtendedExplicitFunction KEEP=NO
  public void visitExtendedExplicitFunction (final IOmlExtendedExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionBody tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    IOmlFunctionTrailer tmpArg_v_56 = null;
    tmpArg_v_56 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    Boolean cond_66 = null;
    cond_66 = pcmp.hasPositionInfo();
    if (cond_66.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_69 = null;
      rhs_69 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_69));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExtendedExplicitFunction#1|IOmlExtendedExplicitFunction


// ***** VDMTOOLS START Name=visitStateDesignatorName#1|IOmlStateDesignatorName KEEP=NO
  public void visitStateDesignatorName (final IOmlStateDesignatorName pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlName tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStateDesignatorName#1|IOmlStateDesignatorName


// ***** VDMTOOLS START Name=visitAlwaysStatement#1|IOmlAlwaysStatement KEEP=NO
  public void visitAlwaysStatement (final IOmlAlwaysStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStatement tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStatement) pcmp.getAlwaysPart();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAlwaysStatement#1|IOmlAlwaysStatement


// ***** VDMTOOLS START Name=visitImplicitFunction#1|IOmlImplicitFunction KEEP=NO
  public void visitImplicitFunction (final IOmlImplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionTrailer tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    rhs_48 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    popNL();
    String rhs_52 = null;
    String var1_53 = null;
    var1_53 = str.concat(getNL());
    rhs_52 = var1_53.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_52));
    Boolean cond_57 = null;
    cond_57 = pcmp.hasPositionInfo();
    if (cond_57.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_60 = null;
      rhs_60 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_60));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitImplicitFunction#1|IOmlImplicitFunction


// ***** VDMTOOLS START Name=visitRecursiveTrapStatement#1|IOmlRecursiveTrapStatement KEEP=NO
  public void visitRecursiveTrapStatement (final IOmlRecursiveTrapStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getTrapList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getInPart();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecursiveTrapStatement#1|IOmlRecursiveTrapStatement


// ***** VDMTOOLS START Name=visitTupleConstructor#1|IOmlTupleConstructor KEEP=NO
  public void visitTupleConstructor (final IOmlTupleConstructor pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTupleConstructor#1|IOmlTupleConstructor


// ***** VDMTOOLS START Name=visitLambdaExpression#1|IOmlLambdaExpression KEEP=NO
  public void visitLambdaExpression (final IOmlLambdaExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getTypeBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitLambdaExpression#1|IOmlLambdaExpression


// ***** VDMTOOLS START Name=visitExternals#1|IOmlExternals KEEP=NO
  public void visitExternals (final IOmlExternals pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getExtList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExternals#1|IOmlExternals


// ***** VDMTOOLS START Name=visitEmptyType#1|IOmlEmptyType KEEP=NO
  public void visitEmptyType (final IOmlEmptyType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitEmptyType#1|IOmlEmptyType


// ***** VDMTOOLS START Name=visitTypeVariable#1|IOmlTypeVariable KEEP=NO
  public void visitTypeVariable (final IOmlTypeVariable pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getIdentifier();
    printStringField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTypeVariable#1|IOmlTypeVariable


// ***** VDMTOOLS START Name=visitObjectDesignatorExpression#1|IOmlObjectDesignatorExpression KEEP=NO
  public void visitObjectDesignatorExpression (final IOmlObjectDesignatorExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectDesignatorExpression#1|IOmlObjectDesignatorExpression


// ***** VDMTOOLS START Name=visitSetRangeExpression#1|IOmlSetRangeExpression KEEP=NO
  public void visitSetRangeExpression (final IOmlSetRangeExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getLower();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getUpper();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetRangeExpression#1|IOmlSetRangeExpression


// ***** VDMTOOLS START Name=visitIfExpression#1|IOmlIfExpression KEEP=NO
  public void visitIfExpression (final IOmlIfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getIfExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getThenExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getElseifExpressionList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlExpression tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlExpression) pcmp.getElseExpression();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    Boolean cond_48 = null;
    cond_48 = pcmp.hasPositionInfo();
    if (cond_48.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_51 = null;
      rhs_51 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_51));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIfExpression#1|IOmlIfExpression


// ***** VDMTOOLS START Name=visitComplexType#1|IOmlComplexType KEEP=NO
  public void visitComplexType (final IOmlComplexType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getFieldList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInvariant();
    if (cond_28.booleanValue()) {

      IOmlInvariant tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInvariant) pcmp.getInvariant();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitComplexType#1|IOmlComplexType


// ***** VDMTOOLS START Name=visitSetType#1|IOmlSetType KEEP=NO
  public void visitSetType (final IOmlSetType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetType#1|IOmlSetType


// ***** VDMTOOLS START Name=visitValueDefinition#1|IOmlValueDefinition KEEP=NO
  public void visitValueDefinition (final IOmlValueDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlAccessDefinition tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlAccessDefinition) pcmp.getAccess();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlValueShape tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlValueShape) pcmp.getShape();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinition#1|IOmlValueDefinition


// ***** VDMTOOLS START Name=visitDontCarePattern#1|IOmlDontCarePattern KEEP=NO
  public void visitDontCarePattern (final IOmlDontCarePattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDontCarePattern#1|IOmlDontCarePattern


// ***** VDMTOOLS START Name=visitApplyExpression#1|IOmlApplyExpression KEEP=NO
  public void visitApplyExpression (final IOmlApplyExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitApplyExpression#1|IOmlApplyExpression


// ***** VDMTOOLS START Name=visitFunctionTrailer#1|IOmlFunctionTrailer KEEP=NO
  public void visitFunctionTrailer (final IOmlFunctionTrailer pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasPreExpression();
    if (cond_10.booleanValue()) {

      IOmlExpression tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPostExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPostExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    rhs_25 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    popNL();
    String rhs_29 = null;
    String var1_30 = null;
    var1_30 = str.concat(getNL());
    rhs_29 = var1_30.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_29));
    Boolean cond_34 = null;
    cond_34 = pcmp.hasPositionInfo();
    if (cond_34.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_37 = null;
      rhs_37 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_37));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitFunctionTrailer#1|IOmlFunctionTrailer


// ***** VDMTOOLS START Name=visitExistsUniqueExpression#1|IOmlExistsUniqueExpression KEEP=NO
  public void visitExistsUniqueExpression (final IOmlExistsUniqueExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlBind) pcmp.getBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExistsUniqueExpression#1|IOmlExistsUniqueExpression


// ***** VDMTOOLS START Name=visitNatType#1|IOmlNatType KEEP=NO
  public void visitNatType (final IOmlNatType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNatType#1|IOmlNatType


// ***** VDMTOOLS START Name=visitRecordConstructor#1|IOmlRecordConstructor KEEP=NO
  public void visitRecordConstructor (final IOmlRecordConstructor pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordConstructor#1|IOmlRecordConstructor


// ***** VDMTOOLS START Name=visitOptionalType#1|IOmlOptionalType KEEP=NO
  public void visitOptionalType (final IOmlOptionalType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOptionalType#1|IOmlOptionalType


// ***** VDMTOOLS START Name=visitExplicitFunction#1|IOmlExplicitFunction KEEP=NO
  public void visitExplicitFunction (final IOmlExplicitFunction pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getTypeVariableList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlType tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    Vector tmpArg_v_38 = null;
    tmpArg_v_38 = pcmp.getParameterList();
    printSeqofField(tmpArg_v_38);
    String rhs_39 = null;
    String var1_40 = null;
    String var1_41 = null;
    var1_41 = str.concat(result);
    var1_40 = var1_41.concat(new String(","));
    rhs_39 = var1_40.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    IOmlFunctionBody tmpArg_v_47 = null;
    tmpArg_v_47 = (IOmlFunctionBody) pcmp.getBody();
    printNodeField((IOmlNode) tmpArg_v_47);
    String rhs_48 = null;
    String var1_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(result);
    var1_49 = var1_50.concat(new String(","));
    rhs_48 = var1_49.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_48));
    IOmlFunctionTrailer tmpArg_v_56 = null;
    tmpArg_v_56 = (IOmlFunctionTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_56);
    String rhs_57 = null;
    rhs_57 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    popNL();
    String rhs_61 = null;
    String var1_62 = null;
    var1_62 = str.concat(getNL());
    rhs_61 = var1_62.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_61));
    Boolean cond_66 = null;
    cond_66 = pcmp.hasPositionInfo();
    if (cond_66.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_69 = null;
      rhs_69 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_69));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExplicitFunction#1|IOmlExplicitFunction


// ***** VDMTOOLS START Name=visitTokenType#1|IOmlTokenType KEEP=NO
  public void visitTokenType (final IOmlTokenType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTokenType#1|IOmlTokenType


// ***** VDMTOOLS START Name=visitWhileLoop#1|IOmlWhileLoop KEEP=NO
  public void visitWhileLoop (final IOmlWhileLoop pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlStatement tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlStatement) pcmp.getStatement();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitWhileLoop#1|IOmlWhileLoop


// ***** VDMTOOLS START Name=visitUnionType#1|IOmlUnionType KEEP=NO
  public void visitUnionType (final IOmlUnionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getLhsType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRhsType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnionType#1|IOmlUnionType


// ***** VDMTOOLS START Name=visitInvariant#1|IOmlInvariant KEEP=NO
  public void visitInvariant (final IOmlInvariant pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPattern tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPattern) pcmp.getPattern();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitInvariant#1|IOmlInvariant


// ***** VDMTOOLS START Name=visitPatternBindExpression#1|IOmlPatternBindExpression KEEP=NO
  public void visitPatternBindExpression (final IOmlPatternBindExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlPatternBind tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlPatternBind) pcmp.getPatternBind();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternBindExpression#1|IOmlPatternBindExpression


// ***** VDMTOOLS START Name=visitRecordModifier#1|IOmlRecordModifier KEEP=NO
  public void visitRecordModifier (final IOmlRecordModifier pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordModifier#1|IOmlRecordModifier


// ***** VDMTOOLS START Name=visitSeq1Type#1|IOmlSeq1Type KEEP=NO
  public void visitSeq1Type (final IOmlSeq1Type pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlType tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeq1Type#1|IOmlSeq1Type


// ***** VDMTOOLS START Name=visitCharType#1|IOmlCharType KEEP=NO
  public void visitCharType (final IOmlCharType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharType#1|IOmlCharType


// ***** VDMTOOLS START Name=visitOperationType#1|IOmlOperationType KEEP=NO
  public void visitOperationType (final IOmlOperationType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitOperationType#1|IOmlOperationType


// ***** VDMTOOLS START Name=visitCharacterLiteral#1|IOmlCharacterLiteral KEEP=NO
  public void visitCharacterLiteral (final IOmlCharacterLiteral pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Character tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getVal();
    printCharField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCharacterLiteral#1|IOmlCharacterLiteral


// ***** VDMTOOLS START Name=visitSimpleType#1|IOmlSimpleType KEEP=NO
  public void visitSimpleType (final IOmlSimpleType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasInvariant();
    if (cond_28.booleanValue()) {

      IOmlInvariant tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlInvariant) pcmp.getInvariant();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSimpleType#1|IOmlSimpleType


// ***** VDMTOOLS START Name=visitSetBind#1|IOmlSetBind KEEP=NO
  public void visitSetBind (final IOmlSetBind pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPattern();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetBind#1|IOmlSetBind


// ***** VDMTOOLS START Name=visitValueDefinitions#1|IOmlValueDefinitions KEEP=NO
  public void visitValueDefinitions (final IOmlValueDefinitions pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getValueList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitValueDefinitions#1|IOmlValueDefinitions


// ***** VDMTOOLS START Name=visitGeneralMapType#1|IOmlGeneralMapType KEEP=NO
  public void visitGeneralMapType (final IOmlGeneralMapType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitGeneralMapType#1|IOmlGeneralMapType


// ***** VDMTOOLS START Name=visitDclStatement#1|IOmlDclStatement KEEP=NO
  public void visitDclStatement (final IOmlDclStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getDefinitionList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitDclStatement#1|IOmlDclStatement


// ***** VDMTOOLS START Name=visitSeqEnumPattern#1|IOmlSeqEnumPattern KEEP=NO
  public void visitSeqEnumPattern (final IOmlSeqEnumPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSeqEnumPattern#1|IOmlSeqEnumPattern


// ***** VDMTOOLS START Name=visitBracketedExpression#1|IOmlBracketedExpression KEEP=NO
  public void visitBracketedExpression (final IOmlBracketedExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBracketedExpression#1|IOmlBracketedExpression


// ***** VDMTOOLS START Name=visitAccessDefinition#1|IOmlAccessDefinition KEEP=NO
  public void visitAccessDefinition (final IOmlAccessDefinition pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getAsyncAccess();
    printBoolField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Boolean tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getStaticAccess();
    printBoolField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    IOmlScope tmpArg_v_29 = null;
    tmpArg_v_29 = (IOmlScope) pcmp.getScope();
    printNodeField((IOmlNode) tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitAccessDefinition#1|IOmlAccessDefinition


// ***** VDMTOOLS START Name=visitActiveExpression#1|IOmlActiveExpression KEEP=NO
  public void visitActiveExpression (final IOmlActiveExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitActiveExpression#1|IOmlActiveExpression


// ***** VDMTOOLS START Name=visitNewExpression#1|IOmlNewExpression KEEP=NO
  public void visitNewExpression (final IOmlNewExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getGenericTypes();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    rhs_30 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    popNL();
    String rhs_34 = null;
    String var1_35 = null;
    var1_35 = str.concat(getNL());
    rhs_34 = var1_35.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_39 = null;
    cond_39 = pcmp.hasPositionInfo();
    if (cond_39.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_42 = null;
      rhs_42 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_42));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitNewExpression#1|IOmlNewExpression


// ***** VDMTOOLS START Name=visitBlockStatement#1|IOmlBlockStatement KEEP=NO
  public void visitBlockStatement (final IOmlBlockStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getDclStatementList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getStatementList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBlockStatement#1|IOmlBlockStatement


// ***** VDMTOOLS START Name=visitImplicitOperation#1|IOmlImplicitOperation KEEP=NO
  public void visitImplicitOperation (final IOmlImplicitOperation pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    String tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getIdentifier();
    printStringField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternTypePairList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Vector tmpArg_v_29 = null;
    tmpArg_v_29 = pcmp.getIdentifierTypePairList();
    printSeqofField(tmpArg_v_29);
    String rhs_30 = null;
    String var1_31 = null;
    String var1_32 = null;
    var1_32 = str.concat(result);
    var1_31 = var1_32.concat(new String(","));
    rhs_30 = var1_31.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_30));
    IOmlOperationTrailer tmpArg_v_38 = null;
    tmpArg_v_38 = (IOmlOperationTrailer) pcmp.getTrailer();
    printNodeField((IOmlNode) tmpArg_v_38);
    String rhs_39 = null;
    rhs_39 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_39));
    popNL();
    String rhs_43 = null;
    String var1_44 = null;
    var1_44 = str.concat(getNL());
    rhs_43 = var1_44.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_43));
    Boolean cond_48 = null;
    cond_48 = pcmp.hasPositionInfo();
    if (cond_48.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_51 = null;
      rhs_51 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_51));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitImplicitOperation#1|IOmlImplicitOperation


// ***** VDMTOOLS START Name=visitMapOrSequenceReference#1|IOmlMapOrSequenceReference KEEP=NO
  public void visitMapOrSequenceReference (final IOmlMapOrSequenceReference pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlStateDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlStateDesignator) pcmp.getStateDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMapOrSequenceReference#1|IOmlMapOrSequenceReference


// ***** VDMTOOLS START Name=visitObjectApply#1|IOmlObjectApply KEEP=NO
  public void visitObjectApply (final IOmlObjectApply pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlObjectDesignator tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlObjectDesignator) pcmp.getObjectDesignator();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getExpressionList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitObjectApply#1|IOmlObjectApply


// ***** VDMTOOLS START Name=visitPatternTypePair#1|IOmlPatternTypePair KEEP=NO
  public void visitPatternTypePair (final IOmlPatternTypePair pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitPatternTypePair#1|IOmlPatternTypePair


// ***** VDMTOOLS START Name=visitExistsExpression#1|IOmlExistsExpression KEEP=NO
  public void visitExistsExpression (final IOmlExistsExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Vector tmpArg_v_11 = null;
    tmpArg_v_11 = pcmp.getBindList();
    printSeqofField(tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitExistsExpression#1|IOmlExistsExpression


// ***** VDMTOOLS START Name=visitStartStatement#1|IOmlStartStatement KEEP=NO
  public void visitStartStatement (final IOmlStartStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlExpression tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitStartStatement#1|IOmlStartStatement


// ***** VDMTOOLS START Name=visitRecordPattern#1|IOmlRecordPattern KEEP=NO
  public void visitRecordPattern (final IOmlRecordPattern pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlName tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlName) pcmp.getName();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getPatternList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitRecordPattern#1|IOmlRecordPattern


// ***** VDMTOOLS START Name=visitSymbolicLiteralExpression#1|IOmlSymbolicLiteralExpression KEEP=NO
  public void visitSymbolicLiteralExpression (final IOmlSymbolicLiteralExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    IOmlLiteral tmpArg_v_7 = null;
    tmpArg_v_7 = (IOmlLiteral) pcmp.getLiteral();
    printNodeField((IOmlNode) tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSymbolicLiteralExpression#1|IOmlSymbolicLiteralExpression


// ***** VDMTOOLS START Name=visitSelfExpression#1|IOmlSelfExpression KEEP=NO
  public void visitSelfExpression (final IOmlSelfExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSelfExpression#1|IOmlSelfExpression


// ***** VDMTOOLS START Name=visitIsExpression#1|IOmlIsExpression KEEP=NO
  public void visitIsExpression (final IOmlIsExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlExpression tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitIsExpression#1|IOmlIsExpression


// ***** VDMTOOLS START Name=visitSetComprehension#1|IOmlSetComprehension KEEP=NO
  public void visitSetComprehension (final IOmlSetComprehension pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getBindList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasGuard();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getGuard();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSetComprehension#1|IOmlSetComprehension


// ***** VDMTOOLS START Name=visitCasesExpression#1|IOmlCasesExpression KEEP=NO
  public void visitCasesExpression (final IOmlCasesExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlExpression tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlExpression) pcmp.getMatchExpression();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    Vector tmpArg_v_20 = null;
    tmpArg_v_20 = pcmp.getAlternativeList();
    printSeqofField(tmpArg_v_20);
    String rhs_21 = null;
    String var1_22 = null;
    String var1_23 = null;
    var1_23 = str.concat(result);
    var1_22 = var1_23.concat(new String(","));
    rhs_21 = var1_22.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    Boolean cond_28 = null;
    cond_28 = pcmp.hasOthersExpression();
    if (cond_28.booleanValue()) {

      IOmlExpression tmpArg_v_31 = null;
      tmpArg_v_31 = (IOmlExpression) pcmp.getOthersExpression();
      printNodeField((IOmlNode) tmpArg_v_31);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_32 = null;
    rhs_32 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_32));
    popNL();
    String rhs_36 = null;
    String var1_37 = null;
    var1_37 = str.concat(getNL());
    rhs_36 = var1_37.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_36));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasPositionInfo();
    if (cond_41.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_44 = null;
      rhs_44 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_44));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitCasesExpression#1|IOmlCasesExpression


// ***** VDMTOOLS START Name=visitMutexAllPredicate#1|IOmlMutexAllPredicate KEEP=NO
  public void visitMutexAllPredicate (final IOmlMutexAllPredicate pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMutexAllPredicate#1|IOmlMutexAllPredicate


// ***** VDMTOOLS START Name=visitReqExpression#1|IOmlReqExpression KEEP=NO
  public void visitReqExpression (final IOmlReqExpression pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Vector tmpArg_v_7 = null;
    tmpArg_v_7 = pcmp.getNameList();
    printSeqofField(tmpArg_v_7);
    String rhs_8 = null;
    rhs_8 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    String rhs_11 = null;
    rhs_11 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_11));
    Boolean cond_14 = null;
    cond_14 = pcmp.hasPositionInfo();
    if (cond_14.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_17 = null;
      rhs_17 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_17));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitReqExpression#1|IOmlReqExpression


// ***** VDMTOOLS START Name=visitSpecificationStatement#1|IOmlSpecificationStatement KEEP=NO
  public void visitSpecificationStatement (final IOmlSpecificationStatement pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    Boolean cond_10 = null;
    cond_10 = pcmp.hasExternals();
    if (cond_10.booleanValue()) {

      IOmlExternals tmpArg_v_13 = null;
      tmpArg_v_13 = (IOmlExternals) pcmp.getExternals();
      printNodeField((IOmlNode) tmpArg_v_13);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_14 = null;
    String var1_15 = null;
    String var1_16 = null;
    var1_16 = str.concat(result);
    var1_15 = var1_16.concat(new String(","));
    rhs_14 = var1_15.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_14));
    Boolean cond_21 = null;
    cond_21 = pcmp.hasPreExpression();
    if (cond_21.booleanValue()) {

      IOmlExpression tmpArg_v_24 = null;
      tmpArg_v_24 = (IOmlExpression) pcmp.getPreExpression();
      printNodeField((IOmlNode) tmpArg_v_24);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_25 = null;
    String var1_26 = null;
    String var1_27 = null;
    var1_27 = str.concat(result);
    var1_26 = var1_27.concat(new String(","));
    rhs_25 = var1_26.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    IOmlExpression tmpArg_v_33 = null;
    tmpArg_v_33 = (IOmlExpression) pcmp.getPostExpression();
    printNodeField((IOmlNode) tmpArg_v_33);
    String rhs_34 = null;
    String var1_35 = null;
    String var1_36 = null;
    var1_36 = str.concat(result);
    var1_35 = var1_36.concat(new String(","));
    rhs_34 = var1_35.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_34));
    Boolean cond_41 = null;
    cond_41 = pcmp.hasExceptions();
    if (cond_41.booleanValue()) {

      IOmlExceptions tmpArg_v_44 = null;
      tmpArg_v_44 = (IOmlExceptions) pcmp.getExceptions();
      printNodeField((IOmlNode) tmpArg_v_44);
    }
    else 
      result = UTIL.ConvertToString(UTIL.clone(new String("nil")));
    String rhs_45 = null;
    rhs_45 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_45));
    popNL();
    String rhs_49 = null;
    String var1_50 = null;
    var1_50 = str.concat(getNL());
    rhs_49 = var1_50.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_49));
    Boolean cond_54 = null;
    cond_54 = pcmp.hasPositionInfo();
    if (cond_54.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_57 = null;
      rhs_57 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_57));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitSpecificationStatement#1|IOmlSpecificationStatement


// ***** VDMTOOLS START Name=visitBoolType#1|IOmlBoolType KEEP=NO
  public void visitBoolType (final IOmlBoolType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    String rhs_6 = null;
    rhs_6 = str.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_6));
    Boolean cond_9 = null;
    cond_9 = pcmp.hasPositionInfo();
    if (cond_9.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_12 = null;
      rhs_12 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBoolType#1|IOmlBoolType


// ***** VDMTOOLS START Name=visitTotalFunctionType#1|IOmlTotalFunctionType KEEP=NO
  public void visitTotalFunctionType (final IOmlTotalFunctionType pcmp) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pcmp.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    pushNL();
    String rhs_7 = null;
    rhs_7 = str.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_7));
    IOmlType tmpArg_v_11 = null;
    tmpArg_v_11 = (IOmlType) pcmp.getDomType();
    printNodeField((IOmlNode) tmpArg_v_11);
    String rhs_12 = null;
    String var1_13 = null;
    String var1_14 = null;
    var1_14 = str.concat(result);
    var1_13 = var1_14.concat(new String(","));
    rhs_12 = var1_13.concat(getNL());
    str = UTIL.ConvertToString(UTIL.clone(rhs_12));
    IOmlType tmpArg_v_20 = null;
    tmpArg_v_20 = (IOmlType) pcmp.getRngType();
    printNodeField((IOmlNode) tmpArg_v_20);
    String rhs_21 = null;
    rhs_21 = str.concat(result);
    str = UTIL.ConvertToString(UTIL.clone(rhs_21));
    popNL();
    String rhs_25 = null;
    String var1_26 = null;
    var1_26 = str.concat(getNL());
    rhs_25 = var1_26.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_25));
    Boolean cond_30 = null;
    cond_30 = pcmp.hasPositionInfo();
    if (cond_30.booleanValue()) {

      printPositionInfo((IOmlNode) pcmp);
      String rhs_33 = null;
      rhs_33 = str.concat(result);
      str = UTIL.ConvertToString(UTIL.clone(rhs_33));
    }
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitTotalFunctionType#1|IOmlTotalFunctionType


// ***** VDMTOOLS START Name=visitType#1|IOmlType KEEP=NO
  public void visitType (final IOmlType pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitType#1|IOmlType


// ***** VDMTOOLS START Name=visitFunctionShape#1|IOmlFunctionShape KEEP=NO
  public void visitFunctionShape (final IOmlFunctionShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitFunctionShape#1|IOmlFunctionShape


// ***** VDMTOOLS START Name=visitStateDesignator#1|IOmlStateDesignator KEEP=NO
  public void visitStateDesignator (final IOmlStateDesignator pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitStateDesignator#1|IOmlStateDesignator


// ***** VDMTOOLS START Name=visitBind#1|IOmlBind KEEP=NO
  public void visitBind (final IOmlBind pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitBind#1|IOmlBind


// ***** VDMTOOLS START Name=visitObjectDesignator#1|IOmlObjectDesignator KEEP=NO
  public void visitObjectDesignator (final IOmlObjectDesignator pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitObjectDesignator#1|IOmlObjectDesignator


// ***** VDMTOOLS START Name=visitMode#1|IOmlMode KEEP=NO
  public void visitMode (final IOmlMode pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Integer tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitMode#1|IOmlMode


// ***** VDMTOOLS START Name=visitOperationShape#1|IOmlOperationShape KEEP=NO
  public void visitOperationShape (final IOmlOperationShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitOperationShape#1|IOmlOperationShape


// ***** VDMTOOLS START Name=visitDefinitionBlock#1|IOmlDefinitionBlock KEEP=NO
  public void visitDefinitionBlock (final IOmlDefinitionBlock pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitDefinitionBlock#1|IOmlDefinitionBlock


// ***** VDMTOOLS START Name=visitStatement#1|IOmlStatement KEEP=NO
  public void visitStatement (final IOmlStatement pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitStatement#1|IOmlStatement


// ***** VDMTOOLS START Name=visitThreadSpecification#1|IOmlThreadSpecification KEEP=NO
  public void visitThreadSpecification (final IOmlThreadSpecification pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitThreadSpecification#1|IOmlThreadSpecification


// ***** VDMTOOLS START Name=visitSyncPredicate#1|IOmlSyncPredicate KEEP=NO
  public void visitSyncPredicate (final IOmlSyncPredicate pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitSyncPredicate#1|IOmlSyncPredicate


// ***** VDMTOOLS START Name=visitBinaryOperator#1|IOmlBinaryOperator KEEP=NO
  public void visitBinaryOperator (final IOmlBinaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Integer tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitBinaryOperator#1|IOmlBinaryOperator


// ***** VDMTOOLS START Name=visitExpression#1|IOmlExpression KEEP=NO
  public void visitExpression (final IOmlExpression pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitExpression#1|IOmlExpression


// ***** VDMTOOLS START Name=visitLiteral#1|IOmlLiteral KEEP=NO
  public void visitLiteral (final IOmlLiteral pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitLiteral#1|IOmlLiteral


// ***** VDMTOOLS START Name=visitInstanceVariableShape#1|IOmlInstanceVariableShape KEEP=NO
  public void visitInstanceVariableShape (final IOmlInstanceVariableShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitInstanceVariableShape#1|IOmlInstanceVariableShape


// ***** VDMTOOLS START Name=visitUnaryOperator#1|IOmlUnaryOperator KEEP=NO
  public void visitUnaryOperator (final IOmlUnaryOperator pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Integer tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitUnaryOperator#1|IOmlUnaryOperator


// ***** VDMTOOLS START Name=visitScope#1|IOmlScope KEEP=NO
  public void visitScope (final IOmlScope pNode) throws CGException {

    String str = null;
    String var1_2 = null;
    String var2_4 = null;
    var2_4 = pNode.identity();
    var1_2 = prefix.concat(var2_4);
    str = var1_2.concat(new String("("));
    Integer tmpArg_v_7 = null;
    tmpArg_v_7 = pNode.getValue();
    printNatField(tmpArg_v_7);
    String rhs_8 = null;
    String var1_9 = null;
    var1_9 = str.concat(result);
    rhs_8 = var1_9.concat(new String(")"));
    str = UTIL.ConvertToString(UTIL.clone(rhs_8));
    result = UTIL.ConvertToString(UTIL.clone(str));
  }
// ***** VDMTOOLS END Name=visitScope#1|IOmlScope


// ***** VDMTOOLS START Name=visitPattern#1|IOmlPattern KEEP=NO
  public void visitPattern (final IOmlPattern pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPattern#1|IOmlPattern


// ***** VDMTOOLS START Name=visitPatternBind#1|IOmlPatternBind KEEP=NO
  public void visitPatternBind (final IOmlPatternBind pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitPatternBind#1|IOmlPatternBind


// ***** VDMTOOLS START Name=visitTypeShape#1|IOmlTypeShape KEEP=NO
  public void visitTypeShape (final IOmlTypeShape pNode) throws CGException {
    pNode.accept((IOmlVisitor) this);
  }
// ***** VDMTOOLS END Name=visitTypeShape#1|IOmlTypeShape

}
;
