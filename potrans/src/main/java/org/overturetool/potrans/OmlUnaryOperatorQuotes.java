//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlUnaryOperatorQuotes {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=IQCARD KEEP=NO
  public static Integer IQCARD = new Integer(0);
// ***** VDMTOOLS END Name=IQCARD

// ***** VDMTOOLS START Name=IQMINUS KEEP=NO
  public static Integer IQMINUS = new Integer(1);
// ***** VDMTOOLS END Name=IQMINUS

// ***** VDMTOOLS START Name=IQFLOOR KEEP=NO
  public static Integer IQFLOOR = new Integer(2);
// ***** VDMTOOLS END Name=IQFLOOR

// ***** VDMTOOLS START Name=IQTL KEEP=NO
  public static Integer IQTL = new Integer(3);
// ***** VDMTOOLS END Name=IQTL

// ***** VDMTOOLS START Name=IQINDS KEEP=NO
  public static Integer IQINDS = new Integer(4);
// ***** VDMTOOLS END Name=IQINDS

// ***** VDMTOOLS START Name=IQABS KEEP=NO
  public static Integer IQABS = new Integer(5);
// ***** VDMTOOLS END Name=IQABS

// ***** VDMTOOLS START Name=IQDMERGE KEEP=NO
  public static Integer IQDMERGE = new Integer(6);
// ***** VDMTOOLS END Name=IQDMERGE

// ***** VDMTOOLS START Name=IQINVERSE KEEP=NO
  public static Integer IQINVERSE = new Integer(7);
// ***** VDMTOOLS END Name=IQINVERSE

// ***** VDMTOOLS START Name=IQPOWER KEEP=NO
  public static Integer IQPOWER = new Integer(8);
// ***** VDMTOOLS END Name=IQPOWER

// ***** VDMTOOLS START Name=IQDCONC KEEP=NO
  public static Integer IQDCONC = new Integer(9);
// ***** VDMTOOLS END Name=IQDCONC

// ***** VDMTOOLS START Name=IQELEMS KEEP=NO
  public static Integer IQELEMS = new Integer(10);
// ***** VDMTOOLS END Name=IQELEMS

// ***** VDMTOOLS START Name=IQDOM KEEP=NO
  public static Integer IQDOM = new Integer(11);
// ***** VDMTOOLS END Name=IQDOM

// ***** VDMTOOLS START Name=IQHD KEEP=NO
  public static Integer IQHD = new Integer(12);
// ***** VDMTOOLS END Name=IQHD

// ***** VDMTOOLS START Name=IQPLUS KEEP=NO
  public static Integer IQPLUS = new Integer(13);
// ***** VDMTOOLS END Name=IQPLUS

// ***** VDMTOOLS START Name=IQRNG KEEP=NO
  public static Integer IQRNG = new Integer(14);
// ***** VDMTOOLS END Name=IQRNG

// ***** VDMTOOLS START Name=IQLEN KEEP=NO
  public static Integer IQLEN = new Integer(15);
// ***** VDMTOOLS END Name=IQLEN

// ***** VDMTOOLS START Name=IQNOT KEEP=NO
  public static Integer IQNOT = new Integer(16);
// ***** VDMTOOLS END Name=IQNOT

// ***** VDMTOOLS START Name=IQDUNION KEEP=NO
  public static Integer IQDUNION = new Integer(17);
// ***** VDMTOOLS END Name=IQDUNION

// ***** VDMTOOLS START Name=IQDINTER KEEP=NO
  public static Integer IQDINTER = new Integer(18);
// ***** VDMTOOLS END Name=IQDINTER

// ***** VDMTOOLS START Name=qmap KEEP=NO
  private static HashMap qmap = new HashMap();
// ***** VDMTOOLS END Name=qmap


// ***** VDMTOOLS START Name=static KEEP=NO
  static {
    try {

      OmlUnaryOperatorQuotes.qmap = new HashMap();
      OmlUnaryOperatorQuotes.qmap.put(IQCARD, new String("<CARD>"));
      OmlUnaryOperatorQuotes.qmap.put(IQMINUS, new String("<MINUS>"));
      OmlUnaryOperatorQuotes.qmap.put(IQFLOOR, new String("<FLOOR>"));
      OmlUnaryOperatorQuotes.qmap.put(IQTL, new String("<TL>"));
      OmlUnaryOperatorQuotes.qmap.put(IQINDS, new String("<INDS>"));
      OmlUnaryOperatorQuotes.qmap.put(IQABS, new String("<ABS>"));
      OmlUnaryOperatorQuotes.qmap.put(IQDMERGE, new String("<DMERGE>"));
      OmlUnaryOperatorQuotes.qmap.put(IQINVERSE, new String("<INVERSE>"));
      OmlUnaryOperatorQuotes.qmap.put(IQPOWER, new String("<POWER>"));
      OmlUnaryOperatorQuotes.qmap.put(IQDCONC, new String("<DCONC>"));
      OmlUnaryOperatorQuotes.qmap.put(IQELEMS, new String("<ELEMS>"));
      OmlUnaryOperatorQuotes.qmap.put(IQDOM, new String("<DOM>"));
      OmlUnaryOperatorQuotes.qmap.put(IQHD, new String("<HD>"));
      OmlUnaryOperatorQuotes.qmap.put(IQPLUS, new String("<PLUS>"));
      OmlUnaryOperatorQuotes.qmap.put(IQRNG, new String("<RNG>"));
      OmlUnaryOperatorQuotes.qmap.put(IQLEN, new String("<LEN>"));
      OmlUnaryOperatorQuotes.qmap.put(IQNOT, new String("<NOT>"));
      OmlUnaryOperatorQuotes.qmap.put(IQDUNION, new String("<DUNION>"));
      OmlUnaryOperatorQuotes.qmap.put(IQDINTER, new String("<DINTER>"));
    }
    catch (Throwable e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=static


// ***** VDMTOOLS START Name=vdm_init_OmlUnaryOperatorQuotes KEEP=NO
  private void vdm_init_OmlUnaryOperatorQuotes () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_OmlUnaryOperatorQuotes


// ***** VDMTOOLS START Name=OmlUnaryOperatorQuotes KEEP=NO
  public OmlUnaryOperatorQuotes () throws CGException {
    vdm_init_OmlUnaryOperatorQuotes();
  }
// ***** VDMTOOLS END Name=OmlUnaryOperatorQuotes


// ***** VDMTOOLS START Name=getQuoteName#1|Integer KEEP=NO
  static public String getQuoteName (final Integer pid) throws CGException {
    return UTIL.ConvertToString(qmap.get(pid));
  }
// ***** VDMTOOLS END Name=getQuoteName#1|Integer


// ***** VDMTOOLS START Name=validQuote#1|Integer KEEP=NO
  static public Boolean validQuote (final Integer pid) throws CGException {

    Boolean rexpr_2 = null;
    rexpr_2 = new Boolean(qmap.containsKey(pid));
    return rexpr_2;
  }
// ***** VDMTOOLS END Name=validQuote#1|Integer

}
;
