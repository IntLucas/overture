//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlUnaryExpression extends IOmlUnaryExpression {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivOperator KEEP=NO
  private IOmlUnaryOperator ivOperator = null;
// ***** VDMTOOLS END Name=ivOperator

// ***** VDMTOOLS START Name=ivExpression KEEP=NO
  private IOmlExpression ivExpression = null;
// ***** VDMTOOLS END Name=ivExpression


// ***** VDMTOOLS START Name=vdm_init_OmlUnaryExpression KEEP=NO
  private void vdm_init_OmlUnaryExpression () throws CGException {
    try {

      ivOperator = null;
      ivExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlUnaryExpression


// ***** VDMTOOLS START Name=OmlUnaryExpression KEEP=NO
  public OmlUnaryExpression () throws CGException {
    vdm_init_OmlUnaryExpression();
  }
// ***** VDMTOOLS END Name=OmlUnaryExpression


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("UnaryExpression");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitUnaryExpression((IOmlUnaryExpression) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlUnaryExpression#2|IOmlUnaryOperator|IOmlExpression KEEP=NO
  public OmlUnaryExpression (final IOmlUnaryOperator p1, final IOmlExpression p2) throws CGException {

    vdm_init_OmlUnaryExpression();
    {

      setOperator((IOmlUnaryOperator) p1);
      setExpression((IOmlExpression) p2);
    }
  }
// ***** VDMTOOLS END Name=OmlUnaryExpression#2|IOmlUnaryOperator|IOmlExpression


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("operator");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setOperator((IOmlUnaryOperator) data.get(fname));
    }
    {

      String fname = new String("expression");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setExpression((IOmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getOperator KEEP=NO
  public IOmlUnaryOperator getOperator () throws CGException {
    return (IOmlUnaryOperator) ivOperator;
  }
// ***** VDMTOOLS END Name=getOperator


// ***** VDMTOOLS START Name=setOperator#1|IOmlUnaryOperator KEEP=NO
  public void setOperator (final IOmlUnaryOperator parg) throws CGException {
    ivOperator = (IOmlUnaryOperator) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setOperator#1|IOmlUnaryOperator


// ***** VDMTOOLS START Name=getExpression KEEP=NO
  public IOmlExpression getExpression () throws CGException {
    return (IOmlExpression) ivExpression;
  }
// ***** VDMTOOLS END Name=getExpression


// ***** VDMTOOLS START Name=setExpression#1|IOmlExpression KEEP=NO
  public void setExpression (final IOmlExpression parg) throws CGException {
    ivExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setExpression#1|IOmlExpression

}
;
