//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class IOmlNode {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivInfo KEEP=NO
  private HashMap ivInfo = new HashMap();
// ***** VDMTOOLS END Name=ivInfo

// ***** VDMTOOLS START Name=ivLeftMostLexemIndex KEEP=NO
  private Integer ivLeftMostLexemIndex = null;
// ***** VDMTOOLS END Name=ivLeftMostLexemIndex

// ***** VDMTOOLS START Name=ivRightMostLexemIndex KEEP=NO
  private Integer ivRightMostLexemIndex = null;
// ***** VDMTOOLS END Name=ivRightMostLexemIndex

// ***** VDMTOOLS START Name=prefix KEEP=NO
  public static final String prefix = new String("Oml");
// ***** VDMTOOLS END Name=prefix


// ***** VDMTOOLS START Name=vdm_init_IOmlNode KEEP=NO
  private void vdm_init_IOmlNode () throws CGException {
    try {

      ivInfo = new HashMap();
      ivLeftMostLexemIndex = null;
      ivRightMostLexemIndex = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_IOmlNode


// ***** VDMTOOLS START Name=IOmlNode KEEP=NO
  public IOmlNode () throws CGException {
    vdm_init_IOmlNode();
  }
// ***** VDMTOOLS END Name=IOmlNode


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("Node");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitNode((IOmlNode) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=getContextInfo#1|Integer KEEP=NO
  public IOmlContextInfo getContextInfo (final Integer pci) throws CGException {
    return (IOmlContextInfo) (IOmlContextInfo) ivInfo.get(pci);
  }
// ***** VDMTOOLS END Name=getContextInfo#1|Integer


// ***** VDMTOOLS START Name=getContextInfoCount KEEP=NO
  public Integer getContextInfoCount () throws CGException {

    Integer rexpr_1 = null;
    HashSet unArg_2 = new HashSet();
    unArg_2.clear();
    unArg_2.addAll(ivInfo.keySet());
    rexpr_1 = new Integer(unArg_2.size());
    return rexpr_1;
  }
// ***** VDMTOOLS END Name=getContextInfoCount


// ***** VDMTOOLS START Name=addContextInfo#1|IOmlContextInfo KEEP=NO
  public Integer addContextInfo (final IOmlContextInfo pci) throws CGException {

    Integer res = null;
    Integer var1_2 = null;
    HashSet unArg_3 = new HashSet();
    unArg_3.clear();
    unArg_3.addAll(ivInfo.keySet());
    var1_2 = new Integer(unArg_3.size());
    res = new Integer(var1_2.intValue() + new Integer(1).intValue());
    HashMap rhs_6 = new HashMap();
    HashMap var2_8 = new HashMap();
    var2_8 = new HashMap();
    var2_8.put(res, pci);
    {

      HashMap m1_15 = (HashMap) ivInfo.clone();
      HashMap m2_16 = var2_8;
      HashSet com_11 = new HashSet();
      com_11.addAll(m1_15.keySet());
      com_11.retainAll(m2_16.keySet());
      boolean all_applies_12 = true;
      Object d_13;
      for (Iterator bb_14 = com_11.iterator(); bb_14.hasNext() && all_applies_12; ) {

        d_13 = bb_14.next();
        all_applies_12 = m1_15.get(d_13).equals(m2_16.get(d_13));
      }
      if (!all_applies_12) 
        UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
      m1_15.putAll(m2_16);
      rhs_6 = m1_15;
    }
    ivInfo = (HashMap) UTIL.clone(rhs_6);
    return res;
  }
// ***** VDMTOOLS END Name=addContextInfo#1|IOmlContextInfo


// ***** VDMTOOLS START Name=setLexemIndex#1|Integer KEEP=NO
  public IOmlNode setLexemIndex (final Integer pli) throws CGException {

    if (new Boolean(UTIL.equals(ivLeftMostLexemIndex, null)).booleanValue()) 
      ivLeftMostLexemIndex = UTIL.NumberToInt(UTIL.clone(pli));
    else 
      if (new Boolean((ivLeftMostLexemIndex.intValue()) > (pli.intValue())).booleanValue()) 
        ivLeftMostLexemIndex = UTIL.NumberToInt(UTIL.clone(pli));
    if (new Boolean(UTIL.equals(ivRightMostLexemIndex, null)).booleanValue()) 
      ivRightMostLexemIndex = UTIL.NumberToInt(UTIL.clone(pli));
    else 
      if (new Boolean((ivRightMostLexemIndex.intValue()) < (pli.intValue())).booleanValue()) 
        ivRightMostLexemIndex = UTIL.NumberToInt(UTIL.clone(pli));
    return (IOmlNode) this;
  }
// ***** VDMTOOLS END Name=setLexemIndex#1|Integer


// ***** VDMTOOLS START Name=setLexem#1|IOmlLexem KEEP=NO
  public IOmlNode setLexem (final IOmlLexem plexem) throws CGException {

    IOmlNode rexpr_2 = null;
    Integer par_3 = null;
    par_3 = plexem.getIndex();
    rexpr_2 = (IOmlNode) setLexemIndex(par_3);
    return (IOmlNode) rexpr_2;
  }
// ***** VDMTOOLS END Name=setLexem#1|IOmlLexem


// ***** VDMTOOLS START Name=hasPositionInfo KEEP=NO
  public Boolean hasPositionInfo () throws CGException {

    Boolean rexpr_1 = null;
    {
      if ((rexpr_1 = new Boolean(UTIL.IsInteger(ivLeftMostLexemIndex) && ((Number) ivLeftMostLexemIndex).intValue() >= 0)).booleanValue()) 
        rexpr_1 = new Boolean(UTIL.IsInteger(ivRightMostLexemIndex) && ((Number) ivRightMostLexemIndex).intValue() >= 0);
    }
    return rexpr_1;
  }
// ***** VDMTOOLS END Name=hasPositionInfo


// ***** VDMTOOLS START Name=getLeftMostLexemIndex KEEP=NO
  public Integer getLeftMostLexemIndex () throws CGException {
    return ivLeftMostLexemIndex;
  }
// ***** VDMTOOLS END Name=getLeftMostLexemIndex


// ***** VDMTOOLS START Name=getRightMostLexemIndex KEEP=NO
  public Integer getRightMostLexemIndex () throws CGException {
    return ivRightMostLexemIndex;
  }
// ***** VDMTOOLS END Name=getRightMostLexemIndex

}
;
