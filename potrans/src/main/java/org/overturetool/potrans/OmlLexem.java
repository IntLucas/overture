//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlLexem extends IOmlLexem {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivLine KEEP=NO
  private Integer ivLine = null;
// ***** VDMTOOLS END Name=ivLine

// ***** VDMTOOLS START Name=ivColumn KEEP=NO
  private Integer ivColumn = null;
// ***** VDMTOOLS END Name=ivColumn

// ***** VDMTOOLS START Name=ivLexval KEEP=NO
  private Integer ivLexval = null;
// ***** VDMTOOLS END Name=ivLexval

// ***** VDMTOOLS START Name=ivText KEEP=NO
  private String ivText = null;
// ***** VDMTOOLS END Name=ivText

// ***** VDMTOOLS START Name=ivIndex KEEP=NO
  private Integer ivIndex = null;
// ***** VDMTOOLS END Name=ivIndex

// ***** VDMTOOLS START Name=ivType KEEP=NO
  private Integer ivType = null;
// ***** VDMTOOLS END Name=ivType

// ***** VDMTOOLS START Name=ILEXEMUNKNOWN KEEP=NO
  public static final Integer ILEXEMUNKNOWN = new Integer(0);
// ***** VDMTOOLS END Name=ILEXEMUNKNOWN

// ***** VDMTOOLS START Name=ILEXEMRESERVEDWORD KEEP=NO
  public static final Integer ILEXEMRESERVEDWORD = new Integer(1);
// ***** VDMTOOLS END Name=ILEXEMRESERVEDWORD

// ***** VDMTOOLS START Name=ILEXEMIDENTIFIER KEEP=NO
  public static final Integer ILEXEMIDENTIFIER = new Integer(2);
// ***** VDMTOOLS END Name=ILEXEMIDENTIFIER

// ***** VDMTOOLS START Name=ILEXEMLINECOMMENT KEEP=NO
  public static final Integer ILEXEMLINECOMMENT = new Integer(3);
// ***** VDMTOOLS END Name=ILEXEMLINECOMMENT

// ***** VDMTOOLS START Name=ILEXEMBLOCKCOMMENT KEEP=NO
  public static final Integer ILEXEMBLOCKCOMMENT = new Integer(4);
// ***** VDMTOOLS END Name=ILEXEMBLOCKCOMMENT


// ***** VDMTOOLS START Name=vdm_init_OmlLexem KEEP=NO
  private void vdm_init_OmlLexem () throws CGException {
    try {

      ivLine = new Integer(0);
      ivColumn = new Integer(0);
      ivLexval = new Integer(0);
      ivText = UTIL.ConvertToString(new String());
      ivIndex = new Integer(0);
      ivType = ILEXEMUNKNOWN;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlLexem


// ***** VDMTOOLS START Name=OmlLexem KEEP=NO
  public OmlLexem () throws CGException {
    vdm_init_OmlLexem();
  }
// ***** VDMTOOLS END Name=OmlLexem


// ***** VDMTOOLS START Name=getLine KEEP=NO
  public Integer getLine () throws CGException {
    return ivLine;
  }
// ***** VDMTOOLS END Name=getLine


// ***** VDMTOOLS START Name=setLine#1|Integer KEEP=NO
  public void setLine (final Integer pline) throws CGException {
    ivLine = UTIL.NumberToInt(UTIL.clone(pline));
  }
// ***** VDMTOOLS END Name=setLine#1|Integer


// ***** VDMTOOLS START Name=getColumn KEEP=NO
  public Integer getColumn () throws CGException {
    return ivColumn;
  }
// ***** VDMTOOLS END Name=getColumn


// ***** VDMTOOLS START Name=setColumn#1|Integer KEEP=NO
  public void setColumn (final Integer pcolumn) throws CGException {
    ivColumn = UTIL.NumberToInt(UTIL.clone(pcolumn));
  }
// ***** VDMTOOLS END Name=setColumn#1|Integer


// ***** VDMTOOLS START Name=getLexval KEEP=NO
  public Integer getLexval () throws CGException {
    return ivLexval;
  }
// ***** VDMTOOLS END Name=getLexval


// ***** VDMTOOLS START Name=setLexval#1|Integer KEEP=NO
  public void setLexval (final Integer plexval) throws CGException {
    ivLexval = UTIL.NumberToInt(UTIL.clone(plexval));
  }
// ***** VDMTOOLS END Name=setLexval#1|Integer


// ***** VDMTOOLS START Name=getText KEEP=NO
  public String getText () throws CGException {
    return ivText;
  }
// ***** VDMTOOLS END Name=getText


// ***** VDMTOOLS START Name=setText#1|String KEEP=NO
  public void setText (final String ptext) throws CGException {
    ivText = UTIL.ConvertToString(UTIL.clone(ptext));
  }
// ***** VDMTOOLS END Name=setText#1|String


// ***** VDMTOOLS START Name=getIndex KEEP=NO
  public Integer getIndex () throws CGException {
    return ivIndex;
  }
// ***** VDMTOOLS END Name=getIndex


// ***** VDMTOOLS START Name=setIndex#1|Integer KEEP=NO
  public void setIndex (final Integer pindex) throws CGException {
    ivIndex = UTIL.NumberToInt(UTIL.clone(pindex));
  }
// ***** VDMTOOLS END Name=setIndex#1|Integer


// ***** VDMTOOLS START Name=getType KEEP=NO
  public Integer getType () throws CGException {
    return ivType;
  }
// ***** VDMTOOLS END Name=getType


// ***** VDMTOOLS START Name=isReservedWord KEEP=NO
  public Boolean isReservedWord () throws CGException {
    return new Boolean(ivType.intValue() == ILEXEMRESERVEDWORD.intValue());
  }
// ***** VDMTOOLS END Name=isReservedWord


// ***** VDMTOOLS START Name=isIdentifier KEEP=NO
  public Boolean isIdentifier () throws CGException {
    return new Boolean(ivType.intValue() == ILEXEMIDENTIFIER.intValue());
  }
// ***** VDMTOOLS END Name=isIdentifier


// ***** VDMTOOLS START Name=isLineComment KEEP=NO
  public Boolean isLineComment () throws CGException {
    return new Boolean(ivType.intValue() == ILEXEMLINECOMMENT.intValue());
  }
// ***** VDMTOOLS END Name=isLineComment


// ***** VDMTOOLS START Name=isBlockComment KEEP=NO
  public Boolean isBlockComment () throws CGException {
    return new Boolean(ivType.intValue() == ILEXEMBLOCKCOMMENT.intValue());
  }
// ***** VDMTOOLS END Name=isBlockComment


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitLexem((IOmlLexem) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlLexem#6|Integer|Integer|Integer|String|Integer|Integer KEEP=NO
  public OmlLexem (final Integer pline, final Integer pcolumn, final Integer plexval, final String ptext, final Integer pindex, final Integer ptype) throws CGException {

    vdm_init_OmlLexem();
    {

      ivLine = UTIL.NumberToInt(UTIL.clone(pline));
      ivColumn = UTIL.NumberToInt(UTIL.clone(pcolumn));
      ivLexval = UTIL.NumberToInt(UTIL.clone(plexval));
      ivText = UTIL.ConvertToString(UTIL.clone(ptext));
      ivIndex = UTIL.NumberToInt(UTIL.clone(pindex));
      ivType = UTIL.NumberToInt(UTIL.clone(ptype));
    }
  }
// ***** VDMTOOLS END Name=OmlLexem#6|Integer|Integer|Integer|String|Integer|Integer

}
;
