//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlImplicitOperation extends IOmlImplicitOperation {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIdentifier KEEP=NO
  private String ivIdentifier = null;
// ***** VDMTOOLS END Name=ivIdentifier

// ***** VDMTOOLS START Name=ivPatternTypePairList KEEP=NO
  private Vector ivPatternTypePairList = null;
// ***** VDMTOOLS END Name=ivPatternTypePairList

// ***** VDMTOOLS START Name=ivIdentifierTypePairList KEEP=NO
  private Vector ivIdentifierTypePairList = null;
// ***** VDMTOOLS END Name=ivIdentifierTypePairList

// ***** VDMTOOLS START Name=ivTrailer KEEP=NO
  private IOmlOperationTrailer ivTrailer = null;
// ***** VDMTOOLS END Name=ivTrailer


// ***** VDMTOOLS START Name=vdm_init_OmlImplicitOperation KEEP=NO
  private void vdm_init_OmlImplicitOperation () throws CGException {
    try {

      ivIdentifier = UTIL.ConvertToString(new String());
      ivPatternTypePairList = new Vector();
      ivIdentifierTypePairList = new Vector();
      ivTrailer = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlImplicitOperation


// ***** VDMTOOLS START Name=OmlImplicitOperation KEEP=NO
  public OmlImplicitOperation () throws CGException {
    vdm_init_OmlImplicitOperation();
  }
// ***** VDMTOOLS END Name=OmlImplicitOperation


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("ImplicitOperation");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitImplicitOperation((IOmlImplicitOperation) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlImplicitOperation#4|String|Vector|Vector|IOmlOperationTrailer KEEP=NO
  public OmlImplicitOperation (final String p1, final Vector p2, final Vector p3, final IOmlOperationTrailer p4) throws CGException {

    vdm_init_OmlImplicitOperation();
    {

      setIdentifier(p1);
      setPatternTypePairList(p2);
      setIdentifierTypePairList(p3);
      setTrailer((IOmlOperationTrailer) p4);
    }
  }
// ***** VDMTOOLS END Name=OmlImplicitOperation#4|String|Vector|Vector|IOmlOperationTrailer


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("identifier");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIdentifier(UTIL.ConvertToString(data.get(fname)));
    }
    {

      String fname = new String("pattern_type_pair_list");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setPatternTypePairList((Vector) data.get(fname));
    }
    {

      String fname = new String("identifier_type_pair_list");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setIdentifierTypePairList((Vector) data.get(fname));
    }
    {

      String fname = new String("trailer");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setTrailer((IOmlOperationTrailer) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getIdentifier KEEP=NO
  public String getIdentifier () throws CGException {
    return ivIdentifier;
  }
// ***** VDMTOOLS END Name=getIdentifier


// ***** VDMTOOLS START Name=setIdentifier#1|String KEEP=NO
  public void setIdentifier (final String parg) throws CGException {
    ivIdentifier = UTIL.ConvertToString(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifier#1|String


// ***** VDMTOOLS START Name=getPatternTypePairList KEEP=NO
  public Vector getPatternTypePairList () throws CGException {
    return ivPatternTypePairList;
  }
// ***** VDMTOOLS END Name=getPatternTypePairList


// ***** VDMTOOLS START Name=setPatternTypePairList#1|Vector KEEP=NO
  public void setPatternTypePairList (final Vector parg) throws CGException {
    ivPatternTypePairList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setPatternTypePairList#1|Vector


// ***** VDMTOOLS START Name=addPatternTypePairList#1|IOmlNode KEEP=NO
  public void addPatternTypePairList (final IOmlNode parg) throws CGException {
    ivPatternTypePairList.add(parg);
  }
// ***** VDMTOOLS END Name=addPatternTypePairList#1|IOmlNode


// ***** VDMTOOLS START Name=getIdentifierTypePairList KEEP=NO
  public Vector getIdentifierTypePairList () throws CGException {
    return ivIdentifierTypePairList;
  }
// ***** VDMTOOLS END Name=getIdentifierTypePairList


// ***** VDMTOOLS START Name=setIdentifierTypePairList#1|Vector KEEP=NO
  public void setIdentifierTypePairList (final Vector parg) throws CGException {
    ivIdentifierTypePairList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setIdentifierTypePairList#1|Vector


// ***** VDMTOOLS START Name=addIdentifierTypePairList#1|IOmlNode KEEP=NO
  public void addIdentifierTypePairList (final IOmlNode parg) throws CGException {
    ivIdentifierTypePairList.add(parg);
  }
// ***** VDMTOOLS END Name=addIdentifierTypePairList#1|IOmlNode


// ***** VDMTOOLS START Name=getTrailer KEEP=NO
  public IOmlOperationTrailer getTrailer () throws CGException {
    return (IOmlOperationTrailer) ivTrailer;
  }
// ***** VDMTOOLS END Name=getTrailer


// ***** VDMTOOLS START Name=setTrailer#1|IOmlOperationTrailer KEEP=NO
  public void setTrailer (final IOmlOperationTrailer parg) throws CGException {
    ivTrailer = (IOmlOperationTrailer) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setTrailer#1|IOmlOperationTrailer

}
;
