//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2008-11-08 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Fri 24-Oct-2008 08:59:25)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package org.overturetool.potrans;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class OmlIfExpression extends IOmlIfExpression {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=ivIfExpression KEEP=NO
  private IOmlExpression ivIfExpression = null;
// ***** VDMTOOLS END Name=ivIfExpression

// ***** VDMTOOLS START Name=ivThenExpression KEEP=NO
  private IOmlExpression ivThenExpression = null;
// ***** VDMTOOLS END Name=ivThenExpression

// ***** VDMTOOLS START Name=ivElseifExpressionList KEEP=NO
  private Vector ivElseifExpressionList = null;
// ***** VDMTOOLS END Name=ivElseifExpressionList

// ***** VDMTOOLS START Name=ivElseExpression KEEP=NO
  private IOmlExpression ivElseExpression = null;
// ***** VDMTOOLS END Name=ivElseExpression


// ***** VDMTOOLS START Name=vdm_init_OmlIfExpression KEEP=NO
  private void vdm_init_OmlIfExpression () throws CGException {
    try {

      ivIfExpression = null;
      ivThenExpression = null;
      ivElseifExpressionList = new Vector();
      ivElseExpression = null;
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_OmlIfExpression


// ***** VDMTOOLS START Name=OmlIfExpression KEEP=NO
  public OmlIfExpression () throws CGException {
    vdm_init_OmlIfExpression();
  }
// ***** VDMTOOLS END Name=OmlIfExpression


// ***** VDMTOOLS START Name=identity KEEP=NO
  public String identity () throws CGException {
    return new String("IfExpression");
  }
// ***** VDMTOOLS END Name=identity


// ***** VDMTOOLS START Name=accept#1|IOmlVisitor KEEP=NO
  public void accept (final IOmlVisitor pVisitor) throws CGException {
    pVisitor.visitIfExpression((IOmlIfExpression) this);
  }
// ***** VDMTOOLS END Name=accept#1|IOmlVisitor


// ***** VDMTOOLS START Name=OmlIfExpression#4|IOmlExpression|IOmlExpression|Vector|IOmlExpression KEEP=NO
  public OmlIfExpression (final IOmlExpression p1, final IOmlExpression p2, final Vector p3, final IOmlExpression p4) throws CGException {

    vdm_init_OmlIfExpression();
    {

      setIfExpression((IOmlExpression) p1);
      setThenExpression((IOmlExpression) p2);
      setElseifExpressionList(p3);
      setElseExpression((IOmlExpression) p4);
    }
  }
// ***** VDMTOOLS END Name=OmlIfExpression#4|IOmlExpression|IOmlExpression|Vector|IOmlExpression


// ***** VDMTOOLS START Name=init#1|HashMap KEEP=NO
  public void init (final HashMap data) throws CGException {

    {

      String fname = new String("if_expression");
      Boolean cond_4 = null;
      cond_4 = new Boolean(data.containsKey(fname));
      if (cond_4.booleanValue()) 
        setIfExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("then_expression");
      Boolean cond_13 = null;
      cond_13 = new Boolean(data.containsKey(fname));
      if (cond_13.booleanValue()) 
        setThenExpression((IOmlExpression) data.get(fname));
    }
    {

      String fname = new String("elseif_expression_list");
      Boolean cond_22 = null;
      cond_22 = new Boolean(data.containsKey(fname));
      if (cond_22.booleanValue()) 
        setElseifExpressionList((Vector) data.get(fname));
    }
    {

      String fname = new String("else_expression");
      Boolean cond_31 = null;
      cond_31 = new Boolean(data.containsKey(fname));
      if (cond_31.booleanValue()) 
        setElseExpression((IOmlExpression) data.get(fname));
    }
  }
// ***** VDMTOOLS END Name=init#1|HashMap


// ***** VDMTOOLS START Name=getIfExpression KEEP=NO
  public IOmlExpression getIfExpression () throws CGException {
    return (IOmlExpression) ivIfExpression;
  }
// ***** VDMTOOLS END Name=getIfExpression


// ***** VDMTOOLS START Name=setIfExpression#1|IOmlExpression KEEP=NO
  public void setIfExpression (final IOmlExpression parg) throws CGException {
    ivIfExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setIfExpression#1|IOmlExpression


// ***** VDMTOOLS START Name=getThenExpression KEEP=NO
  public IOmlExpression getThenExpression () throws CGException {
    return (IOmlExpression) ivThenExpression;
  }
// ***** VDMTOOLS END Name=getThenExpression


// ***** VDMTOOLS START Name=setThenExpression#1|IOmlExpression KEEP=NO
  public void setThenExpression (final IOmlExpression parg) throws CGException {
    ivThenExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setThenExpression#1|IOmlExpression


// ***** VDMTOOLS START Name=getElseifExpressionList KEEP=NO
  public Vector getElseifExpressionList () throws CGException {
    return ivElseifExpressionList;
  }
// ***** VDMTOOLS END Name=getElseifExpressionList


// ***** VDMTOOLS START Name=setElseifExpressionList#1|Vector KEEP=NO
  public void setElseifExpressionList (final Vector parg) throws CGException {
    ivElseifExpressionList = (Vector) UTIL.ConvertToList(UTIL.clone(parg));
  }
// ***** VDMTOOLS END Name=setElseifExpressionList#1|Vector


// ***** VDMTOOLS START Name=addElseifExpressionList#1|IOmlNode KEEP=NO
  public void addElseifExpressionList (final IOmlNode parg) throws CGException {
    ivElseifExpressionList.add(parg);
  }
// ***** VDMTOOLS END Name=addElseifExpressionList#1|IOmlNode


// ***** VDMTOOLS START Name=getElseExpression KEEP=NO
  public IOmlExpression getElseExpression () throws CGException {
    return (IOmlExpression) ivElseExpression;
  }
// ***** VDMTOOLS END Name=getElseExpression


// ***** VDMTOOLS START Name=setElseExpression#1|IOmlExpression KEEP=NO
  public void setElseExpression (final IOmlExpression parg) throws CGException {
    ivElseExpression = (IOmlExpression) UTIL.clone(parg);
  }
// ***** VDMTOOLS END Name=setElseExpression#1|IOmlExpression

}
;
