<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Needed to make deployment work -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <packaging>pom</packaging>

  <groupId>org.overturetool</groupId>
  <artifactId>root</artifactId>
  <version>2.0.3-SNAPSHOT</version>
  <name>OvertureTool</name>

  <modules>
    <module>core</module>
    <module>tools</module>
    <!--
        The ide module will now be built using Tycho, so lets remove
        it from the main build cycle (as JWC has had trouble
        integrating mixed tycho-maven and pure-maven build setups in
        the past). -jwc/13Feb2013
    -->
    <!-- <module>ide</module> -->
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Add JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>With-IDE</id>
      <modules>
        <module>ide</module>
      </modules>
    </profile>
  </profiles>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <!--
            This plugin allows you to run

            $ mvn versions:set -Dtycho.mode=maven -PWith-IDE -DnewVersion=2.0.4

            and get all the version numbers updated nearly for free.
            The tycho bit on the end just tells tycho (used in the
            eclipse plugin build) to piss off.

            Note that the versions in MANIFEST.MF files, etc, still
            need to be set.

            More details on the versions-maven-plugin are at
            http://mojo.codehaus.org/versions-maven-plugin/
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <configuration>
          <!-- Version control obviates the need for this. -->
          <generateBackupPoms>false</generateBackupPoms>
        </configuration>
      </plugin>
    </plugins>

    <!-- Configuration of plugins for inheriting pom.xml files should
         be in the pluginManagement tag
    -->
    <pluginManagement>
      <plugins>
        <!-- Configure the compiler for all Overture Projects -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.0</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>

        <!-- Attatch sources to all installed jars -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
          <!-- <executions> -->
          <!--   <execution> -->
          <!--     <id>attach-sources</id> -->
          <!--     <goals> -->
          <!--       <goal>jar</goal> -->
          <!--     </goals> -->
          <!--   </execution> -->
          <!-- </executions> -->
          <configuration>
            <attach>true</attach>
          </configuration>
        </plugin>

        <!-- Enable JavaDoc but dont fail on error. This must be disabled for
             the Eclipse project in the IDE -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <failOnError>false</failOnError>
            <quiet>true</quiet>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.13</version>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
	    <!-- required for java7 to avoid verifier errors-->
	    <argLine>-XX:-UseSplitVerifier -Djava.awt.headless=true</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.7</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.1</version>
        </plugin>

        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>2.1.8</version>
          <configuration>
            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          </configuration>
        </plugin>

        <!-- Apparently maven-site-plugin doesn't work with Maven 3 as
             it did in Maven 2.  Do not re-enable this until the
             necessary configuration has been updated per
             http://maven.apache.org/plugins/maven-site-plugin/maven-3.html
             -jwc/28Feb2013
        -->
        <!-- <plugin> -->
        <!--    <groupId>org.apache.maven.plugins</groupId> -->
        <!--    <artifactId>maven-site-plugin</artifactId> -->
        <!--    <version>2.0.1</version> -->
        <!-- </plugin> -->

        <!-- I would love to be using this, but we're more sensitive to
             version numbering than just the pom files. -jwc/28Feb2013
        -->
        <!-- <plugin> -->
        <!--    <groupId>org.apache.maven.plugins</groupId> -->
        <!--    <artifactId>maven-release-plugin</artifactId> -->
        <!--    <version>2.4</version> -->
        <!--    <configuration> -->
        <!--      <tagBase>https://svn.apache.org/repos/asf/maven/components/releases</tagBase> -->
        <!--    </configuration> -->
        <!-- </plugin> -->
      </plugins>
    </pluginManagement>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
  </build>

  <!-- <distributionManagement> -->
  <!-- </distributionManagement> -->

  <scm>
    <url>https://github.com/overturetool/overture</url>
    <connection>scm:git:git://github.com/overturetool/overture.git</connection>
    <developerConnection>scm:git:git@github.com:overturetool/overture.git</developerConnection>
  </scm>

  <developers>
    <developer>
      <id>overture</id>
      <email>info@overturetool.org</email>
      <name>Information contact for the Overture project</name>
      <url>http://overturetool.org/</url>
    </developer>
    <developer>
      <id>jwc</id>
      <email>jwc@eng.au.dk</email>
      <name>Joey Coleman</name>
      <roles>
        <role>Release/Build Manager</role>
      </roles>
      <organization>Aarhus University</organization>
      <organizationUrl>http://eng.au.dk/</organizationUrl>
    </developer>
    <developer>
      <id>lausdahl</id>
      <email>lausdahl@eng.au.dk</email>
      <name>Kenneth Lausdahl</name>
      <roles>
        <role>Architect</role>
        <role>Programmer</role>
      </roles>
      <organization>Aarhus University</organization>
      <organizationUrl>http://eng.au.dk/</organizationUrl>
    </developer>
    <developer>
      <id>nickbattle</id>
      <email>nick.battle@gmail.com</email>
      <name>Nick Battle</name>
      <roles>
        <role>Architect</role>
        <role>Programmer</role>
      </roles>
      <organization>Fujitsu UK</organization>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>GNU General Public License (GPL) version 3</name>
      <url>http://www.gnu.org/licenses/gpl.txt</url>
    </license>
  </licenses>

  <organization>
    <name>The Overture Tool Platform</name>
    <url>http://overturetool.org/</url>
  </organization>
</project>
